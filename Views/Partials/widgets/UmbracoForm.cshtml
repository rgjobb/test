@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels
@{
    var content = (ContentModels.UmbracoForm)Model.Content;
    var settings = (ContentModels.UmbracoFormSettings)Model.Settings;

    var order = (int)ViewData["order"];

    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "white-bg" : backgroundColor + "-bg";

    var containerWidthClass = "container";
    switch (settings.ContainerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container-fluid";
            break;
    }

    var backgroundMediaUrl = settings.BackgroundImage != null ? settings.BackgroundImage.Url() : "";

    if (backgroundMediaUrl != "")
    {
        backgroundColorClass = "";
    }
}


<section class="block form @(backgroundColorClass) @(textColorClass)" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>

    @if (content.PreHeading != "" || content.Heading != "" || content.Text.ToString() != "")
    {
        <div class="block__header">
            @if (content.PreHeading != "")
            {
                <div class="pre-head">@content.PreHeading</div>
            }
            @if (content.Heading != "")
            {
                if (order == 0)
                {
                    <h1>@content.Heading</h1>
                }
                else
                {
                    <h2>@content.Heading</h2>
                }
            }
            @if (content.Text.ToString() != "")
            {
                <div class="block__header-text text-big">
                    @content.Text
                </div>
            }
        </div>
    }

    <div class="block__body">
        <div class="@containerWidthClass">
            @if (content.Form != null)
            {
                @await Umbraco.RenderMacroAsync("renderUmbracoForm", new { FormGuid = content.Form, FormTheme = "igloo", ExcludeScripts = "0" })
            }
        </div>
    </div>

    @if (backgroundMediaUrl != "")
    {
        <div class="block__background lazyload"
             data-bgset="@(backgroundMediaUrl)?upscale=false&width=1200&quality=80 1200w,
    		@(backgroundMediaUrl)?upscale=false&width=1600&quality=80 1600w,
    		@(backgroundMediaUrl)?upscale=false&width=1920&quality=80 1920w"
             data-sizes="auto">
        </div>
    }

</section>