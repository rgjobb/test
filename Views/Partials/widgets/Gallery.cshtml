@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Igloo.Core.Extensions
@{
    var content = (ContentModels.Gallery)Model.Content;
    var settings = (ContentModels.GallerySettings)Model.Settings;

    var removeGutter = settings.RemoveGutter ? "gallery__group--no-gap" : "";
    var animateClass = settings.Animate ? "animate-item" : "";

    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "white-bg" : backgroundColor + "-bg";

    var containerWidthClass = "";
    switch (settings.ContainerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container container--fluid";
            break;
    }

    var images = content.Media;
    var group = Convert.ToInt32(content.Group);
    var groupDec = Convert.ToDecimal(content.Group);
    var imageCount = Convert.ToDecimal(images.Count());
    decimal loopCount = content.SimpleGrid ? 1 : imageCount / groupDec;
}
<section class="block @(settings.Compact ? "block--compact" : "") gallery @(backgroundColorClass)" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>
    <div class="@(containerWidthClass)">
        <div class="row">
            <div class="col-100">
                @if (images != null)
                {
                    for (var i = 0; i < Math.Ceiling(loopCount); i++)
                    {
                        var imageBatch = content.SimpleGrid ? images : images.ToList().Skip(group * i).Take(group);

                        <div class="gallery__group @(content.SimpleGrid ? "gallery__group--grid" : "gallery__group--"+imageBatch.Count()) @removeGutter">
                            @foreach (var mediaItem in imageBatch)
                            {
                                <div class="gallery__item @animateClass">
                                    @if (mediaItem.Url().Contains(".mp4"))
                                    {
                                        <div class="gallery__video">
                                            <video playsinline muted loop autoplay>
                                                <source src="@mediaItem.Url()" type="video/mp4">
                                            </video>
                                        </div>
                                    }
                                    else
                                    {
                                        <figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">

                                            @if (!settings.DisableGalleryZoom)
                                            {

                                                @Html.Raw("<a href=\"" + mediaItem.Url() + "\" itemprop=\"contentUrl\" class=\" gallery__link\" data-size=\"" + mediaItem.ImageCropCalculation() + "\" data-index=\"0\">");
                                            }
                                            <img class="lazyload"
                                                 data-sizes="auto"
                                                 data-srcset="@mediaItem.Url()?width=1000&upscale=false&quality=80 1000w,
        														 @mediaItem.Url()?width=1200&upscale=false&quality=80 1200w,
        														 @mediaItem.Url()?width=1500&upscale=false&quality=80 1500w,
        														 @mediaItem.Url()?width=1800&upscale=false&quality=80 1800w"
                                                 itemprop="thumbnail" alt="">
                                            @if (!settings.DisableGalleryZoom)
                                            {
                                                @Html.Raw("</a>")
                                            }
                                        </figure>
                                    }
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</section>
