<?xml version="1.0" encoding="utf-8"?>
<umbPackage>
  <info>
    <package>
      <name>Igloo</name>
    </package>
  </info>
  <Documents>
    <DocumentSet importMode="root">
      <site id="1299" key="38705685-92f8-412c-a9d6-ef9c180512c3" parentID="-1" level="1" creatorID="-1" sortOrder="0" createDate="2022-07-06T21:53:18" updateDate="2022-07-06T21:55:30" nodeName="Site" urlName="site" path="-1,1299" isDoc="" nodeName-en-us="Site" nodeType="1269" nodeTypeAlias="site" creatorName="Erik Knutsson" writerName="Erik Knutsson" writerID="-1" template="1125" isPublished="true">
        <enableSubHeader lang="en-us">0</enableSubHeader>
        <disableLanguagePicker lang="en-us">0</disableLanguagePicker>
        <languageFlag lang="en-us"><![CDATA[[]]]></languageFlag>
        <metaImage><![CDATA[[]]]></metaImage>
        <hideFromSearchEngines>0</hideFromSearchEngines>
        <sitemapPagePriority><![CDATA[0.5]]></sitemapPagePriority>
        <sitemapPageChangeFrequently><![CDATA[daily]]></sitemapPageChangeFrequently>
        <transparentHeader lang="en-us">0</transparentHeader>
        <umbracoNaviHide>0</umbracoNaviHide>
        <hideFromSearch>0</hideFromSearch>
        <hideHeader>0</hideHeader>
        <hideFooter>0</hideFooter>
        <websiteSettings id="1300" key="1ee81fda-e017-47d6-9368-78d45c463a04" parentID="1299" level="2" creatorID="-1" sortOrder="0" createDate="2022-07-06T21:53:18" updateDate="2022-07-06T21:59:00" nodeName="Settings" urlName="settings" path="-1,1299,1300" isDoc="" nodeName-en-us="Settings" nodeType="1205" nodeTypeAlias="websiteSettings" creatorName="Erik Knutsson" writerName="Erik Knutsson" writerID="-1" template="" isPublished="true">
          <general id="1301" key="4f144bd4-afca-499b-8dbb-65b09db8291c" parentID="1300" level="3" creatorID="-1" sortOrder="0" createDate="2022-07-06T21:53:18" updateDate="2022-07-14T20:51:34" nodeName="General" urlName="general" path="-1,1299,1300,1301" isDoc="" nodeName-en-us="General" nodeType="1206" nodeTypeAlias="general" creatorName="Erik Knutsson" writerName="Erik Knutsson" writerID="-1" template="" isPublished="true">
            <companyLogo><![CDATA[[]]]></companyLogo>
            <enableCookieConsentDialog lang="en-us">0</enableCookieConsentDialog>
            <cookieDialogPostion><![CDATA[float-left]]></cookieDialogPostion>
            <searchGridView>0</searchGridView>
          </general>
          <theme id="1302" key="549c0d69-7506-45ea-9948-404cc5674c8e" parentID="1300" level="3" creatorID="-1" sortOrder="1" createDate="2022-07-06T21:53:18" updateDate="2022-07-07T23:04:47" nodeName="Theme" urlName="theme" path="-1,1299,1300,1302" isDoc="" nodeType="1292" nodeTypeAlias="theme" creatorName="Erik Knutsson" writerName="Erik Knutsson" writerID="-1" template="" isPublished="true">
            <showThemeExplorer>0</showThemeExplorer>
            <headerLogoOnDark><![CDATA[[]]]></headerLogoOnDark>
            <headerLogoOnLight><![CDATA[[]]]></headerLogoOnLight>
            <favicon><![CDATA[[]]]></favicon>
            <appIcon><![CDATA[[]]]></appIcon>
            <themeColor><![CDATA[#3aa5ed]]></themeColor>
            <themeContrast><![CDATA[#FFF]]></themeContrast>
            <themeAltColor><![CDATA[#f35c87]]></themeAltColor>
            <themeAltColorContrast><![CDATA[#FFF]]></themeAltColorContrast>
            <headingColorDark><![CDATA[#111]]></headingColorDark>
            <textColorDark><![CDATA[#444]]></textColorDark>
            <borderDark><![CDATA[rgba(0,0,0,0.08)]]></borderDark>
            <headingColorLight><![CDATA[#FFF]]></headingColorLight>
            <textColorLight><![CDATA[#FFF]]></textColorLight>
            <borderLight><![CDATA[rgba(255,255,255,0.1)]]></borderLight>
            <grayBackground><![CDATA[#F9F9F9]]></grayBackground>
            <darkBackground><![CDATA[#111]]></darkBackground>
            <selectedNavigationItem><![CDATA[#3aa5ed]]></selectedNavigationItem>
            <success><![CDATA[#2ecc71]]></success>
            <error><![CDATA[#e74c3c]]></error>
            <embedFont><![CDATA[<link rel="preconnect" href="https://fonts.gstatic.com"><link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,700;1,400&display=swap" rel="stylesheet">]]></embedFont>
            <headingFont><![CDATA["Roboto", sans-serif]]></headingFont>
            <bodyFont><![CDATA["Roboto", sans-serif]]></bodyFont>
            <textFontSize><![CDATA[1.11rem]]></textFontSize>
            <textBigFontSize><![CDATA[1.25rem]]></textBigFontSize>
            <textSmallFontSize><![CDATA[0.75rem]]></textSmallFontSize>
            <textLineHeight><![CDATA[1.6]]></textLineHeight>
            <textFontWeight><![CDATA[normal]]></textFontWeight>
            <textBigFontWeight><![CDATA[300]]></textBigFontWeight>
            <headingLineHeight><![CDATA[1.5]]></headingLineHeight>
            <headingFontWeight><![CDATA[bold]]></headingFontWeight>
            <heading1FontSize><![CDATA[2.5rem]]></heading1FontSize>
            <heading2FontSize><![CDATA[2.25rem]]></heading2FontSize>
            <heading3FontSize><![CDATA[1.75rem]]></heading3FontSize>
            <heading4FontSize><![CDATA[1.5rem]]></heading4FontSize>
            <heading5FontSize><![CDATA[1.2rem]]></heading5FontSize>
            <heading6FontSize><![CDATA[1rem]]></heading6FontSize>
            <heroHeadingFontSize><![CDATA[3.75rem]]></heroHeadingFontSize>
            <heroHeadingMobileFontSize><![CDATA[2.5rem]]></heroHeadingMobileFontSize>
            <headerBackgroundColor><![CDATA[dark]]></headerBackgroundColor>
            <headerContainerWidth><![CDATA[standard]]></headerContainerWidth>
            <headerLayout><![CDATA[navigation-right]]></headerLayout>
            <headerHeight><![CDATA[70px]]></headerHeight>
            <headerHeightMobile><![CDATA[50px]]></headerHeightMobile>
            <logoPadding><![CDATA[17px]]></logoPadding>
            <logoPaddingMobile><![CDATA[12px]]></logoPaddingMobile>
            <navigationPadding><![CDATA[30px]]></navigationPadding>
            <navigationPaddingSmallerScreens><![CDATA[15px]]></navigationPaddingSmallerScreens>
            <navigationFontSize><![CDATA[0.875rem]]></navigationFontSize>
            <navigationFontSizeMobile><![CDATA[1rem]]></navigationFontSizeMobile>
            <navigationFontWeight><![CDATA[bold]]></navigationFontWeight>
            <footerBackgroundColor><![CDATA[dark]]></footerBackgroundColor>
            <footerContainerWidth><![CDATA[standard]]></footerContainerWidth>
            <containerWidthSmall><![CDATA[850px]]></containerWidthSmall>
            <containerWidth><![CDATA[1300px]]></containerWidth>
            <containerWidthBig><![CDATA[1600px]]></containerWidthBig>
            <gridGutter><![CDATA[30px]]></gridGutter>
            <gridGutterMedium><![CDATA[15px]]></gridGutterMedium>
            <gridGutterSmall><![CDATA[15px]]></gridGutterSmall>
            <gridGutterXS><![CDATA[15px]]></gridGutterXS>
          </theme>
        </websiteSettings>
      </site>
    </DocumentSet>
  </Documents>
  <DocumentTypes>
    <DocumentType Folders="Widgets/Grid/Accordion" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/06a8a294-5815-4692-b270-3b9ef3f15d21">
      <Info>
        <Name>Accordion</Name>
        <Alias>columnAccordion</Alias>
        <Key>e75583e7-d4fb-43ad-b9a7-19e24c9cab94</Key>
        <Icon>icon-list color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Accordion</Name>
          <Alias>accordion</Alias>
          <Key>ab649857-dcf5-4f1a-9ccd-5c45923d894b</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>519a298b-ec72-4084-9146-4a92e4ee46ec</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>56</Id>
          <Key>77da7058-a057-40c4-9dd8-d96a2f845fa1</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Accordion" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/06a8a294-5815-4692-b270-3b9ef3f15d21">
      <Info>
        <Name>Accordion Item</Name>
        <Alias>accordionItem</Alias>
        <Key>2737d440-ebb1-4b84-a8e0-d3da441b495d</Key>
        <Icon>icon-remove color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Header</Name>
          <Alias>header</Alias>
          <Key>b09dfbd7-4c26-4b1f-8957-bbeb87d0509f</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Visible part of the accordion]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>f0da115b-ae26-4b37-be36-94f2f14a3576</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>57</Id>
          <Key>1659dff8-1a06-44fd-be6a-7f70212a217f</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Accordion" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/06a8a294-5815-4692-b270-3b9ef3f15d21">
      <Info>
        <Name>Accordion Settings</Name>
        <Alias>columnAccordionSettings</Alias>
        <Key>7c3885db-6a34-47a0-9f11-68d39911ef95</Key>
        <Icon>icon-list color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>d4e7e773-592e-45ab-aa5d-3ba2a3581f1a</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Boxed Column</Name>
          <Alias>boxedColumn</Alias>
          <Key>c4649471-7bb9-470f-b0ff-737b490224a9</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Mark As FAQ</Name>
          <Alias>markAsFAQ</Alias>
          <Key>456c0628-1dc6-4093-80cd-ffbfb0e69d14</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[A Frequently Asked Question (FAQ) page contains a list of questions and answers pertaining to a particular topic.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>58</Id>
          <Key>d63cd622-b7e7-4e67-a401-a93dbaeb61c1</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Breadcrumbs" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/bd7ef933-8c86-44e0-91ca-d7d8257abd01">
      <Info>
        <Name>Breadcrumbs</Name>
        <Alias>breadcrumbs</Alias>
        <Key>86aae496-d228-4e4b-8da0-6a345ad9c1e1</Key>
        <Icon>icon-path color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>containerWidth</Alias>
          <Key>0fdb4ddb-153f-46fe-9b7d-9fd2cfbe8eca</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>995bbd2c-d2c6-4ea8-acb2-2e97f3f50095</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>59257bd5-657e-45f9-8c7a-023e316738ec</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Center Content</Name>
          <Alias>centerContent</Alias>
          <Key>7dbaf63b-1a6d-486b-93d7-8a0f0459ca7c</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>60</Id>
          <Key>dee55bd1-821f-45cc-bf53-78f187bbea7d</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Navigation" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/a6288430-d867-41ac-898c-4303418c1dfe">
      <Info>
        <Name>Big Navigation</Name>
        <Alias>bigNavigationItem</Alias>
        <Key>405b2bf6-f99b-4a73-9e4c-b69559b10add</Key>
        <Icon>icon-pushpin color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Name</Name>
          <Alias>navName</Alias>
          <Key>5a51477f-dc8a-49e9-9c7f-f8c74be929e9</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Link</Name>
          <Alias>navLink</Alias>
          <Key>4ee009b0-edec-4ec1-8cae-94d892e9a792</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>ded9b564-0a63-4fe5-84bf-606d84e5d55e</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Navigation Grid</Name>
          <Alias>navigationGrid</Alias>
          <Key>a4b9cb38-7931-4343-9dda-77ab077b953b</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>7a2cdb0d-0ef4-4ec4-946a-100ec591147a</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>59</Id>
          <Key>a1e58c30-244c-44ec-bf31-97317f895f82</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Shared" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/465075eb-bfc3-421c-bb89-19536a0cdfe7">
      <Info>
        <Name>Button</Name>
        <Alias>button</Alias>
        <Key>40c9bce0-d361-4fbe-bc99-0aa78e403bcc</Key>
        <Icon>icon-link color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>buttonText</Alias>
          <Key>f692e7af-3061-47e4-8498-a430c117980c</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Link</Name>
          <Alias>buttonLink</Alias>
          <Key>992fa689-1410-4e84-b3d5-211e244b6aa5</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>ded9b564-0a63-4fe5-84bf-606d84e5d55e</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>True</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Color</Name>
          <Alias>buttonColor</Alias>
          <Key>b2339efc-3eeb-4995-b8bc-23fb30ac8e20</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>84cfeaea-7c19-4bc1-a69f-51c0d38215c2</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Size</Name>
          <Alias>buttonSize</Alias>
          <Key>7c04c9f7-f9f0-4d8e-ad44-ff12bc48a40b</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>b732e22b-fbe1-4861-873e-b8b9e2b8c1d6</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Style</Name>
          <Alias>style</Alias>
          <Key>3ad9ed6b-34f5-4af0-ae85-a05f19c842e6</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>34139324-442d-4453-96d4-59bfc1e0c3dc</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>61</Id>
          <Key>e0b3197a-f5c9-4f2e-b319-6fc30ab98c7d</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Button" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/33bc8101-0b2e-4d2d-9a32-4221f08380e2">
      <Info>
        <Name>Button</Name>
        <Alias>columnButton</Alias>
        <Key>2837c09e-0f5d-4f45-a54f-7d916c78b624</Key>
        <Icon>icon-tactics color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Buttons</Name>
          <Alias>buttons</Alias>
          <Key>ae4ee585-2134-4f50-bc18-24fbbbb00e41</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>69bc5d28-8798-44fc-9369-9e9763028592</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>62</Id>
          <Key>75c5a86a-95bb-4d3e-8fcc-b1a5be29f78e</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Button" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/33bc8101-0b2e-4d2d-9a32-4221f08380e2">
      <Info>
        <Name>Button Settings</Name>
        <Alias>columnButtonSettings</Alias>
        <Key>dc62c23f-3370-416e-9842-e137404eefbb</Key>
        <Icon>icon-tactics color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>66e3d1bc-d1fd-4cbd-9486-c49610a64c9c</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Align Content</Name>
          <Alias>alignContent</Alias>
          <Key>aec8058a-6b5f-443c-a20e-4089352b4d07</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>70b5690f-87e8-47e3-a346-487e1adca9eb</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>63</Id>
          <Key>cfaea5e0-4fc4-4f46-b6cb-dfc12156f530</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Card" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/96d79bfc-50ff-4f83-bcf0-bb64893a8569">
      <Info>
        <Name>Card</Name>
        <Alias>columnCard</Alias>
        <Key>7d9b889c-a1ec-439f-ab8a-5751cdcd1bc8</Key>
        <Icon>icon-pictures-alt-2 color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>58275a82-855b-43ea-b262-9e8a18ebaaf1</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>c5c0db91-acf5-4cf9-9e5c-af1b00358dd5</Key>
          <Type>Umbraco.TextArea</Type>
          <Definition>c6bac0dd-4ab9-45b1-8e30-e4b619ee5da3</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background</Name>
          <Alias>background</Alias>
          <Key>639cdd44-6394-4066-875c-4c602d174d4f</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Link</Name>
          <Alias>link</Alias>
          <Key>451b41b0-fa37-415e-9be1-a405171529ae</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>ded9b564-0a63-4fe5-84bf-606d84e5d55e</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Link the entire card, can not be used together with buttons]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Buttons</Name>
          <Alias>buttons</Alias>
          <Key>c21995cd-367b-436f-a6de-0930658c7044</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>69bc5d28-8798-44fc-9369-9e9763028592</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>64</Id>
          <Key>c0203326-0abe-436c-8d1e-d738dc722603</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Card" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/96d79bfc-50ff-4f83-bcf0-bb64893a8569">
      <Info>
        <Name>Card Settings</Name>
        <Alias>columnCardSettings</Alias>
        <Key>dd238527-6f11-4ae5-a6e1-82ed10973c80</Key>
        <Icon>icon-pictures-alt-2 color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>d354da60-14c2-4f86-aca7-e3a8e7880284</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Height</Name>
          <Alias>height</Alias>
          <Key>f9b68c78-f14a-44a4-bf27-228c25bdba37</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>35b8f870-24ec-4b5c-81f3-03ef5a755c31</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Size</Name>
          <Alias>textSize</Alias>
          <Key>bc4485ea-3d13-48d7-8166-cd4892f5aee5</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>52bfff5a-a819-4627-949d-8b5736d31cb6</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Horizontal Text Alignment</Name>
          <Alias>horizontalTextAlignment</Alias>
          <Key>cd0e00cd-c2d4-4eea-a583-6ad42b9b3f92</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>70b5690f-87e8-47e3-a346-487e1adca9eb</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Vertical Text Alignment</Name>
          <Alias>verticalTextAlignment</Alias>
          <Key>88e1cceb-e5e7-4529-8b21-82d2aae4d192</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>f4bff246-8d6e-43a4-88c1-379bacba7377</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>9b07c7e0-b864-492b-b671-f92bdc4be9f4</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Overlay Strength</Name>
          <Alias>overlayStrength</Alias>
          <Key>c33ce4d0-11ea-4907-a1a3-b6992f95e032</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>c9c4631b-7987-40d5-aa06-a8da7cc783ff</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Will be light or dark depending on text color. Leave empty to not show the overlay]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>65</Id>
          <Key>936c40c6-2ec8-4fc5-8478-6d33bb9d4526</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Code" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/c2d09055-d5b4-4372-b241-4dadb085ce0a">
      <Info>
        <Name>Code</Name>
        <Alias>columnCode</Alias>
        <Key>4d69a51a-9228-47bd-889a-a096cc462494</Key>
        <Icon>icon-code color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Code</Name>
          <Alias>code</Alias>
          <Key>89e9c1ec-1d5e-4c74-8cad-f40e5e4e8b18</Key>
          <Type>Umbraco.TextArea</Type>
          <Definition>c6bac0dd-4ab9-45b1-8e30-e4b619ee5da3</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>66</Id>
          <Key>13398aff-041f-46b5-af73-179014385504</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Footer/Code" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f5430bd6-879f-41a4-939c-11bba89b532f/fd71e3ee-85f9-4592-aeae-278a86e98e13">
      <Info>
        <Name>Code</Name>
        <Alias>footerCode</Alias>
        <Key>96653479-502e-4b35-80db-b284f009660b</Key>
        <Icon>icon-code color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Code</Name>
          <Alias>code</Alias>
          <Key>60584a8b-827a-4119-ae6d-831a3bd65794</Key>
          <Type>Umbraco.TextArea</Type>
          <Definition>c6bac0dd-4ab9-45b1-8e30-e4b619ee5da3</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>67</Id>
          <Key>175efc59-e978-4681-bd11-75c4b42cf63a</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Footer/Code" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f5430bd6-879f-41a4-939c-11bba89b532f/fd71e3ee-85f9-4592-aeae-278a86e98e13">
      <Info>
        <Name>Code Settings</Name>
        <Alias>footerCodeSettings</Alias>
        <Key>400528d9-878f-460a-b524-33ffe4f609b2</Key>
        <Icon>icon-code color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>ed64da34-43a9-4a55-8ec7-db3610c2d2e7</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Alias</Name>
          <Alias>alias</Alias>
          <Key>94be99ae-9173-4688-b1fb-665db8c3879f</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only used for display purposes]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>68</Id>
          <Key>e3b59de9-0f0c-4475-b8e8-e393f7de2ba6</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Code" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/c2d09055-d5b4-4372-b241-4dadb085ce0a">
      <Info>
        <Name>Code Settings</Name>
        <Alias>columnCodeSettings</Alias>
        <Key>0dc099b3-93f5-4efc-9b63-59dbbe3ea2b2</Key>
        <Icon>icon-code color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>84aa9d75-f960-4696-99fd-a1a28c2c873f</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Alias</Name>
          <Alias>alias</Alias>
          <Key>d53825e7-a7d8-487b-8c70-8c7667859e26</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only used for display purposes]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>69</Id>
          <Key>2caf918b-3111-4f15-a667-acb6397e45bc</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Footer/Contact" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f5430bd6-879f-41a4-939c-11bba89b532f/66c5562f-d105-4c1e-b9be-8258c6ee98eb">
      <Info>
        <Name>Contact</Name>
        <Alias>footerContact</Alias>
        <Key>b76c2c24-eed7-486c-992f-bf822ebd0c44</Key>
        <Icon>icon-pin-location color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>3b7b0cdf-72b5-49ea-9889-149da9edbf8b</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Address</Name>
          <Alias>address</Alias>
          <Key>2fcbd4cb-08c5-4213-80eb-0ec35d28df8b</Key>
          <Type>Umbraco.TextArea</Type>
          <Definition>c6bac0dd-4ab9-45b1-8e30-e4b619ee5da3</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Phone</Name>
          <Alias>phone</Alias>
          <Key>59d257f6-9b6e-4a5c-b6a9-86310fe2be8e</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Email</Name>
          <Alias>email</Alias>
          <Key>68ab39d2-c874-44f8-9e28-f95d6ae36434</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>70</Id>
          <Key>e419fd44-62c1-44b8-b262-512d5961595e</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Contact+Form" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f368b226-9c9d-411d-b287-0b91afb7c39a">
      <Info>
        <Name>Contact Form</Name>
        <Alias>contactForm</Alias>
        <Key>b6cc6342-7e07-4f50-b9e2-9885cb30afd7</Key>
        <Icon>icon-message color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Pre Heading</Name>
          <Alias>preHeading</Alias>
          <Key>63f43c9d-30a8-4ad3-8758-98eea257e571</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>b71435e6-a357-4865-ac13-bd35134e9782</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>03a91305-dabc-4c6f-85f1-d9844d756f7e</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Message Sent Text</Name>
          <Alias>messageSentText</Alias>
          <Key>c6fb87aa-55e3-46a3-8aaf-25a3b5c17a65</Key>
          <Type>Umbraco.TextArea</Type>
          <Definition>c6bac0dd-4ab9-45b1-8e30-e4b619ee5da3</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[This text is shown after the form has been submitted]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>71</Id>
          <Key>93ee2038-63ff-4e19-a96f-13f38271dc43</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Contact+Form" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f368b226-9c9d-411d-b287-0b91afb7c39a">
      <Info>
        <Name>Contact Form Settings</Name>
        <Alias>contactFormSettings</Alias>
        <Key>e3f0d8eb-2d79-47a6-be02-c4ef39fad55e</Key>
        <Icon>icon-message color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>08ab5f6c-f743-4358-bd5c-7f54b98f9992</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>3e721d7c-c978-4781-aead-87ac7b6e135a</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>containerWidth</Alias>
          <Key>5fc8529c-6a3f-47ad-9e68-a0d1d84d53d1</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Image</Name>
          <Alias>backgroundImage</Alias>
          <Key>949524cc-db5b-4a7b-91c7-48fc24f0642b</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>93517ef9-7da4-462a-8e65-8369cdf24d44</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>72</Id>
          <Key>e93d15f6-d017-4d61-8c8b-da48f399d649</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Footer/Contact" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f5430bd6-879f-41a4-939c-11bba89b532f/66c5562f-d105-4c1e-b9be-8258c6ee98eb">
      <Info>
        <Name>Contact Settings</Name>
        <Alias>footerContactSettings</Alias>
        <Key>7e62e411-c121-493f-aed6-85c7d3f2f4c9</Key>
        <Icon>icon-pin-location color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>52db81bd-3a27-4646-b16d-bf5870ccb2ad</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Align Content</Name>
          <Alias>alignContent</Alias>
          <Key>53747456-e725-4355-bf4e-ee2308100fba</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>70b5690f-87e8-47e3-a346-487e1adca9eb</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>73</Id>
          <Key>0b1aa566-50f4-4486-aa1a-5531eb2e9c70</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Base" FolderKeys="36512fe6-a88c-4ead-87f3-153733074e2c">
      <Info>
        <Name>Feed</Name>
        <Alias>feed</Alias>
        <Key>74dd78ae-5b40-46a1-a0fe-18f8c5ec62ce</Key>
        <Icon>icon-newspaper-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description>Holds a collection of posts, perfect for blog or news</Description>
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>True</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Compositions>
          <Composition>sEO</Composition>
          <Composition>settings</Composition>
        </Compositions>
        <AllowedTemplates>
          <Template>Feed</Template>
        </AllowedTemplates>
        <DefaultTemplate>Feed</DefaultTemplate>
      </Info>
      <Structure>
        <DocumentType>post</DocumentType>
      </Structure>
      <GenericProperties>
        <GenericProperty>
          <Name>Widgets</Name>
          <Alias>widgets</Alias>
          <Key>f5b52b5c-40cc-4f28-af5d-6bd1d38ec2d3</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>e52e988a-65e8-45b0-87d7-dfa013357177</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Add content above the list of posts by choosing different widgets. You can modify and sort each widget in different ways to make up the design]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide Dates</Name>
          <Alias>hideDates</Alias>
          <Key>f9928fc4-e1f0-4674-ae13-860e25fd5c22</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="settings">Settings</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Hides the date from posts created in this feed]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide Share Buttons</Name>
          <Alias>hideShareButtons</Alias>
          <Key>ef3e556d-5ead-401a-b628-2e4c09363ff9</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="settings">Settings</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Removes the share buttons from posts created in this feed]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>76</Id>
          <Key>88c3727d-d2a3-4165-9fbb-eed8b946f448</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
        <Tab>
          <Id>77</Id>
          <Key>a1f82ad8-5c1e-4790-ad21-1bd89efe4cab</Key>
          <Type>Group</Type>
          <Caption>Settings</Caption>
          <Alias>settings</Alias>
          <SortOrder>90</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Compositions" FolderKeys="df1791f2-01d4-47db-9a17-727c5d32b5f5">
      <Info>
        <Name>Footer</Name>
        <Alias>footer</Alias>
        <Key>b9f5096c-5d96-4f2a-8e09-adb3bb06f937</Key>
        <Icon>icon-footprints color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Footer Columns</Name>
          <Alias>footerColumns</Alias>
          <Key>c4ac7515-1a41-4dea-92b6-bfea6a9b5d8b</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>c1827e31-bbb9-4873-8baf-f74e14e2f9cc</Definition>
          <Tab Alias="footer">Footer</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Bottom Text</Name>
          <Alias>bottomText</Alias>
          <Key>04a54587-ddd1-44a4-8e0e-7b3f37e37425</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="footer">Footer</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Small text visible in the bottom of the footer]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>78</Id>
          <Key>e9556634-0dd6-4203-af99-65f3536ba0d1</Key>
          <Type>Group</Type>
          <Caption>Footer</Caption>
          <Alias>footer</Alias>
          <SortOrder>110</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Gallery" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/b3f39ba8-e37f-4e3c-9b83-572e79ac8013">
      <Info>
        <Name>Gallery</Name>
        <Alias>gallery</Alias>
        <Key>ce7a82e6-ae7e-42d1-93b5-4ad9a63adea3</Key>
        <Icon>icon-pictures-alt-2 color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Media</Name>
          <Alias>media</Alias>
          <Key>89d77162-caba-4c27-80ee-607345fa8733</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>1b661f40-2242-4b44-b9cb-3990ee2b13c0</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Group</Name>
          <Alias>group</Alias>
          <Key>62748492-3181-4298-bab4-895419260e38</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>832cf79a-85c5-4bce-b481-32fd19df842d</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Place your gallery images in groups between 1-8. If 10 images are added and the group is set to 8, the widget will display one 8 group and one 2 group]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Simple Grid</Name>
          <Alias>simpleGrid</Alias>
          <Key>28868c77-378f-4b4f-be04-a010ac93ac89</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[This will ignore the group setting above and display the images in a square grid width 4 images on each row]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>79</Id>
          <Key>2fb1b620-ae60-492a-9696-fb7ce139216d</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Gallery" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/b3f39ba8-e37f-4e3c-9b83-572e79ac8013">
      <Info>
        <Name>Gallery Settings</Name>
        <Alias>gallerySettings</Alias>
        <Key>f7c9b96c-df58-4731-b5b3-6b68889f143f</Key>
        <Icon>icon-pictures-alt-2 color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Alias</Name>
          <Alias>alias</Alias>
          <Key>d4b95acf-869a-4cf9-8e35-cc470c003fd2</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only used for display purposes]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>containerWidth</Alias>
          <Key>43db31aa-1bc6-4748-90dc-91e6a547c060</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Compact</Name>
          <Alias>compact</Alias>
          <Key>e0e4f4b5-4ae2-4d8e-aa2c-7b94ae03d498</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Removes the space over and under the gallery]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Remove Gutter</Name>
          <Alias>removeGutter</Alias>
          <Key>996fc49b-10b7-435d-8f5e-6b2308befe3c</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Removes the space between images]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Disable Gallery Zoom</Name>
          <Alias>disableGalleryZoom</Alias>
          <Key>a31c226a-8a90-465c-bdff-6cf47a77b408</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Images will not be clickable]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>13593765-ade7-4956-a6fd-b61e1f9dcc41</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Animate</Name>
          <Alias>animate</Alias>
          <Key>1944719c-8f88-4a54-8f58-b79a0018aabe</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Intro animation when widget is visible]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>aba854f8-10ba-42c5-9fb3-55d0f34ccd76</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>80</Id>
          <Key>3ea184dd-57bc-4a7b-a143-1dcf7545ddad</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Base" FolderKeys="36512fe6-a88c-4ead-87f3-153733074e2c">
      <Info>
        <Name>Settings</Name>
        <Alias>websiteSettings</Alias>
        <Key>c7eea93e-5ab4-41c5-aa9f-78713787df27</Key>
        <Icon>icon-settings color-blue</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description>Holds all settings nodes for your site</Description>
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure>
        <DocumentType>general</DocumentType>
        <DocumentType>theme</DocumentType>
      </Structure>
      <GenericProperties />
      <Tabs />
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType>
      <Info>
        <Name>General</Name>
        <Alias>general</Alias>
        <Key>1a9f6a9e-6364-470b-997c-75fe443e391c</Key>
        <Icon>icon-globe-alt color-blue</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description>General settings for site</Description>
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Master>websiteSettings</Master>
        <Compositions>
          <Composition>websiteSettings</Composition>
        </Compositions>
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Title Signature</Name>
          <Alias>titleSignature</Alias>
          <Key>66dfe96c-77ce-4a1b-87d3-e39a43aa0759</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="general">General</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[This text will be added at the end of the title on all pages]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Twitter Username</Name>
          <Alias>twitterUsername</Alias>
          <Key>f841de07-77ec-4391-959b-7cbba8e321ff</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="general">General</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Enter twitter username. Include @ in the beginning]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Contact Form Email</Name>
          <Alias>contactFormEmail</Alias>
          <Key>4dbf75b2-b9da-4786-8250-4a90d411b7b2</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="general">General</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Email that contact form sends to.]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Contact Form Subject</Name>
          <Alias>contactFormSubject</Alias>
          <Key>e27791c3-6224-4766-ac0c-ba89db9640aa</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="general">General</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Email subject sent to site owner from contact form.]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>404 Page</Name>
          <Alias>error404Page</Alias>
          <Key>8635fa2f-6935-4395-8bc7-de27287baca2</Key>
          <Type>Umbraco.ContentPicker</Type>
          <Definition>fd1e0da5-5606-4862-b679-5d0cf3a52a59</Definition>
          <Tab Alias="general">General</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Page shown if the requested url does not match any document.]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Company Name</Name>
          <Alias>companyName</Alias>
          <Key>7afe954f-b6d4-4600-b1ce-ee5c97bf9a42</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="sEO">SEO</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Site Name</Name>
          <Alias>siteName</Alias>
          <Key>6f525781-fcee-4df4-8a40-faac560a8e29</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="sEO">SEO</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Company or website name]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Company Logo</Name>
          <Alias>companyLogo</Alias>
          <Key>2f60dddb-49df-4910-90fc-5ff15b29c19e</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="sEO">SEO</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[The image must be in .jpg, .png, or. gif format. Minimum 112x112px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Phone Number</Name>
          <Alias>companyPhoneNumber</Alias>
          <Key>04d8d9f7-26df-42dd-8da3-db87094a67d8</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="sEO">SEO</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[A business phone number meant to be the primary contact method for customers. Be sure to include the country code and area code in the phone number.]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Email</Name>
          <Alias>companyEmail</Alias>
          <Key>35b97b59-c5c0-4cea-9f78-09c03c37f3dd</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="sEO">SEO</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Primary email contact for customers]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Latitude</Name>
          <Alias>companyLatitude</Alias>
          <Key>b1e70958-4bbe-44e4-9980-f50beb73a099</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="sEO">SEO</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Longitude</Name>
          <Alias>companyLongitude</Alias>
          <Key>35aaf673-48a2-421e-837f-f570147cf020</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="sEO">SEO</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Email Marketing Provider</Name>
          <Alias>newsletterEmailMarketingProvider</Alias>
          <Key>afc04398-092a-443c-adfa-cb6d77a77233</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>41796c33-e07a-4eb7-aa6c-2617d0af0b9b</Definition>
          <Tab Alias="newsletter">Newsletter</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>API Key</Name>
          <Alias>newsletterAPIKey</Alias>
          <Key>17c9ffe3-81f9-428c-8957-b0c19dc2edf4</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="newsletter">Newsletter</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Default Subscriber List ID</Name>
          <Alias>newsletterDefaultSubscriberListID</Alias>
          <Key>63390511-9e2f-4f25-9508-5dcb9c18649f</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="newsletter">Newsletter</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Username</Name>
          <Alias>instagramUsername</Alias>
          <Key>046df6da-c973-4772-b590-b9ed151e2f55</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="instagram">Instagram</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Your instagram username without @]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Access Token</Name>
          <Alias>instagramAccessToken</Alias>
          <Key>9f525cf4-4962-4418-a927-0884c56cb5ee</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="instagram">Instagram</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Enable Cookie Consent Dialog</Name>
          <Alias>enableCookieConsentDialog</Alias>
          <Key>1ecb4f73-8929-4423-a9b2-d5709664cdf9</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="cookieConsent">Cookie Consent</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>cookieDialogText</Alias>
          <Key>44acded5-d30f-4758-b121-1b3456aa7f23</Key>
          <Type>Umbraco.TextArea</Type>
          <Definition>c6bac0dd-4ab9-45b1-8e30-e4b619ee5da3</Definition>
          <Tab Alias="cookieConsent">Cookie Consent</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Learn More Link</Name>
          <Alias>cookieDialogLearnMoreLink</Alias>
          <Key>9230d788-05f0-4378-85d3-d32ddee13b42</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>ded9b564-0a63-4fe5-84bf-606d84e5d55e</Definition>
          <Tab Alias="cookieConsent">Cookie Consent</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Dismiss Button Text</Name>
          <Alias>dismissButtonText</Alias>
          <Key>d3b858ff-707f-47e6-968c-b2724aff3c3f</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="cookieConsent">Cookie Consent</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Theme</Name>
          <Alias>cookieDialogTheme</Alias>
          <Key>1cbc40dc-2d9b-41c6-9cfa-144b861c20da</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>1b288bec-2cf1-42f0-a445-97bed308e0f3</Definition>
          <Tab Alias="cookieConsent">Cookie Consent</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Postion</Name>
          <Alias>cookieDialogPostion</Alias>
          <Key>1bd3e803-5f2a-44c0-b367-fe48fae54738</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>c631ac82-9d68-4a38-bf50-7e59676ef8fe</Definition>
          <Tab Alias="cookieConsent">Cookie Consent</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Grid View</Name>
          <Alias>searchGridView</Alias>
          <Key>1f42e3b8-3278-4d4b-b4a7-58d1da17d3d7</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="search">Search</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Show search results in a grid instead of list. This will also display the SEO image]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Page Result Amount</Name>
          <Alias>searchPageAmount</Alias>
          <Key>67d061c6-3b3f-465b-9efc-475db361e875</Key>
          <Type>Umbraco.Integer</Type>
          <Definition>2e6d3631-066e-44b8-aec4-96f09099b2b5</Definition>
          <Tab Alias="search">Search</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Amount of results to be displayed per page on the search page.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Google Analytics ID</Name>
          <Alias>googleAnalyticsID</Alias>
          <Key>2a39bc6b-ee78-4c43-a0dc-73f3e348ede5</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="trackingAccess">Tracking &amp; Access</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[UA-XXXXX-X or G-XXXXXXXXXX]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Google Tag Manager ID</Name>
          <Alias>googleTagManagerID</Alias>
          <Key>8e218479-a2ab-422f-949c-da3f14e4e9ac</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="trackingAccess">Tracking &amp; Access</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[GTM-XXXXXXX]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Google Maps API Key</Name>
          <Alias>googleMapsAPIKey</Alias>
          <Key>eff16b81-fda9-48d9-9828-47eb91abf545</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="trackingAccess">Tracking &amp; Access</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[This is needed to use the map widget]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Disqus Shortname</Name>
          <Alias>disqusShortname</Alias>
          <Key>b1ed9315-a052-433a-a599-7c4203d6d71a</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="trackingAccess">Tracking &amp; Access</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[To enable comments, add your Disqus shortname]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hotjar ID</Name>
          <Alias>hotjarID</Alias>
          <Key>8d16e165-11fd-4b3e-9bf4-59dee8bdfb34</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="trackingAccess">Tracking &amp; Access</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Hotjar site unique identifier]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Logout Redirect</Name>
          <Alias>logoutRedirect</Alias>
          <Key>2a313a4a-7ccd-461e-bbab-cb9e070ef75e</Key>
          <Type>Umbraco.ContentPicker</Type>
          <Definition>fd1e0da5-5606-4862-b679-5d0cf3a52a59</Definition>
          <Tab Alias="member">Member</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Page redirected to after user has logged out.]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>81</Id>
          <Key>c23cb664-a3ab-43cf-a5eb-8f8e9d51620d</Key>
          <Type>Group</Type>
          <Caption>General</Caption>
          <Alias>general</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
        <Tab>
          <Id>82</Id>
          <Key>235d1f0c-c4f3-4c11-8130-daf2d2c2a645</Key>
          <Type>Group</Type>
          <Caption>SEO</Caption>
          <Alias>sEO</Alias>
          <SortOrder>1</SortOrder>
        </Tab>
        <Tab>
          <Id>83</Id>
          <Key>3101ee54-9690-4078-9969-cfb3fea04657</Key>
          <Type>Group</Type>
          <Caption>Newsletter</Caption>
          <Alias>newsletter</Alias>
          <SortOrder>2</SortOrder>
        </Tab>
        <Tab>
          <Id>84</Id>
          <Key>48297a0d-438b-425c-b43c-8b9aa3a6d76b</Key>
          <Type>Group</Type>
          <Caption>Instagram</Caption>
          <Alias>instagram</Alias>
          <SortOrder>3</SortOrder>
        </Tab>
        <Tab>
          <Id>85</Id>
          <Key>0b529717-a11c-4611-b1f1-418e9aedabd1</Key>
          <Type>Group</Type>
          <Caption>Cookie Consent</Caption>
          <Alias>cookieConsent</Alias>
          <SortOrder>4</SortOrder>
        </Tab>
        <Tab>
          <Id>86</Id>
          <Key>dedfd5c5-a193-4d28-843f-514fc65eeb12</Key>
          <Type>Group</Type>
          <Caption>Search</Caption>
          <Alias>search</Alias>
          <SortOrder>5</SortOrder>
        </Tab>
        <Tab>
          <Id>87</Id>
          <Key>8d8088d9-c5df-4954-84b1-a9fd98f85cb1</Key>
          <Type>Group</Type>
          <Caption>Tracking &amp; Access</Caption>
          <Alias>trackingAccess</Alias>
          <SortOrder>6</SortOrder>
        </Tab>
        <Tab>
          <Id>88</Id>
          <Key>82dfc6ef-778d-483b-92d8-1e50a8fc772c</Key>
          <Type>Group</Type>
          <Caption>Member</Caption>
          <Alias>member</Alias>
          <SortOrder>7</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Base" FolderKeys="36512fe6-a88c-4ead-87f3-153733074e2c">
      <Info>
        <Name>Global Content Holder</Name>
        <Alias>globalContentHolder</Alias>
        <Key>0e306271-8d28-48f8-b34d-857d907b79df</Key>
        <Icon>icon-folder color-orange</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description>Holds a collection of Global Content nodes that can be reused on multiple pages</Description>
        <AllowAtRoot>True</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure>
        <DocumentType>globalContent</DocumentType>
      </Structure>
      <GenericProperties />
      <Tabs />
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType>
      <Info>
        <Name>Global Content</Name>
        <Alias>globalContent</Alias>
        <Key>290b3388-57b3-461a-b466-c1cb8b23a5a0</Key>
        <Icon>icon-thumbnail-list color-orange</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description>Holds content widgets that can be used on multiple pages by pointing to them with the Global Content widget</Description>
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Master>globalContentHolder</Master>
        <Compositions>
          <Composition>globalContentHolder</Composition>
        </Compositions>
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Widgets</Name>
          <Alias>widgets</Alias>
          <Key>a47505b8-a932-4c1d-ba6e-302d72f9e61e</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>e52e988a-65e8-45b0-87d7-dfa013357177</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>89</Id>
          <Key>11b1f640-c1e6-46ee-883a-bfbb7110f417</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Global+Content" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/88cf8423-c224-4cb4-9c2e-18d05e2584bb">
      <Info>
        <Name>Global Content</Name>
        <Alias>globalContentPicker</Alias>
        <Key>2dea4559-e7f4-43c9-b555-89905254e4c2</Key>
        <Icon>icon-thumbnail-list color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Alias</Name>
          <Alias>alias</Alias>
          <Key>9a3e3112-973f-4da7-b3f4-e15d3ff79140</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only used for display purposes]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Global Content</Name>
          <Alias>globalContent</Alias>
          <Key>2fdfef7e-40f0-4313-8535-b791aaec27d8</Key>
          <Type>Umbraco.MultiNodeTreePicker</Type>
          <Definition>e44641d3-fb9a-40a6-99f4-4ced0d4e27d0</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Select the Global Content you wish to display]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>90</Id>
          <Key>7fddfefc-24a4-4a14-8d97-9e60b1d9bbe9</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38">
      <Info>
        <Name>Grid</Name>
        <Alias>grid</Alias>
        <Key>e2514343-a1ac-4add-9c94-0144155314e1</Key>
        <Icon>icon-grid color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Columns</Name>
          <Alias>columns</Alias>
          <Key>41a4552a-f1f8-4ab4-826a-c5d9df496365</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>469835c1-85cf-4c69-9adf-abe321ae0c19</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Add content to the grid by choosing different columns. Control the layout by selecting the width of each column and using the options in the settings section.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>91</Id>
          <Key>eec1d480-3501-4554-bf8e-aa26eb41728b</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38">
      <Info>
        <Name>Grid Settings</Name>
        <Alias>gridSettings</Alias>
        <Key>8ce0cf7e-d7ac-44e9-9a41-43b1c2b5e218</Key>
        <Icon>icon-grid color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Alias</Name>
          <Alias>alias</Alias>
          <Key>6b72bde7-afba-4416-a0dd-1bff725ce9d0</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only used for display purposes]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>containerWidth</Alias>
          <Key>57c0c9b8-ced1-4898-b86d-4852f2488494</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Remove Column Gutter</Name>
          <Alias>removeColumnGutter</Alias>
          <Key>9ba36c58-f690-4679-91db-c9c9e420545d</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Removes the space between and under columns]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Compact</Name>
          <Alias>compact</Alias>
          <Key>89464c2d-0188-4455-8df8-d2fb6825590e</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Removes the extra padding over and under the Grid]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Horizontal Align Columns</Name>
          <Alias>horizontalAlignColumns</Alias>
          <Key>bf4dcb1b-9071-4964-941b-a343db082e11</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>5099d81b-7b38-4c8c-8c14-802c86fe2a31</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Vertical Align Columns</Name>
          <Alias>verticalAlignColumns</Alias>
          <Key>50253ec8-4227-4318-b46c-5b8e6df035d6</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>c2ba2f72-e94f-434c-ac20-de4ee6230183</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Image</Name>
          <Alias>backgroundImage</Alias>
          <Key>6ec76c3e-0865-4bfb-a4fb-6cb5a2446952</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>9024d857-9524-47d4-a0f1-2fb9af38f3be</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>82667613-b615-40a0-8467-ba22e19e1f1a</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>8</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Horizontal Scroll Mobile</Name>
          <Alias>horizontalScrollMobile</Alias>
          <Key>ecb89ceb-1a60-413d-b84d-710bf8d04c79</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>9</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[This option puts all column in a single row on mobile devices, adding a horizontal scroll.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Adjust Column Height</Name>
          <Alias>adjustColumnHeight</Alias>
          <Key>6f1e59fa-adf3-4e3c-b83e-ea21a181044a</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>10</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Make all columns on each row same height]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Animate</Name>
          <Alias>animate</Alias>
          <Key>28f37005-cfd4-4185-944b-707b15d8183d</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>11</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Intro animation when widget is visible]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>548ff3d5-32ed-48bf-90a1-33a366850366</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>12</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>92</Id>
          <Key>3136c680-ace3-4a71-9fae-d1e914456c17</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Header" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/b54a2a4d-f2a0-4e54-8bbf-13ad26f9877b">
      <Info>
        <Name>Header</Name>
        <Alias>columnHeader</Alias>
        <Key>cd1ea4e8-1ebf-4b28-8741-1249db54e0de</Key>
        <Icon>icon-font color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Pre Heading</Name>
          <Alias>preHeading</Alias>
          <Key>6023a9ea-ddf2-4927-b3c0-20a092797588</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>0dd034e7-f0ee-4d2e-bcd3-0f09ead24dbd</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>630d42f8-db33-4714-8c87-ff614abbb39e</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Buttons</Name>
          <Alias>buttons</Alias>
          <Key>e04c419b-e4f4-42e8-8026-79f7a2084a94</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>69bc5d28-8798-44fc-9369-9e9763028592</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>93</Id>
          <Key>11a6d554-3f0e-439d-baaf-45e857a51d58</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Header" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/b54a2a4d-f2a0-4e54-8bbf-13ad26f9877b">
      <Info>
        <Name>Header Settings</Name>
        <Alias>columnHeaderSettings</Alias>
        <Key>6b3ac4fc-f278-4a14-a494-31bee51d3535</Key>
        <Icon>icon-font color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>1b795a31-1fc9-454c-b099-c4e16fadef56</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Center Content</Name>
          <Alias>centerContent</Alias>
          <Key>81214adc-b448-4931-aa76-1d4504c4ea36</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>94</Id>
          <Key>d0890e36-ac2c-4969-9e42-c4f9c0f9ee6b</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Hero" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/54b2e8c8-771b-4dda-bdad-048a221db889">
      <Info>
        <Name>Hero</Name>
        <Alias>hero</Alias>
        <Key>65c1e575-f011-4ed9-a381-45ba3e999dfd</Key>
        <Icon>icon-rocket color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Pre Heading</Name>
          <Alias>preHeading</Alias>
          <Key>23b54947-700c-4fb2-b27f-2cd3d1cca653</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>ba74260c-6f5e-4279-98f3-de93f42c0003</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>7bf1602f-b7b0-40ea-9558-3c23db6dc82d</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background</Name>
          <Alias>background</Alias>
          <Key>8a023598-945e-425c-9e70-5b62eff00c22</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Image or video (.mp4)]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Buttons</Name>
          <Alias>buttons</Alias>
          <Key>858e7a11-925c-4428-af09-e00df0e04418</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>69bc5d28-8798-44fc-9369-9e9763028592</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>95</Id>
          <Key>2e4cc9e7-6c62-4d67-ab82-c49a7dabca71</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Hero" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/54b2e8c8-771b-4dda-bdad-048a221db889">
      <Info>
        <Name>Hero Settings</Name>
        <Alias>heroSettings</Alias>
        <Key>205e3278-edcb-408f-9441-b6e640a16994</Key>
        <Icon>icon-rocket color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>37ebc4a7-5a22-44f8-a619-9bbf080ee725</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Choose text color to create best contrast with background]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>containerWidth</Alias>
          <Key>e98abad7-b6fc-483c-9774-6bbd185c2f62</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Width</Name>
          <Alias>textWidth</Alias>
          <Key>031492ec-3a15-47f5-8d6a-8d2b7dfa7f3f</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Height</Name>
          <Alias>height</Alias>
          <Key>301606fc-252a-4e67-abcd-ecfacc3c4d52</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>35b8f870-24ec-4b5c-81f3-03ef5a755c31</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Overlay Strength</Name>
          <Alias>overlayStrength</Alias>
          <Key>6629afdb-afa6-4719-b825-5797c534019f</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>c9c4631b-7987-40d5-aa06-a8da7cc783ff</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Will be light or dark depending on text color. Leave empty to not show the overlay]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Alignment</Name>
          <Alias>textAlignment</Alias>
          <Key>0ceedbd5-7935-4998-a8dd-da88e2c4ce7b</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>70b5690f-87e8-47e3-a346-487e1adca9eb</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Vertical Text Alignment</Name>
          <Alias>verticalTextAlignment</Alias>
          <Key>5e9efb03-5f45-4de8-89db-8d872f9a8142</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>f4bff246-8d6e-43a4-88c1-379bacba7377</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Animate</Name>
          <Alias>animate</Alias>
          <Key>c0bad183-e961-4e40-be18-2da2ff8a0bec</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Intro animation when widget is visible]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>779b0be2-5662-4a43-8d15-e2aad847fd05</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>8</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>96</Id>
          <Key>7fa91306-191f-4833-b9bc-5fb1e14eae5f</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Image" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/8b398c16-d894-4829-9dec-ba055a40fd3e">
      <Info>
        <Name>Image</Name>
        <Alias>imageWidget</Alias>
        <Key>3299ef93-f66e-40a2-9332-58999d727f8b</Key>
        <Icon>icon-picture color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Image</Name>
          <Alias>imageBlock</Alias>
          <Key>421981e5-c24b-4b71-8064-2347ac059fa5</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Caption</Name>
          <Alias>imageCaption</Alias>
          <Key>0712085a-2332-492f-8b50-5cbf58d49d9e</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>97</Id>
          <Key>3105e90e-2d70-44a1-9c61-e9c59ea8ac89</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Image" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/52c47cee-bf27-4b67-9aa7-23e80c61002c">
      <Info>
        <Name>Image</Name>
        <Alias>columnImage</Alias>
        <Key>d5caef96-f8b6-49c5-b9a7-d677bbd2a2ce</Key>
        <Icon>icon-picture color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Image</Name>
          <Alias>image</Alias>
          <Key>6a3a2a9b-ba33-4da9-8e5d-015075723b7c</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Caption</Name>
          <Alias>imageCaption</Alias>
          <Key>b32f54e5-0137-4c0a-a935-0b462170b3ec</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Link</Name>
          <Alias>link</Alias>
          <Key>54746dc3-8eb8-4e62-be5e-e8c721c6ba81</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>ded9b564-0a63-4fe5-84bf-606d84e5d55e</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>98</Id>
          <Key>ce73ebf4-20ee-4edb-ad21-4c8e38963e3c</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Image" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/52c47cee-bf27-4b67-9aa7-23e80c61002c">
      <Info>
        <Name>Image Settings</Name>
        <Alias>columnImageSettings</Alias>
        <Key>fd0e14f8-4a27-42bb-a222-9ce61f53ad4a</Key>
        <Icon>icon-picture color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>bcc4a46f-d9dd-4ae1-9818-ddc93c8db417</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Alias</Name>
          <Alias>alias</Alias>
          <Key>ec818d60-7fd6-4d46-86d1-9d7b2293a61c</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only used for display purposes]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>99</Id>
          <Key>f5d98575-633d-4c7b-9e6a-ca552bf40e13</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Image" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/8b398c16-d894-4829-9dec-ba055a40fd3e">
      <Info>
        <Name>Image Settings</Name>
        <Alias>imageWidgetSettings</Alias>
        <Key>36cd13aa-28fd-4794-9b0e-93130a836279</Key>
        <Icon>icon-picture color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Alias</Name>
          <Alias>alias</Alias>
          <Key>0358dbb2-0b0d-4e22-8f94-afeeca283b8a</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only used for display purposes]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Size</Name>
          <Alias>imageSize</Alias>
          <Key>460b7900-fba8-40c5-92ea-2f08fb92a505</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Compact</Name>
          <Alias>compact</Alias>
          <Key>323a80f9-3ab3-44e2-9d97-bd1c5388ec92</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Removes the extra padding over and under the Image]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>619b13ca-06d5-4c1d-832b-e11713109dad</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>0f09abe1-12a2-4fe3-afba-05f57e545610</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>af73e42b-ee99-405c-8bbd-e09c4d773dca</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>100</Id>
          <Key>423cbbd2-6e14-466c-8f39-736dcc0d0966</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Instagram+Feed" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dd0a2eeb-29d4-4b90-a451-e1bae89d87c5">
      <Info>
        <Name>Instagram Feed</Name>
        <Alias>instagramFeed</Alias>
        <Key>07eb60f2-2b59-4bbf-9625-a5f7cd415873</Key>
        <Icon>icon-camera-roll color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Image Count</Name>
          <Alias>imageCount</Alias>
          <Key>73b0739a-463a-4bc0-b0e7-827b45e452ed</Key>
          <Type>Umbraco.Integer</Type>
          <Definition>2e6d3631-066e-44b8-aec4-96f09099b2b5</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Number of images to get from Instagram. Max 25]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>101</Id>
          <Key>9d15777d-0c52-443e-ae85-8e5e1c4a1583</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Instagram+Feed" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dd0a2eeb-29d4-4b90-a451-e1bae89d87c5">
      <Info>
        <Name>Instagram Feed Settings</Name>
        <Alias>instagramFeedSettings</Alias>
        <Key>5a8a306a-7e32-458c-ae28-47ed276c5be1</Key>
        <Icon>icon-camera-roll color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Link Images</Name>
          <Alias>linkImages</Alias>
          <Key>bc5e47a5-1700-4a4b-a96f-c02e68cd2120</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Images will be linked to Instagram page]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Link To Instagram Account</Name>
          <Alias>linkToInstagramAccount</Alias>
          <Key>d94aa284-c26b-4b33-afee-3f02d6248831</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Instagram-icon will be added on the images and linked to Instagram account page]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>containerWidth</Alias>
          <Key>e7ae2586-5cf3-49bc-9b23-79b7435f645e</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Remove Image Border</Name>
          <Alias>removeImageBorder</Alias>
          <Key>400ad0d3-fe56-4618-b290-28d61a853ea1</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Compact</Name>
          <Alias>compact</Alias>
          <Key>1f1bc887-c574-40d7-948e-b10e37c54861</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Removes extra space over and under the gallery]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>c721fabe-8599-4008-b208-8fcd492ea5de</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>b369bf61-dcaa-483b-b587-1cf07464bb0b</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>102</Id>
          <Key>6216939f-0811-431a-91fe-e88e8c06b7a5</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Latest+From+Feed" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/d61caa29-5bd7-49f2-8b7f-3f578b2c72b8">
      <Info>
        <Name>Latest From Feed</Name>
        <Alias>latestFromFeed</Alias>
        <Key>5b873ab9-b1f6-437e-a032-f27e3ef54b18</Key>
        <Icon>icon-newspaper-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Pre Heading</Name>
          <Alias>preHeading</Alias>
          <Key>4e73ec35-a63d-4540-9ef2-a7b3116a3768</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>467d403e-99a1-4763-9a6a-468a83a3969f</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Intro Text</Name>
          <Alias>introText</Alias>
          <Key>4cc11faf-cfd7-462a-a461-d43d5957a3da</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Feed Page</Name>
          <Alias>feedPage</Alias>
          <Key>457dd940-25e1-4bc0-ae0e-d45556958bf9</Key>
          <Type>Umbraco.MultiNodeTreePicker</Type>
          <Definition>65560ed5-25bf-4647-825b-8386096daa7f</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Select which page to get feed-posts from]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Buttons</Name>
          <Alias>buttons</Alias>
          <Key>2a4a9916-0b94-428a-8fe4-4a60d00d2c75</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>69bc5d28-8798-44fc-9369-9e9763028592</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>103</Id>
          <Key>d58f529d-8f74-4e8c-b4df-a60541201e91</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Latest+From+Feed" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/d61caa29-5bd7-49f2-8b7f-3f578b2c72b8">
      <Info>
        <Name>Latest From Feed Settings</Name>
        <Alias>latestFromFeedSettings</Alias>
        <Key>23e47290-aa01-4ca2-8628-2e615650d1e3</Key>
        <Icon>icon-newspaper-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Number of Posts</Name>
          <Alias>numberOfPosts</Alias>
          <Key>fc8e109b-c2b7-4ee8-bedc-aef0b83e5939</Key>
          <Type>Umbraco.Integer</Type>
          <Definition>2e6d3631-066e-44b8-aec4-96f09099b2b5</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[How many posts should be shown. Default is 3]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>e2154175-01ed-448a-a0db-4375cc4b1383</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>6a58bab5-cfd1-43b1-a9bf-1d3c7c59a29b</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>10e60c7d-c05b-4123-9b64-1c54bcead557</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>104</Id>
          <Key>0eca1bf7-e7d8-4a69-aaa2-f7512383918f</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Shared" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/465075eb-bfc3-421c-bb89-19536a0cdfe7">
      <Info>
        <Name>Line Break</Name>
        <Alias>lineBreak</Alias>
        <Key>df7e9574-9031-42b1-9242-4f38afcafd17</Key>
        <Icon>icon-remove color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Line Break</Name>
          <Alias>alias</Alias>
          <Key>aa274c10-30c9-4785-8d01-e65842c3565d</Key>
          <Type>Umbraco.Label</Type>
          <Definition>f0bc4bfb-b499-40d6-ba86-058885a5178c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Column added under this will start on a new row]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Draw Line</Name>
          <Alias>drawLine</Alias>
          <Key>975087fc-6670-4a9f-8004-205452c01156</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Custom Height</Name>
          <Alias>customHeight</Alias>
          <Key>9d910d17-8efd-4717-b35c-fa71e0640119</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Add a height to the line break, ex: 120px, 5vh]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>105</Id>
          <Key>fde94518-d54d-4546-9373-14f2e57b65a7</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Login" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/5ac035c9-34e3-4657-aa9b-d3a2235f55ac">
      <Info>
        <Name>Login</Name>
        <Alias>login</Alias>
        <Key>0df9634c-e387-4869-a2c6-b062d12b01ac</Key>
        <Icon>icon-lock color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>32b3237d-bf05-442d-bdec-1c4a523bd0e7</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>54cc69f4-9f45-4551-a595-23fc2fae5cef</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Image</Name>
          <Alias>image</Alias>
          <Key>36a8943d-1895-4aa3-8457-ef5ef0a91fed</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Image is shown to the right of the login form]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>106</Id>
          <Key>8a1fd8e4-d912-4b6e-bb69-8487ae2b2b68</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Login" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/5ac035c9-34e3-4657-aa9b-d3a2235f55ac">
      <Info>
        <Name>Login Settings</Name>
        <Alias>loginSettings</Alias>
        <Key>f7f9ddaa-d847-4306-9120-c0f0732b2c15</Key>
        <Icon>icon-lock color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>332adb8d-285c-4620-bfb3-26a8958afba4</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>36a9ed24-4ccd-45c5-98d4-b42799d59a0d</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Redirect Url</Name>
          <Alias>redirectUrl</Alias>
          <Key>e5f62be7-15f9-4e88-8a47-306f9a60b25e</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>ded9b564-0a63-4fe5-84bf-606d84e5d55e</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Url the user is redirected to after successful login.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>66ff3e1a-4643-4a0e-9b9e-4520bd837542</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>107</Id>
          <Key>d8c1efaa-2b61-4a7a-9843-9b2d58afbd3f</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Shared" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/465075eb-bfc3-421c-bb89-19536a0cdfe7">
      <Info>
        <Name>Logo</Name>
        <Alias>logo</Alias>
        <Key>ca8f8a77-c960-41e1-9053-94867eb436ec</Key>
        <Icon>icon-science color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Alias</Name>
          <Alias>alias</Alias>
          <Key>40402cef-385e-40ed-839c-14d2cf971e3f</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only used for display purposes]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Image</Name>
          <Alias>logoImage</Alias>
          <Key>95e0329d-7602-4395-82a4-b1677a584d6d</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>True</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Link</Name>
          <Alias>link</Alias>
          <Key>6f9d01a2-09f8-4994-a900-3b8a000c567a</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>ded9b564-0a63-4fe5-84bf-606d84e5d55e</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Width</Name>
          <Alias>customWidth</Alias>
          <Key>e2beea12-51e6-4156-a7bd-afd870f91c34</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adjust the maximum width of the image. Default is 120px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>108</Id>
          <Key>293ae8e7-264d-4631-b682-03ad1523b925</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Logos" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/1e75ce05-396b-4128-9a99-f1598b1a1327">
      <Info>
        <Name>Logos</Name>
        <Alias>logos</Alias>
        <Key>7ff19af0-db86-4b10-b9d8-d3c6f605da5a</Key>
        <Icon>icon-science color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Pre Heading</Name>
          <Alias>preHeading</Alias>
          <Key>4018c693-1200-4426-aee4-89a3eadf5cc6</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>6e65a3c5-0242-4dde-958e-99c362b0c851</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>a468d004-58cb-45c1-8b21-158a2bc3d69b</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Logos</Name>
          <Alias>logoItems</Alias>
          <Key>26cd0750-bc5e-4c75-bdad-37bc41360e98</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>3a7d14c4-0cd2-4dfe-9b46-4efd25c06ee5</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>109</Id>
          <Key>f0382568-8bc3-4e24-8e6d-68b725d7a476</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Footer/Logos" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f5430bd6-879f-41a4-939c-11bba89b532f/8be744a7-1213-43d2-94bd-5e2beb0ea955">
      <Info>
        <Name>Logos</Name>
        <Alias>footerLogos</Alias>
        <Key>6d514a6c-208c-439e-bae9-7d978770a83a</Key>
        <Icon>icon-science color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>7167472f-b780-45fd-a74e-7b60b54f942a</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Logos</Name>
          <Alias>logos</Alias>
          <Key>73b8bb8c-c8fb-43d5-8eab-9dc3da4200b3</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>3a7d14c4-0cd2-4dfe-9b46-4efd25c06ee5</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>110</Id>
          <Key>1997b5f4-9160-4de5-ba32-40075bac55e4</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Footer/Logos" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f5430bd6-879f-41a4-939c-11bba89b532f/8be744a7-1213-43d2-94bd-5e2beb0ea955">
      <Info>
        <Name>Logos Settings</Name>
        <Alias>footerLogosSettings</Alias>
        <Key>24ee4f4a-e7ad-40af-b2d6-b97713ae35a9</Key>
        <Icon>icon-science color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>8b0d3be4-04a5-4614-8b22-a6673b9130e5</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Align Content</Name>
          <Alias>alignContent</Alias>
          <Key>dc2a52bf-aa01-48ec-be20-16e5521c899b</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>70b5690f-87e8-47e3-a346-487e1adca9eb</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>111</Id>
          <Key>8e61c029-ffe1-4ee3-8d4a-f7627800541a</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Logos" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/1e75ce05-396b-4128-9a99-f1598b1a1327">
      <Info>
        <Name>Logos Settings</Name>
        <Alias>logosSettings</Alias>
        <Key>93d0e548-cf13-43cf-8a7e-5413f9d7b5ec</Key>
        <Icon>icon-science color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>containerWidth</Alias>
          <Key>d1f2d272-f161-44b9-87ae-ae2800a5535b</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Compact</Name>
          <Alias>compact</Alias>
          <Key>deaf40f0-781c-4362-97f1-ff3bb5279448</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Removes the extra padding over and under this widget]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Black &amp; White</Name>
          <Alias>blackWhite</Alias>
          <Key>a3b2a038-4045-4f7b-b609-4e6a688e3baa</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Images will be shown in black & white]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>ba13c7c7-3b5f-463c-9366-55ed982af843</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>a151319a-e9cd-4b80-b85f-3cb708581cda</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>7d036a30-482e-43ac-b43d-ff46c9a7c1b4</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>112</Id>
          <Key>1a352bf5-d468-4633-9415-58908bd8306f</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Map" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/5fc56d96-d3d8-4301-928e-ec6925522cb3">
      <Info>
        <Name>Map</Name>
        <Alias>map</Alias>
        <Key>a132d844-c400-4fa9-b89a-050d44c926ae</Key>
        <Icon>icon-map-location color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Latitude</Name>
          <Alias>latitude</Alias>
          <Key>befaa188-c3b8-4f7b-b979-bbbc4286d9c3</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Longitude</Name>
          <Alias>longitude</Alias>
          <Key>2e00a923-1099-4b3a-8050-0a58b019307f</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Show Content Next To Map</Name>
          <Alias>showContentNextToMap</Alias>
          <Key>8fa0ccbf-9987-4d5d-999b-2e052f5ec12a</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[If checked, the fields listed below here will be shown next to the map. If you only want to show the map, ignore this checkbox and the fields below.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Pre Heading</Name>
          <Alias>preHeading</Alias>
          <Key>15cb4e8a-20e4-4822-bf45-add3c05507d6</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>6fe87cfb-5fe7-4b65-a8ee-714edea51550</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>b38b3081-a5ee-400f-809f-5e82709e3456</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Address</Name>
          <Alias>address</Alias>
          <Key>173b8f2c-aa7d-42fc-aed8-07c36f7884d4</Key>
          <Type>Umbraco.TextArea</Type>
          <Definition>c6bac0dd-4ab9-45b1-8e30-e4b619ee5da3</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Phone Number</Name>
          <Alias>phoneNumber</Alias>
          <Key>e899864e-665a-43b2-a42b-b5e51e403c8f</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Email</Name>
          <Alias>email</Alias>
          <Key>499279e8-6a9b-4a9c-8a06-54617259361b</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>8</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Opening Hours</Name>
          <Alias>openingHours</Alias>
          <Key>571b74bf-41ec-4b9e-90bb-53c7b8c90ff0</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>023fd8c5-910a-4988-86c0-409bcaf5c00a</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>9</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Buttons</Name>
          <Alias>buttons</Alias>
          <Key>a2a8b2dc-56ad-44c1-9bc0-528b234e7bee</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>69bc5d28-8798-44fc-9369-9e9763028592</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>10</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>113</Id>
          <Key>8a284612-fe3e-449e-922f-7e1982af38f3</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Map" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/5fc56d96-d3d8-4301-928e-ec6925522cb3">
      <Info>
        <Name>Map Settings</Name>
        <Alias>mapSettings</Alias>
        <Key>cd3f0432-c88d-4445-8528-5ba949a6ffb9</Key>
        <Icon>icon-map-location color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Map Zoom</Name>
          <Alias>mapZoom</Alias>
          <Key>00f2f626-d869-47e6-8faa-cc735973de96</Key>
          <Type>Umbraco.Integer</Type>
          <Definition>2e6d3631-066e-44b8-aec4-96f09099b2b5</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>True</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Set a value between 0-20, 20 being the most zoomed in.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Height</Name>
          <Alias>height</Alias>
          <Key>4f0812e3-b5f4-41aa-b9cc-3a9efa1e3946</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>35b8f870-24ec-4b5c-81f3-03ef5a755c31</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Placement</Name>
          <Alias>textPlacement</Alias>
          <Key>89b7ca60-ad99-44a5-989b-2f881a0c309a</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>a013a3d1-0483-4a72-9ff5-0b29f5a9638c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Custom Map Pin Icon</Name>
          <Alias>customMapPinIcon</Alias>
          <Key>d4f80af8-d32a-4015-b6ba-33d4c6b48bee</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Use this to add a custom Map Pin. Leave empty to use GoogleMap default pin. Use .svg format for best result.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>da8edea1-19cf-49dc-9a19-fbde700e2a1f</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>54754ecd-09d2-482c-bf75-c6908adea3f2</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>34a6f225-62db-4515-9926-a78ff15a2cee</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>114</Id>
          <Key>f2b885b0-6f35-4600-8a57-9ca918af1241</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Sidebar" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/854bf59d-6b7a-4d52-a841-b79fc5bdf172">
      <Info>
        <Name>Navigation</Name>
        <Alias>navigationSidebar</Alias>
        <Key>00c727f6-9aaa-4cc6-af39-01616e7d23c8</Key>
        <Icon>icon-bulleted-list color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>7dd6a57e-76a3-482f-9cf5-5a6d10e5d7c6</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Link Heading</Name>
          <Alias>linkHeading</Alias>
          <Key>c6414003-0450-498e-a4cc-cb5391656bd7</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>ded9b564-0a63-4fe5-84bf-606d84e5d55e</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Links</Name>
          <Alias>links</Alias>
          <Key>4d02e3c3-f0ae-4476-9ee5-cc282caf8f30</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>83017a20-dd69-4616-ac8c-c435cda4aef4</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Levels of Children</Name>
          <Alias>levelsOfChildren</Alias>
          <Key>1c2d730e-5ac6-43fa-94d0-f4b1753822db</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>0435cc8d-1265-4aee-baa8-0318af998e11</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[How many levels of children should be displayed. 0 will only show selected pages]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Only Render Children</Name>
          <Alias>onlyRenderChildren</Alias>
          <Key>fa9ae8c2-04a0-49ef-b903-f3256ed026a4</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only children of the selected pages will be displayed.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Boxed</Name>
          <Alias>boxed</Alias>
          <Key>d5af212c-ba31-4ecf-8500-c74fbd080d97</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds box around the sidebar widget]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Disable Auto Expand</Name>
          <Alias>disableAutoExpand</Alias>
          <Key>37a2f5aa-0066-4676-9462-ba55c1054191</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Navigation will not expand to show selected items from start]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>115</Id>
          <Key>beeed231-2074-4fdb-bcfe-d7f919aa6ed0</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Navigation" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/5d916bc4-fe46-4d04-b696-abd584fa5fbe">
      <Info>
        <Name>Navigation</Name>
        <Alias>columnNavigation</Alias>
        <Key>c55309d0-b610-4982-af8d-476277b67d28</Key>
        <Icon>icon-bulleted-list color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>7deb18d4-9952-4f2e-b87c-73afbd360af2</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Link Heading</Name>
          <Alias>linkHeading</Alias>
          <Key>b154ea81-bab6-4b03-8d22-2a12f7c665a5</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>ded9b564-0a63-4fe5-84bf-606d84e5d55e</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Links</Name>
          <Alias>links</Alias>
          <Key>9da648ca-c403-4896-b5d6-4db4f303fc5b</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>83017a20-dd69-4616-ac8c-c435cda4aef4</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>116</Id>
          <Key>3a0206c2-9b66-4ffe-8054-aafef9859b01</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Footer/Navigation" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f5430bd6-879f-41a4-939c-11bba89b532f/11bae529-aa59-442a-ac9b-b1004416690d">
      <Info>
        <Name>Navigation</Name>
        <Alias>footerNavigation</Alias>
        <Key>2d7b51ca-1992-4664-8a44-740abd1fd523</Key>
        <Icon>icon-bulleted-list color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>16b9896b-92f4-4d9e-9ced-c196a2fb83ff</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Link Heading</Name>
          <Alias>linkHeading</Alias>
          <Key>f4d35cd2-56cf-4ebe-b720-b3f3866545d7</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>ded9b564-0a63-4fe5-84bf-606d84e5d55e</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Links</Name>
          <Alias>links</Alias>
          <Key>1f6604ea-a33c-4654-a18c-737b20779208</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>83017a20-dd69-4616-ac8c-c435cda4aef4</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>117</Id>
          <Key>61ddd50a-7089-4daf-a0a9-e0c85242b940</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Compositions" FolderKeys="df1791f2-01d4-47db-9a17-727c5d32b5f5">
      <Info>
        <Name>Navigation</Name>
        <Alias>navigation</Alias>
        <Key>a93899ff-0f46-4477-9473-663c60ebb061</Key>
        <Icon>icon-directions color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Custom Navigation</Name>
          <Alias>customNavigation</Alias>
          <Key>cbd59a6d-f336-4790-8be2-63212ecf3375</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>15892b2e-f3f9-4f67-947e-a1609b519b7e</Definition>
          <Tab Alias="navigation">Navigation</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Use this to disable default navigation and build a custom one]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Buttons</Name>
          <Alias>headerButtons</Alias>
          <Key>ab3c9b2d-1926-4696-8828-eef419f64b42</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>69bc5d28-8798-44fc-9369-9e9763028592</Definition>
          <Tab Alias="navigation">Navigation</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Buttons will be added to the right of the main navigation]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Phone Number</Name>
          <Alias>headerPhoneNumber</Alias>
          <Key>e18881b9-889b-48c7-a34c-1c1749384738</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="navigation">Navigation</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Visible in the mobile navigation]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Email</Name>
          <Alias>headerEmail</Alias>
          <Key>171301d1-1423-495e-827e-607f9a915c25</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="navigation">Navigation</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Visible in the mobile navigation]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Enable Sub Header</Name>
          <Alias>enableSubHeader</Alias>
          <Key>22f3210d-4f97-46f0-8f47-0f900070db76</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="navigation">Navigation</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Opens up a area above the header]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Sub Header Left</Name>
          <Alias>subHeaderLeft</Alias>
          <Key>d5ba5b99-dc4a-48ac-8fd3-44d8aac70a7c</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>b549b99c-0d06-4370-a05f-53b4f756d48c</Definition>
          <Tab Alias="navigation">Navigation</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Add links or information in the left part of the Sub Header. Navigation can be 2 levels down]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Sub Header Right</Name>
          <Alias>subHeaderRight</Alias>
          <Key>210eff42-c038-4787-8b9a-5cf0ee9b76fd</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>b549b99c-0d06-4370-a05f-53b4f756d48c</Definition>
          <Tab Alias="navigation">Navigation</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Add links or information in the right part of the Sub Header. Navigation can be 2 levels down]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Disable Language Picker</Name>
          <Alias>disableLanguagePicker</Alias>
          <Key>8ba7c931-a1cc-482a-b25e-84604b78958c</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="navigation">Navigation</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Hides the default language picker in the header.]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Language Name</Name>
          <Alias>languageName</Alias>
          <Key>8c7b6e75-a346-423a-9900-00af44dbc978</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="navigation">Navigation</Tab>
          <SortOrder>8</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Overrides the default language name]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Language Flag</Name>
          <Alias>languageFlag</Alias>
          <Key>8235c655-b74f-47a3-8533-4a253482a3ba</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="navigation">Navigation</Tab>
          <SortOrder>9</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>118</Id>
          <Key>fdd340f0-ad17-4522-aa91-039f8b8ada6a</Key>
          <Type>Group</Type>
          <Caption>Navigation</Caption>
          <Alias>navigation</Alias>
          <SortOrder>100</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Navigation" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/a6288430-d867-41ac-898c-4303418c1dfe">
      <Info>
        <Name>Navigation Item</Name>
        <Alias>navigationItem</Alias>
        <Key>501d90c0-b088-46db-9599-9114a812abfd</Key>
        <Icon>icon-link color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Name</Name>
          <Alias>navName</Alias>
          <Key>a72ee14a-895c-4131-ad6b-bad668396d88</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Link</Name>
          <Alias>navLink</Alias>
          <Key>ff0d7e69-c47e-49f4-89fa-668fcad151ef</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>ded9b564-0a63-4fe5-84bf-606d84e5d55e</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Children</Name>
          <Alias>navChildren</Alias>
          <Key>7a587d98-a1b8-4443-b705-aa385bd5b6fc</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>320cbdcb-48b3-4c62-83f9-12713bff5380</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>119</Id>
          <Key>958dbd85-108b-46a3-84a5-2185166962ca</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Footer/Navigation" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f5430bd6-879f-41a4-939c-11bba89b532f/11bae529-aa59-442a-ac9b-b1004416690d">
      <Info>
        <Name>Navigation Settings</Name>
        <Alias>footerNavigationSettings</Alias>
        <Key>7a5e0631-1d73-45e5-b521-6199880a639a</Key>
        <Icon>icon-bulleted-list color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>2226f614-c217-4016-ab7b-048ac2677671</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Levels of Children</Name>
          <Alias>levelsOfChildren</Alias>
          <Key>583e5988-0ab2-4d90-ba2f-f0524cf56d7c</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>0435cc8d-1265-4aee-baa8-0318af998e11</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[How many levels of children should be displayed. 0 will only show selected pages]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Only Render Children</Name>
          <Alias>onlyRenderChildren</Alias>
          <Key>d5920352-bfbe-49bb-97c7-832356433767</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only children of the selected pages will be displayed.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Disable Auto Expand</Name>
          <Alias>disableAutoExpand</Alias>
          <Key>e7048211-fddb-4eb6-a7a6-070dad247383</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Navigation will not expand to show selected items from start]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>120</Id>
          <Key>cc8846bf-1fa2-4838-9452-71332f2e7680</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Newsletter" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/0af9feba-2e6c-40d6-8904-c7967c566eeb">
      <Info>
        <Name>Newsletter</Name>
        <Alias>newsletter</Alias>
        <Key>f866582e-db2d-4860-a921-125b29d350d5</Key>
        <Icon>icon-inbox color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>dec0b53f-b55d-4d1d-8997-6b9d33c470f4</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>f43e1a3f-7ffd-44fd-8477-ffeadedd7db8</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Placeholder Text</Name>
          <Alias>placeholderText</Alias>
          <Key>c49fe7ab-9a17-41e6-b535-a5c056977fdd</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Help text shown inside the email textbox]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Small Text</Name>
          <Alias>smallText</Alias>
          <Key>1e97dcc1-2d50-45ba-b4b1-1af0694f3518</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[A small text shown under signup form]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>122</Id>
          <Key>b7a32c06-bf24-41a0-8914-4243ae10932b</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Navigation" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/5d916bc4-fe46-4d04-b696-abd584fa5fbe">
      <Info>
        <Name>Navigation Settings</Name>
        <Alias>columnNavigationSettings</Alias>
        <Key>c21ca0cf-b285-419d-a454-bb2834de77d9</Key>
        <Icon>icon-bulleted-list color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>07bf7b8f-858e-4749-b6ae-3b08d8e6a6c7</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Levels of Children</Name>
          <Alias>levelsOfChildren</Alias>
          <Key>d36d4c72-f292-4e48-a25d-35457e84a9eb</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>0435cc8d-1265-4aee-baa8-0318af998e11</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[How many levels of children should be displayed. 0 will only show selected pages]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Only Render Children</Name>
          <Alias>onlyRenderChildren</Alias>
          <Key>c4758b25-95e1-4f8d-9c64-b39c4dec3291</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only children of the selected pages will be displayed.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Boxed Column</Name>
          <Alias>boxedColumn</Alias>
          <Key>14a91c3c-d36a-484b-a02d-1cb5c5640187</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Creates a box around the column]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Disable Auto Expand</Name>
          <Alias>disableAutoExpand</Alias>
          <Key>3b63af0c-db8c-4c71-b5b5-8eedb563569b</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Navigation will not expand to show selected items from start]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Image</Name>
          <Alias>backgroundImage</Alias>
          <Key>f22c603f-e1a8-4e49-bbdf-afc5c6aeba97</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>0621e669-46b6-42e4-bf90-356c3391fcb7</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>4b8e9ed9-9c83-4180-9988-e83e0c00e9ad</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>121</Id>
          <Key>ea7fa448-697c-4e76-90c4-d68e69f23714</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Newsletter" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/0af9feba-2e6c-40d6-8904-c7967c566eeb">
      <Info>
        <Name>Newsletter Settings</Name>
        <Alias>newsletterSettings</Alias>
        <Key>e121803f-1163-45cb-b2cb-06afb0fdd1b4</Key>
        <Icon>icon-inbox color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Button Color</Name>
          <Alias>buttonColor</Alias>
          <Key>053d3b4e-b485-4d9e-89a1-d58e69cebf93</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>84cfeaea-7c19-4bc1-a69f-51c0d38215c2</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>List ID</Name>
          <Alias>listID</Alias>
          <Key>daae124b-5bd1-4943-9593-c575d85c7906</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Overwrite default list ID in settings]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Image</Name>
          <Alias>backgroundImage</Alias>
          <Key>d29e7f0a-e87e-4f53-9fb5-45e7da441530</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>93b1c495-f41d-4340-8f3d-a3c6664fd608</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>9871e5c5-142f-4874-936f-50659809122c</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Animate</Name>
          <Alias>animate</Alias>
          <Key>e4b164b7-b915-4bf7-83be-b4c50af217f5</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Intro animation when widget is visible]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>d28036fa-d2b9-4daf-aecf-92367e2613dd</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>123</Id>
          <Key>c6a0c4a5-efb1-4c38-9608-afea2e71b8de</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Shared" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/465075eb-bfc3-421c-bb89-19536a0cdfe7">
      <Info>
        <Name>Opening Hour</Name>
        <Alias>openingHour</Alias>
        <Key>d4696222-fde5-4bdb-9a56-38154ee9adca</Key>
        <Icon>icon-time color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Day</Name>
          <Alias>day</Alias>
          <Key>4ed32015-42a6-4d45-86d2-ded884cf29b7</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Shown to the left]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Time</Name>
          <Alias>time</Alias>
          <Key>770047c2-cd53-454f-b7ee-e47e2d885b73</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Shown to the right]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>124</Id>
          <Key>221d23a5-d12f-400b-9b18-bd561292728a</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Footer/Opening+Hours" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f5430bd6-879f-41a4-939c-11bba89b532f/8d8c9c88-9449-4be3-83d4-34300337838f">
      <Info>
        <Name>Opening Hours</Name>
        <Alias>footerOpeningHours</Alias>
        <Key>1fe385ec-077d-4203-a320-5bf2e90952db</Key>
        <Icon>icon-time color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>8128f43d-8e27-449d-858b-1ff6eaaeae7b</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Opening Hours</Name>
          <Alias>openingHours</Alias>
          <Key>60180625-d5f6-473b-a45a-ad505958a2f9</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>023fd8c5-910a-4988-86c0-409bcaf5c00a</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>125</Id>
          <Key>008fa6bc-c6b2-45d7-870c-553e77a8b741</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Footer/Opening+Hours" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f5430bd6-879f-41a4-939c-11bba89b532f/8d8c9c88-9449-4be3-83d4-34300337838f">
      <Info>
        <Name>Opening Hours Settings</Name>
        <Alias>footerOpeningHoursSettings</Alias>
        <Key>51d6f169-d8a2-417e-b610-4660bd2905c9</Key>
        <Icon>icon-time color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>5d0b3059-e435-4272-ad15-0a0e03795e09</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Align Content</Name>
          <Alias>alignContent</Alias>
          <Key>14948fb0-f374-48d3-a4d5-ed3b2d707d60</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>70b5690f-87e8-47e3-a346-487e1adca9eb</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>126</Id>
          <Key>c59d052b-c9e0-425f-b67d-734a22b1d617</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Base" FolderKeys="36512fe6-a88c-4ead-87f3-153733074e2c">
      <Info>
        <Name>Page</Name>
        <Alias>page</Alias>
        <Key>353ae5b5-a13e-4d0e-94e5-3483f313d1d8</Key>
        <Icon>icon-document</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description>Create flexible page layouts using a selection of content blocks</Description>
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Compositions>
          <Composition>settings</Composition>
          <Composition>sEO</Composition>
        </Compositions>
        <AllowedTemplates>
          <Template>Page</Template>
        </AllowedTemplates>
        <DefaultTemplate>Page</DefaultTemplate>
      </Info>
      <Structure>
        <DocumentType>page</DocumentType>
      </Structure>
      <GenericProperties>
        <GenericProperty>
          <Name>Widgets</Name>
          <Alias>widgets</Alias>
          <Key>f29dca52-8e0c-4c78-afbe-567b517958db</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>e52e988a-65e8-45b0-87d7-dfa013357177</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Add content to the page by choosing different widgets. You can modify and sort each widget in different ways to make up the design]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>127</Id>
          <Key>e6a59e7b-6d41-4985-9f46-631e43304a02</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType>
      <Info>
        <Name>People</Name>
        <Alias>peopleWidget</Alias>
        <Key>31a8bca8-8b5b-478e-b953-e1d898e2a9a0</Key>
        <Icon>icon-user-females color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Pre Heading</Name>
          <Alias>preHeading</Alias>
          <Key>9ef66c5a-83dd-413f-a3a2-82b852f26e65</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>0d565899-42a4-4290-a498-61f3d0d78cf0</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>33cadf61-8ab6-4e6e-b307-ed0ddef22430</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>People</Name>
          <Alias>people</Alias>
          <Key>b4169917-af64-4a54-ba2e-b4edbdb4c9ac</Key>
          <Type>Umbraco.MultiNodeTreePicker</Type>
          <Definition>e6fa976b-569e-43b6-98e5-64330b8d8e68</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Select a list of people to display]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>128</Id>
          <Key>67e5ab41-49cf-4b04-964a-9ff4ef28bff7</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Base" FolderKeys="36512fe6-a88c-4ead-87f3-153733074e2c">
      <Info>
        <Name>People</Name>
        <Alias>people</Alias>
        <Key>aaa1ebaa-df37-491a-a6a7-8d18c76539c3</Key>
        <Icon>icon-user-females color-pink</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description>Hold a collection of people, used for the widgets people and person</Description>
        <AllowAtRoot>True</AllowAtRoot>
        <IsListView>True</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure>
        <DocumentType>person</DocumentType>
      </Structure>
      <GenericProperties />
      <Tabs />
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/People" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/6f13b25b-f30f-4b77-b138-3574172402d3">
      <Info>
        <Name>People Settings</Name>
        <Alias>peopleWidgetSettings</Alias>
        <Key>32a64675-aabe-437d-af11-f4c9bcc05cd4</Key>
        <Icon>icon-user-females color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>People Per Row</Name>
          <Alias>peoplePerRow</Alias>
          <Key>b2ba890f-8387-45bc-b5f9-314a44a2659d</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>3abfdf86-5f14-4c80-9918-60f8a2cd7a89</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Select how many people should be shown per row on desktop]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Boxed</Name>
          <Alias>boxed</Alias>
          <Key>71092265-d1a5-425b-a44e-a380b67be765</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Place each person inside a box with some extra padding]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Circle Image</Name>
          <Alias>circleImage</Alias>
          <Key>b6bb4ab6-8bd7-44a4-b311-8b6ffa431f1b</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Show image as circle]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Center Text</Name>
          <Alias>centerText</Alias>
          <Key>e97e527f-4ce6-48f4-902b-4dd6906720cc</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Center text horizontally]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>630d94e9-6377-4f80-8a87-e9a154c08011</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>68541353-1d73-4825-a1f4-472e7597f10d</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>containerWidth</Alias>
          <Key>d4d31e00-d2a4-4083-9a25-9597a55e345c</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide Descriptions</Name>
          <Alias>hideDescriptions</Alias>
          <Key>d58ac371-6591-4ca4-b623-ba5df1722e43</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Hide descriptions from the list]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide Social Links</Name>
          <Alias>hideSocialLinks</Alias>
          <Key>971cf006-bc24-4be8-9a85-a9e10c85d8df</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>8</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Hide all social links like facebook twitter etc.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide Emails</Name>
          <Alias>hideEmails</Alias>
          <Key>b43e097b-1513-4529-9df0-2d000dde350a</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>9</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Hide emails from the list]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide Phone Numbers</Name>
          <Alias>hidePhoneNumbers</Alias>
          <Key>8121309b-f0d0-4a33-9895-2e8012382d62</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>10</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Hide phone and mobile number from the list]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>2cafc088-5dd5-420c-9b1d-658d765878be</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>11</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>129</Id>
          <Key>48d6824a-fcef-4e3d-98b6-1b68bed3826f</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType>
      <Info>
        <Name>Person</Name>
        <Alias>person</Alias>
        <Key>1b6a3183-eb07-4cef-9498-023f7c916ece</Key>
        <Icon>icon-user-female color-pink</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Master>people</Master>
        <Compositions>
          <Composition>people</Composition>
        </Compositions>
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Image</Name>
          <Alias>image</Alias>
          <Key>df716577-82f8-4f29-a791-77c7d800c56a</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="information">Information</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Name</Name>
          <Alias>fullName</Alias>
          <Key>b15e0c4d-b612-4191-a121-95987bf371bf</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="information">Information</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Title</Name>
          <Alias>title</Alias>
          <Key>b55b8089-1826-4294-b875-c6199708c809</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="information">Information</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Description</Name>
          <Alias>description</Alias>
          <Key>d998a2d0-7b41-4856-82d9-aa3151a1bad1</Key>
          <Type>Umbraco.TextArea</Type>
          <Definition>c6bac0dd-4ab9-45b1-8e30-e4b619ee5da3</Definition>
          <Tab Alias="information">Information</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Phone</Name>
          <Alias>phone</Alias>
          <Key>7f348dcb-8478-4def-8019-1b3f9819822d</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="information">Information</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Mobile</Name>
          <Alias>mobile</Alias>
          <Key>6b0fa6de-34a0-4ab8-80c9-677e3cbc1c03</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="information">Information</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Email</Name>
          <Alias>email</Alias>
          <Key>f4cb7acc-ff53-4fe6-b836-3ef93139348f</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="information">Information</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Facebook</Name>
          <Alias>facebook</Alias>
          <Key>33c6cb4f-1281-43b9-aca2-591b6dcf0a62</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="social">Social</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Twitter</Name>
          <Alias>twitter</Alias>
          <Key>26957fa1-c57e-42e4-ab36-792bceebf82a</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="social">Social</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Linked In</Name>
          <Alias>linkedIn</Alias>
          <Key>10bc3b78-6a0a-42f2-9822-7d4a5460e546</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="social">Social</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Instagram</Name>
          <Alias>instagram</Alias>
          <Key>dce60e90-1232-4501-92ae-de434e9235e4</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="social">Social</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Youtube</Name>
          <Alias>youtube</Alias>
          <Key>ee4ab10d-b73c-49c7-b72a-9110232feb71</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="social">Social</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>130</Id>
          <Key>1398ca4f-3b1c-4a0d-b36c-9a11ae07e3a4</Key>
          <Type>Group</Type>
          <Caption>Information</Caption>
          <Alias>information</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
        <Tab>
          <Id>131</Id>
          <Key>9b76c6e3-9ea8-4a23-a0e0-5337015c986b</Key>
          <Type>Group</Type>
          <Caption>Social</Caption>
          <Alias>social</Alias>
          <SortOrder>1</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Person" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/9a9918f1-c788-412c-b2e0-43bc5000cf43">
      <Info>
        <Name>Person</Name>
        <Alias>columnPerson</Alias>
        <Key>46351328-7d3d-4934-a822-c6eb5994f8ac</Key>
        <Icon>icon-user-female color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>860fc7d3-3e43-48cd-b86d-c90ef19069b8</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Person</Name>
          <Alias>person</Alias>
          <Key>d8d3e7b3-abf2-46fb-8a62-688c1db3d660</Key>
          <Type>Umbraco.MultiNodeTreePicker</Type>
          <Definition>96ad0c2e-0bbf-4efe-8fa0-fc3efe7c97a3</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Select the person to display]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>132</Id>
          <Key>0590589c-6c6d-46d5-a813-23a0d7a7853b</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Person" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/9a9918f1-c788-412c-b2e0-43bc5000cf43">
      <Info>
        <Name>Person Settings</Name>
        <Alias>columnPersonSettings</Alias>
        <Key>b94eddd7-fdf4-4240-ade3-2991c934bc3a</Key>
        <Icon>icon-user-female color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>f8df68a9-e8e4-4ce4-89ba-0c36bd7b8456</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Boxed</Name>
          <Alias>boxed</Alias>
          <Key>2439c17a-2f30-407b-abb3-4c5a3103511e</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Place person inside a box with some extra padding]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Circle Image</Name>
          <Alias>circleImage</Alias>
          <Key>74b1491b-6995-4237-9616-615454733850</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Show image as circle]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Center Text</Name>
          <Alias>centerText</Alias>
          <Key>600b15f0-eb04-4d5e-abbc-f0b898b8258c</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Center text horizontally]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide Description</Name>
          <Alias>hideDescription</Alias>
          <Key>294b5952-5f9f-4382-85a3-d21a42983153</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide Social Links</Name>
          <Alias>hideSocialLinks</Alias>
          <Key>7c4474e3-bcab-4498-bee1-3b43b32955b0</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Hide all social links like facebook twitter etc.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide Email</Name>
          <Alias>hideEmail</Alias>
          <Key>9bfe96b3-da98-494a-9aa7-bfcba606f05b</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide Phone Numbers</Name>
          <Alias>hidePhoneNumbers</Alias>
          <Key>daefd493-c3c8-4e6c-9389-2d8c21eb1cfc</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Hide phone and mobile number]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>133</Id>
          <Key>8ad3cd7e-b39d-4b8a-b142-c31294aab322</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Pod" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/335f3f88-8ca3-4989-8a29-addb3bb6f76a">
      <Info>
        <Name>Pod</Name>
        <Alias>columnPod</Alias>
        <Key>4c147893-6ed5-4cfe-94b0-e5e1abd47bc5</Key>
        <Icon>icon-chess color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>b44b7a17-e365-43b7-8a6a-f099e34709ae</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>428ec78f-30d7-4cf1-95f0-0f054f0f99d9</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Icon</Name>
          <Alias>icon</Alias>
          <Key>80b50e7f-2fa0-4953-b8e1-4999b5149e14</Key>
          <Type>IconPicker</Type>
          <Definition>bca16803-e645-46ea-ae32-26d7d4d98456</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Image</Name>
          <Alias>image</Alias>
          <Key>7f758af5-fb78-44b2-9817-91b324954512</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Can not be used together with Icon]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Link</Name>
          <Alias>link</Alias>
          <Key>a63c5a67-8763-4c57-be00-b684060cd1b1</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>ded9b564-0a63-4fe5-84bf-606d84e5d55e</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Links heading and image/icon]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Buttons</Name>
          <Alias>buttons</Alias>
          <Key>e31b2871-db50-4707-b1bf-32547f9ced6e</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>69bc5d28-8798-44fc-9369-9e9763028592</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>134</Id>
          <Key>caa7de48-544b-4b09-9f77-30a13ef69c70</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Pod" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/335f3f88-8ca3-4989-8a29-addb3bb6f76a">
      <Info>
        <Name>Pod Settings</Name>
        <Alias>columnPodSettings</Alias>
        <Key>4eb78ece-3148-43ff-a2d9-05f978b73136</Key>
        <Icon>icon-chess color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>47a0966d-104c-41df-b539-04357a916144</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Boxed Column</Name>
          <Alias>boxedColumn</Alias>
          <Key>b294b865-2708-40d2-a8ce-261c64673f6b</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Creates a box around the column]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Center Content</Name>
          <Alias>centerContent</Alias>
          <Key>ab837bf6-d9c2-4837-bbae-5f3254e3cf3f</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Media Left</Name>
          <Alias>podMediaLeft</Alias>
          <Key>966d97c5-4520-4f6b-bcf3-8cdf24f7ada2</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Place the image or icon left of the text]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>135</Id>
          <Key>817d750e-e96a-46d4-9e01-59800e3fadee</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Base" FolderKeys="36512fe6-a88c-4ead-87f3-153733074e2c">
      <Info>
        <Name>Post</Name>
        <Alias>post</Alias>
        <Key>ebb63694-f93a-4087-a1c4-b64a0b6f9476</Key>
        <Icon>icon-article color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Compositions />
        <AllowedTemplates>
          <Template>Post</Template>
        </AllowedTemplates>
        <DefaultTemplate>Post</DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Pre Heading</Name>
          <Alias>preHeading</Alias>
          <Key>b1ad17ae-19d3-4d87-bc9c-a5bfa9d0df39</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>a32137bb-c627-4fb5-b8ff-874db612027b</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>True</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Intro Text</Name>
          <Alias>introText</Alias>
          <Key>db14309a-af72-4451-af02-c8bc50581678</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Image</Name>
          <Alias>image</Alias>
          <Key>846a0414-a308-47e1-a8a8-a8c15d0b4576</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>37bd3fe3-372f-40c5-95ce-dea9ceec2def</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Content Widgets</Name>
          <Alias>contentWidgets</Alias>
          <Key>6caab971-12fe-4e1f-bc57-739d7cf9567c</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>469835c1-85cf-4c69-9adf-abe321ae0c19</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Bottom Widgets</Name>
          <Alias>widgets</Alias>
          <Key>8002bcf8-8e32-44d1-ac7b-1be87e6af19e</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>e52e988a-65e8-45b0-87d7-dfa013357177</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Date</Name>
          <Alias>date</Alias>
          <Key>e80f9d64-0393-4fab-ab79-1753e91e2c89</Key>
          <Type>Umbraco.DateTime</Type>
          <Definition>e4d66c0f-b935-4200-81f0-025f7256b89a</Definition>
          <Tab Alias="meta">Meta</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>True</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Image</Name>
          <Alias>postImage</Alias>
          <Key>335a8e0a-c73f-4902-895f-a3974e1676d4</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="meta">Meta</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Shown when listing this post]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Description</Name>
          <Alias>postDescription</Alias>
          <Key>148d6fd7-acde-44ff-83b7-7b677f9cf82a</Key>
          <Type>Umbraco.TextArea</Type>
          <Definition>c6bac0dd-4ab9-45b1-8e30-e4b619ee5da3</Definition>
          <Tab Alias="meta">Meta</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Short description. Shown when listing this post]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Author</Name>
          <Alias>author</Alias>
          <Key>678c725c-7c41-441f-b349-ba6de69e4c2e</Key>
          <Type>Umbraco.MultiNodeTreePicker</Type>
          <Definition>96ad0c2e-0bbf-4efe-8fa0-fc3efe7c97a3</Definition>
          <Tab Alias="meta">Meta</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Select a person to display as author of this post]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Disable Comments</Name>
          <Alias>disableComments</Alias>
          <Key>794e7a23-5fad-4d3b-9f5b-d51f1d5277ea</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="meta">Meta</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Variations>Culture</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>136</Id>
          <Key>94c9e35f-019e-4656-aef5-37736f9c2aa2</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
        <Tab>
          <Id>137</Id>
          <Key>c8bb4c6c-281f-4a7c-8ebd-9db592aa069c</Key>
          <Type>Group</Type>
          <Caption>Meta</Caption>
          <Alias>meta</Alias>
          <SortOrder>1</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Price+List" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/87f41e0a-b101-49bd-a1b9-7e1c5d486f1a">
      <Info>
        <Name>Price List</Name>
        <Alias>columnPriceList</Alias>
        <Key>d7cf324f-8b85-479b-8602-8c27c2923062</Key>
        <Icon>icon-tags color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>09bba8d6-84f2-4c44-a556-d28a080043e4</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Items</Name>
          <Alias>items</Alias>
          <Key>38908624-798a-4517-8a38-82a2c78dda1d</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>0f476df4-ec39-43b4-b1f4-61c04318af4a</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>138</Id>
          <Key>4413ee68-3774-4dfd-81ab-e5f98394a105</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Price+List" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/87f41e0a-b101-49bd-a1b9-7e1c5d486f1a">
      <Info>
        <Name>Price List Item</Name>
        <Alias>priceListItem</Alias>
        <Key>c271f6bb-ca52-4da6-acff-c7f2307b8659</Key>
        <Icon>icon-tag color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Title</Name>
          <Alias>title</Alias>
          <Key>cd43d97a-ab20-43de-9baa-a4f293e82c60</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Description</Name>
          <Alias>description</Alias>
          <Key>5fe9a3b9-ba47-4b88-9ab5-5b04c1300189</Key>
          <Type>Umbraco.TextArea</Type>
          <Definition>c6bac0dd-4ab9-45b1-8e30-e4b619ee5da3</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Price</Name>
          <Alias>price</Alias>
          <Key>fec22cd1-99c2-4111-a950-d1547bcdfce4</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>139</Id>
          <Key>be416030-13d4-4f40-9126-32368483eec3</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Price+List" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/87f41e0a-b101-49bd-a1b9-7e1c5d486f1a">
      <Info>
        <Name>Price List Settings</Name>
        <Alias>columnPriceListSettings</Alias>
        <Key>af3a038a-321a-4e18-91fd-482294b6b49a</Key>
        <Icon>icon-tags color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>bcc4b64a-659e-4412-aac1-8de9f3b05801</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Boxed Column</Name>
          <Alias>boxedColumn</Alias>
          <Key>829a8a4a-6868-4af6-9fd7-5e9867b19a10</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>140</Id>
          <Key>a9e1b54b-1123-44f4-a230-c4fa89117a53</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Price+Table" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/cb70fddc-e8dd-4a7f-a7c0-5a429f3a4f79">
      <Info>
        <Name>Price Table</Name>
        <Alias>columnPriceTable</Alias>
        <Key>fbe4c615-cbcf-4e73-97cf-d7c39d9da36d</Key>
        <Icon>icon-diamond color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Image</Name>
          <Alias>image</Alias>
          <Key>f0b74b98-e680-4e9a-a208-bbf4104ba1f0</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Name</Name>
          <Alias>priceTableName</Alias>
          <Key>475276a6-66e5-4880-8820-b03bc724744e</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Price</Name>
          <Alias>price</Alias>
          <Key>8110aec4-cab0-462a-a954-ec16f39f85b6</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Price Unit</Name>
          <Alias>priceUnit</Alias>
          <Key>f9f7616d-b798-4f6f-8f01-e6a719463231</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Features</Name>
          <Alias>features</Alias>
          <Key>e23f78bf-17c8-4618-b3e5-6714fbff202e</Key>
          <Type>Umbraco.MultipleTextstring</Type>
          <Definition>212a6026-cc0a-440d-bacc-8e10a464ce60</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Buttons</Name>
          <Alias>buttons</Alias>
          <Key>7d8cc8f0-de0f-4803-aa87-0866d21a50d6</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>69bc5d28-8798-44fc-9369-9e9763028592</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Disclaimer</Name>
          <Alias>disclaimer</Alias>
          <Key>0f6f44e6-87b0-46d6-874a-168d01b5b97f</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>141</Id>
          <Key>6362de8a-17c9-4f23-a6bf-983ddcf35503</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Price+Table" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/cb70fddc-e8dd-4a7f-a7c0-5a429f3a4f79">
      <Info>
        <Name>Price Table Settings</Name>
        <Alias>columnPriceTableSettings</Alias>
        <Key>b3966f22-bbcc-4c52-ae80-fc4861f8c360</Key>
        <Icon>icon-diamond color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>e6bc9c60-2c61-4189-91fa-dfe6e72b4f9a</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Boxed Column</Name>
          <Alias>boxedColumn</Alias>
          <Key>5a9bfe8f-4da1-4272-8627-b8a2bffd9771</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Creates a box around the column]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Center Content</Name>
          <Alias>centerContent</Alias>
          <Key>306e907b-d32a-40ee-b09d-cceee9022f00</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>142</Id>
          <Key>383e24e2-8d5f-41fc-bb7d-892a44acaece</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Quote" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/0c218ce0-9e1e-482e-ac52-2be66048abf0">
      <Info>
        <Name>Quote</Name>
        <Alias>columnQuote</Alias>
        <Key>6575bbfd-80a8-4858-b768-f132008c512a</Key>
        <Icon>icon-quote color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Quote</Name>
          <Alias>quote</Alias>
          <Key>8f33f7d5-8f8a-477c-a72e-72e514af70b5</Key>
          <Type>Umbraco.TextArea</Type>
          <Definition>c6bac0dd-4ab9-45b1-8e30-e4b619ee5da3</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Author</Name>
          <Alias>author</Alias>
          <Key>3b8685f1-16b6-4fe4-8928-b22b4f3f2c58</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Author Title</Name>
          <Alias>authorTitle</Alias>
          <Key>f2631cbf-5d91-4b2d-b615-fce1be5b5e4c</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Author Image</Name>
          <Alias>authorImage</Alias>
          <Key>f33976fb-7c7b-41a5-a1b9-2c8f47abe587</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>143</Id>
          <Key>d6b6a059-d974-4b7c-ace9-a4e0fd982324</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Quote" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/0c218ce0-9e1e-482e-ac52-2be66048abf0">
      <Info>
        <Name>Quote Settings</Name>
        <Alias>columnQuoteSettings</Alias>
        <Key>eff38b8a-ed21-422b-a183-51d5cc1ecbfd</Key>
        <Icon>icon-quote color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>a3905983-70e3-4127-b348-a612bf0877b3</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Boxed Column</Name>
          <Alias>boxedColumn</Alias>
          <Key>dacf7a98-472c-4f2f-9e5f-6f7066e50f73</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>144</Id>
          <Key>c8f22430-30a1-4c95-b206-c80c542a531d</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Register" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/12051dea-dfec-4fa5-8475-8b0ab6a3c56d">
      <Info>
        <Name>Register</Name>
        <Alias>register</Alias>
        <Key>dad141d0-e5ec-4f4a-8203-a17354815eda</Key>
        <Icon>icon-users-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>68d54322-ee8f-45fc-9cd0-df6104a7728e</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>60cf57d8-783e-478b-8a69-3570a5e9f2e6</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Image</Name>
          <Alias>image</Alias>
          <Key>8b081b7f-04c6-42f8-b5cb-019c187e4334</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Image is shown to the right of the register form]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Success Message Heading</Name>
          <Alias>successMessageHeading</Alias>
          <Key>9edcad04-7fa4-4145-9d56-975e41553687</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Success Message Text</Name>
          <Alias>successMessageText</Alias>
          <Key>0e6a3365-9152-4fd7-98af-5d2d31e109af</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>145</Id>
          <Key>4c7bcbcc-0327-47df-9185-2e00d51136dd</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Register" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/12051dea-dfec-4fa5-8475-8b0ab6a3c56d">
      <Info>
        <Name>Register Settings</Name>
        <Alias>registerSettings</Alias>
        <Key>4e50b1f9-06f4-4ddb-84cb-be81af4ba9a3</Key>
        <Icon>icon-users-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>38946131-94b4-4a8d-8ca9-2a2f9375f858</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>d6a06779-cdd0-4781-94a5-4dc563323d31</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>d132300a-09a9-44e1-bad3-467c166adde6</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>146</Id>
          <Key>db97f093-dff7-4bae-bee7-58c3018cc2ec</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Base" FolderKeys="36512fe6-a88c-4ead-87f3-153733074e2c">
      <Info>
        <Name>Search</Name>
        <Alias>search</Alias>
        <Key>9b00da0d-2844-415e-bb35-b24e2ede8cd2</Key>
        <Icon>icon-search color-green</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description>Add search functionality to your site</Description>
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Compositions />
        <AllowedTemplates>
          <Template>Search</Template>
        </AllowedTemplates>
        <DefaultTemplate>Search</DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Widgets</Name>
          <Alias>widgets</Alias>
          <Key>2c8ae935-9d68-48d3-94e4-a32929eceed0</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>e52e988a-65e8-45b0-87d7-dfa013357177</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>147</Id>
          <Key>0f1b4c4a-7697-4010-bba0-9376ef5162c3</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Section+Navigation" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/8a58966e-30b4-4ffc-94e0-35db77d5a528">
      <Info>
        <Name>Section Navigation</Name>
        <Alias>sectionNavigation</Alias>
        <Key>75cb10ff-d704-4dc4-a1f0-4176cf2002d7</Key>
        <Icon>icon-directions color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Items</Name>
          <Alias>items</Alias>
          <Key>9ecb49c6-1317-410e-bcf4-872fcbe844b1</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>a187e686-a477-4674-90f2-e4ac8cce4259</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>148</Id>
          <Key>c6885442-e174-4b30-92ab-6cea5dc7c33e</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Section+Navigation" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/8a58966e-30b4-4ffc-94e0-35db77d5a528">
      <Info>
        <Name>Section Navigation Item</Name>
        <Alias>sectionNavigationItem</Alias>
        <Key>4ff9fb93-14cd-4e1f-abe5-09ce6bce9d12</Key>
        <Icon>icon-directions color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Icon</Name>
          <Alias>icon</Alias>
          <Key>f9b9222c-45f3-4892-b369-c38f8c86beba</Key>
          <Type>IconPicker</Type>
          <Definition>bca16803-e645-46ea-ae32-26d7d4d98456</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Name</Name>
          <Alias>linkName</Alias>
          <Key>6238e88f-4b1b-4b82-8886-f1377a5be1a1</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Link</Name>
          <Alias>link</Alias>
          <Key>fc881405-3d56-480d-a93c-bbf57fd9332a</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>ded9b564-0a63-4fe5-84bf-606d84e5d55e</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>149</Id>
          <Key>810b95ee-115a-4ca0-b4c3-21f52013243f</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Section+Navigation" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/8a58966e-30b4-4ffc-94e0-35db77d5a528">
      <Info>
        <Name>Section Navigation Settings</Name>
        <Alias>sectionNavigationSettings</Alias>
        <Key>e1b0b64d-57a8-46d8-9229-aa588f4b6269</Key>
        <Icon>icon-directions color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>containerWidth</Alias>
          <Key>d2902129-fc42-4dbb-a8eb-3c45129894cd</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Theme</Name>
          <Alias>theme</Alias>
          <Key>de58a474-e27b-4cdc-8419-861724bf36ad</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>c93a1ac2-7b54-4bf4-bed6-eab27472574d</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>150</Id>
          <Key>93fe1a81-c9e0-45e5-a4a1-28857cb562b1</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Compositions" FolderKeys="df1791f2-01d4-47db-9a17-727c5d32b5f5">
      <Info>
        <Name>SEO</Name>
        <Alias>sEO</Alias>
        <Key>3ddfe153-65cc-47d3-bbff-74cb0f17f98f</Key>
        <Icon>icon-search color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Title</Name>
          <Alias>metaTitle</Alias>
          <Key>7c7fd8ec-57bd-493b-96eb-6881fba7275b</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="sEO">SEO</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Define the title of a page. Google typically displays the first 50-60 characters of a title tag]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Description</Name>
          <Alias>metaDescription</Alias>
          <Key>8a2100cf-c02d-4ea4-b8c6-a75f8b6d6eff</Key>
          <Type>Umbraco.TextArea</Type>
          <Definition>c6bac0dd-4ab9-45b1-8e30-e4b619ee5da3</Definition>
          <Tab Alias="sEO">SEO</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Short description of the page. Roughly 155 Characters for optimal SEO]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Image</Name>
          <Alias>metaImage</Alias>
          <Key>63c572ff-49ba-4f5c-945f-207aadf30d0f</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="sEO">SEO</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[This image is shown when the page shared on social media]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide From Search Engines</Name>
          <Alias>hideFromSearchEngines</Alias>
          <Key>20da46e2-10ae-4d65-951f-b274ef2c5e24</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="sEO">SEO</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Tell web crawlers to not index this page. Also removes this page from the sitemap]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Sitemap Page Priority</Name>
          <Alias>sitemapPagePriority</Alias>
          <Key>ea8d46bc-4446-4c78-a141-9f8a328a4726</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>57458336-60a6-46a9-9e35-99768e55d919</Definition>
          <Tab Alias="sEO">SEO</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[The priority of this page relative to other pages on your site. Default is 0.5]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Sitemap Page Change Frequently</Name>
          <Alias>sitemapPageChangeFrequently</Alias>
          <Key>be051bcf-fbdf-41f3-9e5d-fd755d6b81d4</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>ee749aa6-b1fa-496c-a0f7-15317ef3ef64</Definition>
          <Tab Alias="sEO">SEO</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[How frequently the page is likely to change. This value provides general information to search engines and may not correlate exactly to how often they crawl the page.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>75</Id>
          <Key>3716b341-2a5a-44b1-bee4-d4f2f850c9b2</Key>
          <Type>Group</Type>
          <Caption>SEO</Caption>
          <Alias>sEO</Alias>
          <SortOrder>80</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Compositions" FolderKeys="df1791f2-01d4-47db-9a17-727c5d32b5f5">
      <Info>
        <Name>Settings</Name>
        <Alias>settings</Alias>
        <Key>62ecaa63-5323-4e56-8185-41632f5c6d0d</Key>
        <Icon>icon-settings color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Transparent Header</Name>
          <Alias>transparentHeader</Alias>
          <Key>78e31d5b-84c2-4207-90cd-72f8c1c8b3f3</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="settings">Settings</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Removes the header background color before scroll]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Transparent Header Color</Name>
          <Alias>transparentHeaderColor</Alias>
          <Key>ae6bd684-fb76-4037-83d0-15dd93df96ee</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>fab3daf9-11d0-453d-870a-386a109d8b6e</Definition>
          <Tab Alias="settings">Settings</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Set the color theme for the transparent header. Dark will show a dark navigation and the "Logo On Dark"-logo]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide In Navigation</Name>
          <Alias>umbracoNaviHide</Alias>
          <Key>4e6f9ac4-7b25-4c1a-a333-e80c08ebd5c7</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="settings">Settings</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Hide this page from any navigation or listing]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide From Search</Name>
          <Alias>hideFromSearch</Alias>
          <Key>ee194bc3-22da-4485-b937-31931b1af2b1</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="settings">Settings</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[If checked, this page will not appear in search results]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide Header</Name>
          <Alias>hideHeader</Alias>
          <Key>0b4f0a7d-e1e3-4b1a-b430-b44aecfbcaca</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="settings">Settings</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Hide the Header on this page]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide Footer</Name>
          <Alias>hideFooter</Alias>
          <Key>de9eef8f-3dae-4cf6-ab11-25f16882b98d</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="settings">Settings</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Hide the Footer on this page]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>74</Id>
          <Key>5b097b0e-b2d5-4012-8804-56a0d1d198f4</Key>
          <Type>Group</Type>
          <Caption>Settings</Caption>
          <Alias>settings</Alias>
          <SortOrder>90</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Base" FolderKeys="36512fe6-a88c-4ead-87f3-153733074e2c">
      <Info>
        <Name>Site</Name>
        <Alias>site</Alias>
        <Key>3e51e3a0-9a72-4692-b135-2794a0e497aa</Key>
        <Icon>icon-home color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description>The start page of the website</Description>
        <AllowAtRoot>True</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Culture</Variations>
        <Compositions>
          <Composition>navigation</Composition>
          <Composition>sEO</Composition>
          <Composition>footer</Composition>
          <Composition>settings</Composition>
        </Compositions>
        <AllowedTemplates>
          <Template>Page</Template>
        </AllowedTemplates>
        <DefaultTemplate>Page</DefaultTemplate>
      </Info>
      <Structure>
        <DocumentType>feed</DocumentType>
        <DocumentType>websiteSettings</DocumentType>
        <DocumentType>page</DocumentType>
        <DocumentType>search</DocumentType>
        <DocumentType>sitemap</DocumentType>
      </Structure>
      <GenericProperties>
        <GenericProperty>
          <Name>Widgets</Name>
          <Alias>widgets</Alias>
          <Key>b43c2393-f5bf-4d30-a8b7-9120a55774d5</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>e52e988a-65e8-45b0-87d7-dfa013357177</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Add content to the page by choosing different widgets. You can modify and sort each widget in different ways to make up the design]]></Description>
          <Variations>Culture</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>151</Id>
          <Key>1176a918-01a6-4c14-b5a9-277ffde76de3</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Base" FolderKeys="36512fe6-a88c-4ead-87f3-153733074e2c">
      <Info>
        <Name>Sitemap</Name>
        <Alias>sitemap</Alias>
        <Key>03fab59d-b250-4a10-a444-57158b16f16a</Key>
        <Icon>icon-sitemap color-purple</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description>Add a sitemap to your site</Description>
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates>
          <Template>Sitemap</Template>
        </AllowedTemplates>
        <DefaultTemplate>Sitemap</DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties />
      <Tabs />
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Slider" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/352efd08-55ff-4628-bd5a-ecaafd82feb9">
      <Info>
        <Name>Slider</Name>
        <Alias>slider</Alias>
        <Key>81f47d43-e8ee-4c88-8dae-dab1026aa279</Key>
        <Icon>icon-navigation-horizontal color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Widgets</Name>
          <Alias>widgets</Alias>
          <Key>ddbed2f2-b980-4a8c-a450-ec99b31271f7</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>e52e988a-65e8-45b0-87d7-dfa013357177</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>152</Id>
          <Key>6c80e484-3f89-4a6c-8bf0-c0ed0c7e64c0</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Slider" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/f6c86100-d82c-4ee8-b889-f255cfc856f0">
      <Info>
        <Name>Slider</Name>
        <Alias>columnSlider</Alias>
        <Key>54671d17-27be-4e11-b40c-cf7cb63e4c41</Key>
        <Icon>icon-navigation-horizontal color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Columns</Name>
          <Alias>columns</Alias>
          <Key>03a490f2-09d9-47c4-a57c-e2dae4ed6205</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>469835c1-85cf-4c69-9adf-abe321ae0c19</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>153</Id>
          <Key>e3254a99-2c57-48fc-bb8e-528cfa1f356f</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Slider" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/f6c86100-d82c-4ee8-b889-f255cfc856f0">
      <Info>
        <Name>Slider Settings</Name>
        <Alias>columnSliderSettings</Alias>
        <Key>fa54a149-a1e9-4df1-8db1-7cb8f2ab3e8b</Key>
        <Icon>icon-navigation-horizontal color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>26182f52-c066-4123-bdc8-f6f790d3372f</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Show Next/Prev Arrows</Name>
          <Alias>showNextPrevArrows</Alias>
          <Key>6b9fd804-7873-4777-a6b9-d7ff2488f12d</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Show next and previous buttons inside the slider]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Show Page Dots</Name>
          <Alias>showPageDots</Alias>
          <Key>e5bb4263-15ca-4cdf-9f81-94f27f8576f1</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Show slider dots in the bottom of the slider]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Wrap Around</Name>
          <Alias>wrapAround</Alias>
          <Key>d97844a7-1740-40fc-99a5-25f8c5b5d6c6</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[If checked, slider will go from last slide to first slide]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Autoplay</Name>
          <Alias>autoplay</Alias>
          <Key>649c5402-99b4-46c5-aaec-8b7173369f6b</Key>
          <Type>Umbraco.Integer</Type>
          <Definition>2e6d3631-066e-44b8-aec4-96f09099b2b5</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>True</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Set autoplay time in milliseconds (1000 = 1 second) Set to 0 to disable autoplay]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Pause Autoplay On Hover</Name>
          <Alias>pauseAutoplayOnHover</Alias>
          <Key>54d9ab24-cb86-4020-8574-e774e6d53ca6</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[If checked, autoplay will pause when mouse is over the slider]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Fade Animation</Name>
          <Alias>fadeAnimation</Alias>
          <Key>49cf03f7-20e3-481e-b4fd-7ee833dfa14c</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Fades between transitioning slides instead of moving.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>154</Id>
          <Key>0e510067-5701-45c6-b08e-b8124d1e5340</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Slider" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/352efd08-55ff-4628-bd5a-ecaafd82feb9">
      <Info>
        <Name>Slider Settings</Name>
        <Alias>sliderSettings</Alias>
        <Key>24355ffa-4374-4572-9294-cb80bd36d4b5</Key>
        <Icon>icon-navigation-horizontal color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Alias</Name>
          <Alias>alias</Alias>
          <Key>99e72082-7bbf-4e1c-8f65-b3daba12ba40</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only used for display purposes]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Show Next/Prev Arrows</Name>
          <Alias>showNextPrevArrows</Alias>
          <Key>cfe9905b-2b3e-4595-b051-bd9cfcb36b87</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Show next and previous buttons inside the slider]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Show Page Dots</Name>
          <Alias>showPageDots</Alias>
          <Key>e8afdd67-afcb-45c6-856c-882a127e38ee</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Show slider dots in the bottom of the slider]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Wrap Around</Name>
          <Alias>wrapAround</Alias>
          <Key>944e5fd7-3945-40ed-8fc0-fbd636d40064</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[If checked, slider will go from last slide to first slide]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Autoplay</Name>
          <Alias>autoplay</Alias>
          <Key>d58e2823-57d0-48ee-9853-1630d57600d3</Key>
          <Type>Umbraco.Integer</Type>
          <Definition>2e6d3631-066e-44b8-aec4-96f09099b2b5</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>True</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Set autoplay time in milliseconds (1000 = 1 second) Set to 0 to disable autoplay]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Pause Autoplay On Hover</Name>
          <Alias>pauseAutoplayOnHover</Alias>
          <Key>0cb973b5-f5e7-4c01-8341-4b3af9aa9410</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[If checked, autoplay will pause when mouse is over the slider]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Fade Animation</Name>
          <Alias>fadeAnimation</Alias>
          <Key>bde3534c-52be-4997-807b-8b3398275bc3</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Fades between transitioning slides instead of moving.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>ea976332-b906-4b3e-871e-2cc0cceea051</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>155</Id>
          <Key>8e4693c4-e09a-42df-a8e8-d7eb1d7d946a</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Footer/Social+Links" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f5430bd6-879f-41a4-939c-11bba89b532f/e86648f7-1a99-445c-870c-38fffec9c8dd">
      <Info>
        <Name>Social Links</Name>
        <Alias>footerSocialLinks</Alias>
        <Key>5fe24843-0d8c-4203-aa70-88beeeb15a9b</Key>
        <Icon>icon-share color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>b7468c9c-821b-46f5-8882-01b97d960e21</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Facebook</Name>
          <Alias>facebook</Alias>
          <Key>c84156c2-c939-4a0c-9133-69ccbbf256a7</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Url to Facebook page]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Twitter</Name>
          <Alias>twitter</Alias>
          <Key>f86c8b68-33f2-4fae-b74f-6c071d5aa2f3</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Url to Twitter page]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Instagram</Name>
          <Alias>instagram</Alias>
          <Key>40c9f239-227f-4bbf-85aa-42fc7536a80d</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Url to Instagram page]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Linked In</Name>
          <Alias>linkedIn</Alias>
          <Key>f370b77f-ae4c-4f40-852e-ba1f730ab920</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Url to Linked In page]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>YouTube</Name>
          <Alias>youTube</Alias>
          <Key>98428d0e-adf0-4e9e-98c4-fc543b8a86c5</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Url to Youtube channel]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>156</Id>
          <Key>e03c167a-38db-4a4a-bf96-2e7c3a0b80a9</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Footer/Social+Links" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f5430bd6-879f-41a4-939c-11bba89b532f/e86648f7-1a99-445c-870c-38fffec9c8dd">
      <Info>
        <Name>Social Links Settings</Name>
        <Alias>footerSocialLinksSettings</Alias>
        <Key>8f19ef94-3611-4498-baa7-d7a7a3bfa829</Key>
        <Icon>icon-share color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>14ffea69-2c42-4b93-b57d-f41492c1613a</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Align Content</Name>
          <Alias>alignContent</Alias>
          <Key>89ce1b03-15f4-4fb0-bc43-dd29c005a369</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>70b5690f-87e8-47e3-a346-487e1adca9eb</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>157</Id>
          <Key>30d48a84-829a-4f23-95f4-dac3d1b8e2b0</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Sub+Grid" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/101ee777-f34a-4bcc-95aa-7e4561690bc9">
      <Info>
        <Name>Sub Grid</Name>
        <Alias>columnSubGrid</Alias>
        <Key>d617d105-7b12-4d7f-9089-00655499ea53</Key>
        <Icon>icon-grid color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Columns</Name>
          <Alias>columns</Alias>
          <Key>dce22e7f-9be5-48f2-a7f8-796ab2bf0c79</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>469835c1-85cf-4c69-9adf-abe321ae0c19</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>158</Id>
          <Key>f855ce0d-6101-463b-ad18-851eacc09522</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Sub+Grid" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/101ee777-f34a-4bcc-95aa-7e4561690bc9">
      <Info>
        <Name>Sub Grid Settings</Name>
        <Alias>columnSubGridSettings</Alias>
        <Key>05bcf02e-cd17-428a-b2ea-166215471797</Key>
        <Icon>icon-grid color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>ee803e04-e373-48f5-9e46-4006d315fea7</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Alias</Name>
          <Alias>alias</Alias>
          <Key>953abf57-78c1-408d-8348-ec0177e9cefe</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only used for display purposes]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>159</Id>
          <Key>b396e89f-976d-4bd6-ad67-b7415fcae537</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Navigation" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/a6288430-d867-41ac-898c-4303418c1dfe">
      <Info>
        <Name>Sub Header Item</Name>
        <Alias>subHeaderItem</Alias>
        <Key>e6adc0f3-6cb4-4d20-b480-2cd04a15ea19</Key>
        <Icon>icon-flash color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Name</Name>
          <Alias>title</Alias>
          <Key>d74dc443-aa80-4e89-8299-3b751ee117b3</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Icon</Name>
          <Alias>icon</Alias>
          <Key>d41f78b6-5bc6-4d28-aa38-2d00e82e33b3</Key>
          <Type>IconPicker</Type>
          <Definition>bca16803-e645-46ea-ae32-26d7d4d98456</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Add a icon before the "Name"]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Custom Icon Color</Name>
          <Alias>customIconColor</Alias>
          <Key>e6749c3d-16ed-4972-a3f6-958b753bf3b0</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Hex color to give the "Icon" a different color than "Name"]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Link</Name>
          <Alias>link</Alias>
          <Key>67149aca-81bc-4e74-be8e-daf7ef6bd66f</Key>
          <Type>Umbraco.MultiUrlPicker</Type>
          <Definition>ded9b564-0a63-4fe5-84bf-606d84e5d55e</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Visibility</Name>
          <Alias>visibility</Alias>
          <Key>3e65698a-fff0-480a-b9ec-56b34aeeea2e</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>34e4fb07-73b4-4967-90d4-909288dc6a12</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Children</Name>
          <Alias>navChildren</Alias>
          <Key>56f21503-6be7-4875-84c1-8be03368d18f</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>b549b99c-0d06-4370-a05f-53b4f756d48c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Add one more level of navigation]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>160</Id>
          <Key>74cd5a05-8d46-4fa7-98b3-6a554e5227b3</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Shared" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/465075eb-bfc3-421c-bb89-19536a0cdfe7">
      <Info>
        <Name>Tab</Name>
        <Alias>tab</Alias>
        <Key>cdc9b8e3-defc-4ed9-a579-db56daaf2401</Key>
        <Icon>icon-layers color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Name</Name>
          <Alias>title</Alias>
          <Key>9f373010-31f5-434f-9c35-25d66357d56d</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Widgets</Name>
          <Alias>widgets</Alias>
          <Key>84207c71-17d6-44cf-94ae-cf41db046a3a</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>e52e988a-65e8-45b0-87d7-dfa013357177</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>161</Id>
          <Key>e322ae09-5aee-4f9f-bb54-6ed684f71f7e</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Tabs" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/a19709fd-f05c-4cb8-bc48-e72a2e6e849a">
      <Info>
        <Name>Tabs</Name>
        <Alias>tabs</Alias>
        <Key>0fe6bab2-72e8-43de-85b1-440b5e69c9d2</Key>
        <Icon>icon-layers-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Tabs</Name>
          <Alias>tabsList</Alias>
          <Key>ea566033-39b1-4245-9380-121de57881ba</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>e936b4c8-9679-43bb-8276-7361b5ac0e89</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>162</Id>
          <Key>770d7e7b-d5e9-46f3-91a9-6ab93ffc1029</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Tabs" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/a19709fd-f05c-4cb8-bc48-e72a2e6e849a">
      <Info>
        <Name>Tabs Settings</Name>
        <Alias>tabsSettings</Alias>
        <Key>c9698ce7-9139-47dc-a425-55bd4a69be02</Key>
        <Icon>icon-layers-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Alias</Name>
          <Alias>alias</Alias>
          <Key>21eb6e64-f7c2-45de-8ac6-7cf1e91f6da5</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only used for display purposes]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Theme Color</Name>
          <Alias>themeColor</Alias>
          <Key>72b46aa0-41bd-4fe2-b64d-4450d19b1f39</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>fab3daf9-11d0-453d-870a-386a109d8b6e</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Tab Navigation Pills</Name>
          <Alias>tabNavigationPills</Alias>
          <Key>9e7d044e-951b-4512-ab04-f52dd37c9965</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[The navigation will be presented as "pills". Usually better when there is a-lot of tabs]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>4d7e0e4a-4f44-471d-a540-844fd5c1ae1b</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>163</Id>
          <Key>2907f38c-3691-4074-bb2a-87f0e6d364bd</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Text" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/fd9ce9f9-7306-4f22-b49f-0afd2d94eeff">
      <Info>
        <Name>Text</Name>
        <Alias>text</Alias>
        <Key>b8e5a252-9cd9-4721-8042-e4cdcf53ccb5</Key>
        <Icon>icon-article color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Content</Name>
          <Alias>richText</Alias>
          <Key>dbe1eb87-6626-48a6-b3b1-5c97ac9f6552</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>True</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Content Widgets</Name>
          <Alias>contentWidgets</Alias>
          <Key>1820a796-2837-45f1-90c7-2583f9443a77</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>469835c1-85cf-4c69-9adf-abe321ae0c19</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Sidebar Widgets</Name>
          <Alias>sidebarWidgets</Alias>
          <Key>47984c20-0f54-458f-a64f-90229a0d7a67</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>bb383062-0f0b-4a2c-893d-25fabb993762</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>164</Id>
          <Key>ca8b7807-a048-47cf-b4b7-8ce475c1b5a9</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Text" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/708becc3-2f4c-4bae-9e39-c44bbf72d815">
      <Info>
        <Name>Text</Name>
        <Alias>columnText</Alias>
        <Key>b7cc25f0-bba4-4277-b86c-6a1a7fb79e60</Key>
        <Icon>icon-notepad-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>58440a8f-b871-4caf-b16e-4235e650ac71</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>165</Id>
          <Key>8013332d-68bc-4a42-b3ae-acd12671adb2</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Footer/Text" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f5430bd6-879f-41a4-939c-11bba89b532f/7290d145-dc94-4494-8947-c1aba4fddaa9">
      <Info>
        <Name>Text</Name>
        <Alias>footerText</Alias>
        <Key>ac377d56-9d30-4fdd-ab43-4e1daa10c977</Key>
        <Icon>icon-notepad-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>e1b02267-4892-4458-9f3c-b8907d4f8ec1</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>78a27bd1-44c0-4149-b1c2-21f02b687f0b</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Buttons</Name>
          <Alias>buttons</Alias>
          <Key>8364409c-ab06-4715-920d-292207a8f9b7</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>69bc5d28-8798-44fc-9369-9e9763028592</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>166</Id>
          <Key>edc6a647-867d-4942-8c49-52ec8af59c19</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Sidebar" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/854bf59d-6b7a-4d52-a841-b79fc5bdf172">
      <Info>
        <Name>Text</Name>
        <Alias>textSidebar</Alias>
        <Key>e995a2c7-7163-469a-80c7-bc6b5727b7bc</Key>
        <Icon>icon-notepad-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>52dd347d-1195-4335-b62c-152f0f5fb479</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>f2064959-c20e-434e-8750-77937a89f3c8</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Boxed</Name>
          <Alias>boxed</Alias>
          <Key>6491f6e6-be20-4a1b-9a4c-2ab6cdaf1ce3</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds a grey box around the sidebar widget]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>167</Id>
          <Key>25134ed3-12cd-40de-9519-a5a9624e9053</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Text+And+Images" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/d9adca46-e049-4603-9a15-57bb9e3c2798">
      <Info>
        <Name>Text And Images</Name>
        <Alias>textAndImages</Alias>
        <Key>784a1ce7-6f10-4193-b38e-d2fcc40a6723</Key>
        <Icon>icon-plugin color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Pre Heading</Name>
          <Alias>preHeading</Alias>
          <Key>43c11427-5340-4142-bcc3-7441eb33ade8</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>9be14545-ecba-41f7-9560-2088fe77dd17</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>dfb69885-c172-444a-a361-fd2db0e07474</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Images</Name>
          <Alias>images</Alias>
          <Key>913a46cf-af0e-4e6e-ab94-1303b269108d</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>1b661f40-2242-4b44-b9cb-3990ee2b13c0</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Add up to 6 images]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Buttons</Name>
          <Alias>buttons</Alias>
          <Key>27b412c5-d540-4b0d-97a2-605de8a613dd</Key>
          <Type>Umbraco.BlockList</Type>
          <Definition>69bc5d28-8798-44fc-9369-9e9763028592</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>168</Id>
          <Key>4e7817ad-22ac-43f6-aa08-a1723d88f150</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Text+And+Images" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/d9adca46-e049-4603-9a15-57bb9e3c2798">
      <Info>
        <Name>Text And Images Settings</Name>
        <Alias>textAndImagesSettings</Alias>
        <Key>d3f88ebb-9632-4a34-9e72-cd5ac01662be</Key>
        <Icon>icon-plugin color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Remove Image Border</Name>
          <Alias>removeImageBorder</Alias>
          <Key>8e49b3db-1457-4631-b34f-2765c00b0f79</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Contain Image</Name>
          <Alias>containImage</Alias>
          <Key>52571ce6-251a-4f5c-9690-3cb20eee0c00</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[This will make sure the entire image is visible. Good for illustrations and profile pictures.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>containerWidth</Alias>
          <Key>cddecee0-7669-4694-a7b1-7e60a6b413f9</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Compact</Name>
          <Alias>compact</Alias>
          <Key>ab280257-dd91-45a0-8332-f1cb8517ed2f</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Removes the space over and under the widget]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Height</Name>
          <Alias>height</Alias>
          <Key>b505f91d-fe19-4380-9859-8648451b2e55</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>35b8f870-24ec-4b5c-81f3-03ef5a755c31</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Placement</Name>
          <Alias>textBlockPlacement</Alias>
          <Key>17fefd8e-596f-4dbe-bcc7-2f7bdd692d05</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>a013a3d1-0483-4a72-9ff5-0b29f5a9638c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Place the text-block to the left or right]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Alignment</Name>
          <Alias>textAlignment</Alias>
          <Key>a8b90852-5c11-465a-a0d6-f12bf233e017</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>70b5690f-87e8-47e3-a346-487e1adca9eb</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Vertical Text Alignment</Name>
          <Alias>verticalTextAlignment</Alias>
          <Key>e8ca5b41-a3e1-4e6c-a680-2b1029ec6023</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>f4bff246-8d6e-43a4-88c1-379bacba7377</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>f1ca99cc-5d8a-4e7e-920a-5f4e293467c3</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>8</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>41fee320-7ac3-4227-a7b1-1474a8fa0d4d</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>9</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Animate</Name>
          <Alias>animate</Alias>
          <Key>e64823c1-80ea-4498-93a9-620919b26e63</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>10</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Intro animation when widget is visible]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>1427e8f5-383f-44a9-8df5-c1fdaccc27b8</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>11</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>169</Id>
          <Key>1369ad93-2fef-4829-b960-19224e7cce31</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Footer/Text" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/f5430bd6-879f-41a4-939c-11bba89b532f/7290d145-dc94-4494-8947-c1aba4fddaa9">
      <Info>
        <Name>Text Settings</Name>
        <Alias>footerTextSettings</Alias>
        <Key>a2a2cb54-457b-49e4-92a7-169172f50072</Key>
        <Icon>icon-notepad-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>eafe262c-bba7-4539-a227-836a1bbe95e5</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Align Content</Name>
          <Alias>alignContent</Alias>
          <Key>61d28add-87f3-4cab-8335-106a0d520116</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>70b5690f-87e8-47e3-a346-487e1adca9eb</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>170</Id>
          <Key>8b855ef4-6239-4989-b4d0-71032c117a02</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Text" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/708becc3-2f4c-4bae-9e39-c44bbf72d815">
      <Info>
        <Name>Text Settings</Name>
        <Alias>columnTextSettings</Alias>
        <Key>39028863-be61-49b2-8c0a-ec957ed7bb14</Key>
        <Icon>icon-notepad-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>f76470f6-31d3-47bc-84bf-9512558fce42</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Alias</Name>
          <Alias>alias</Alias>
          <Key>281bfc82-8f25-46ce-bb50-a2f50231c749</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only used for display purposes]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Boxed</Name>
          <Alias>boxedColumn</Alias>
          <Key>34f06d32-6bae-403e-b0e0-d3e059a72544</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Creates a box around the column]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>171</Id>
          <Key>134e4cf1-f103-4a8a-8a0f-7888aa56847b</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Text" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/fd9ce9f9-7306-4f22-b49f-0afd2d94eeff">
      <Info>
        <Name>Text Settings</Name>
        <Alias>textSettings</Alias>
        <Key>8c70fdc7-7f8b-4066-8597-685040b57eb8</Key>
        <Icon>icon-article color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Alias</Name>
          <Alias>alias</Alias>
          <Key>ea25c4e8-a7b6-40b1-90fd-381c33114842</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Only used for display purposes]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>containerWidth</Alias>
          <Key>6a7bbcf8-fad2-4856-86f6-ab1e70d32224</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Sidebar Left</Name>
          <Alias>sidebarLeft</Alias>
          <Key>6ffcbbce-2ca4-4e4f-9af9-2d759057a697</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Places the sidebar widgets to the left of the text]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Sticky Sidebar</Name>
          <Alias>stickySidebar</Alias>
          <Key>b13bfdf9-f759-49f8-88aa-5ee05a878e87</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Sidebar content will stick to the top of the page when scrolling]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>9b5c7b5b-2f30-42e7-b5ac-90c120ab80e4</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>af67b030-d7ff-48b9-9da1-daaa754dd3e0</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>37e6fec3-1a80-41e3-b437-015c55622ab5</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>172</Id>
          <Key>68db6748-b052-44c0-baaf-18eee7d73c7f</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType>
      <Info>
        <Name>Theme</Name>
        <Alias>theme</Alias>
        <Key>9ffb4391-7c57-432f-9353-135e9d15d8ce</Key>
        <Icon>icon-brush-alt color-blue</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description>Settings for colors, fonts, logos and much more</Description>
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>False</IsElement>
        <Variations>Nothing</Variations>
        <Master>websiteSettings</Master>
        <Compositions>
          <Composition>websiteSettings</Composition>
        </Compositions>
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Show Theme Explorer</Name>
          <Alias>showThemeExplorer</Alias>
          <Key>e43d7bb5-692b-4f3e-9e0a-d0cf33e025f8</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="general">General</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Displays a toolbar in the top right corner of the site, allowing you to test different theme settings for colors, fonts etc.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Logo On Dark</Name>
          <Alias>headerLogoOnDark</Alias>
          <Key>69f6da69-5cf7-4406-8eee-aa235818fa10</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="general">General</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Logo that works on a dark background, recommended format .svg]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Logo On Light</Name>
          <Alias>headerLogoOnLight</Alias>
          <Key>d2a29773-f4ba-44e6-8c20-7c8ce00b87c4</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="general">General</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Logo that works on a light background]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Favicon</Name>
          <Alias>favicon</Alias>
          <Key>1cd69d9e-0ce7-4f77-9604-8845261eb3ff</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="general">General</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Select a square .png image. 192px x 192px for best result]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>App Icon</Name>
          <Alias>appIcon</Alias>
          <Key>68edfc18-3a33-4274-94dc-b0dd02a2bc71</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="general">General</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Select a square .png image with background color. 180px x 180px for best result]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Icon Background Color</Name>
          <Alias>iconBackgroundColor</Alias>
          <Key>91d0eae7-9c70-41c5-8a65-f337364d8702</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="general">General</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[In some cases your favicon will be shown with a background color, enter the hex value of that color, include #]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Button Border Radius</Name>
          <Alias>buttonBorderRadius</Alias>
          <Key>a8dc402c-3c1d-421d-b8f1-0429e038665c</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>c5babca9-845d-484f-a896-0aacd90ba311</Definition>
          <Tab Alias="general">General</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>"To top"-button color</Name>
          <Alias>toTopButtonColor</Alias>
          <Key>d5489d30-135d-42c2-8742-cf0d46bd9080</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>f88e9541-af93-4b65-a3a3-0e658361e13d</Definition>
          <Tab Alias="general">General</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Set the color of the "scroll to top"-button visible in the lower right corner]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Theme</Name>
          <Alias>themeColor</Alias>
          <Key>56e55423-775e-44d0-aa37-1fa29699c093</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Theme Contrast</Name>
          <Alias>themeContrast</Alias>
          <Key>578c966b-c677-40a3-98b6-06f6f4f9b0c3</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Color of text placed over the theme color. Default: #FFF]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Theme Alt</Name>
          <Alias>themeAltColor</Alias>
          <Key>52de9088-c311-449a-a6b3-3baf16f77195</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Theme Alt Contrast</Name>
          <Alias>themeAltColorContrast</Alias>
          <Key>43cdbbe8-c805-4934-a297-b465f35f3941</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Color of text placed over the alternative theme color. Default: #FFF]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading Dark</Name>
          <Alias>headingColorDark</Alias>
          <Key>2e170cf0-b7d4-4155-bdee-54fe7eecfa89</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Color of headings on light background. Default: #111]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Dark</Name>
          <Alias>textColorDark</Alias>
          <Key>685782ca-82f8-463b-bff4-9a01f6f5de39</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Color of text on light background. Default: #444]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Border Dark</Name>
          <Alias>borderDark</Alias>
          <Key>d0690ff1-8677-4810-b8cd-3f4f5fa7ebbb</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: rgba(0,0,0,0.08)]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading Light</Name>
          <Alias>headingColorLight</Alias>
          <Key>83b3cb27-8f8f-4f59-8f29-ed8207caa666</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Color of headings on dark background. Default: #FFF]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Light</Name>
          <Alias>textColorLight</Alias>
          <Key>2cc9a310-4b98-484c-84c4-eb953d5e1a00</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>8</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Color of text on dark background. Default: #FFF]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Border Light</Name>
          <Alias>borderLight</Alias>
          <Key>d7500808-78f1-41ff-9b97-cdba23ae9486</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>9</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: rgba(255,255,255,0.1)]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Gray Background</Name>
          <Alias>grayBackground</Alias>
          <Key>803ce554-9451-4013-bff2-e49aa4d202fc</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>10</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: #F9F9F9]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Dark Background</Name>
          <Alias>darkBackground</Alias>
          <Key>00bef0a0-f55c-449b-b6d7-9db04e53d33c</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>11</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: #111]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Selected Navigation Item</Name>
          <Alias>selectedNavigationItem</Alias>
          <Key>81d84eee-eb35-487e-abe5-353d19799e49</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>12</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Color of selected item in the main navigation. Default is Theme Color]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Success</Name>
          <Alias>success</Alias>
          <Key>b982dc50-8241-49c2-8b99-ccd04b3473a0</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>13</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: #2ecc71]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Error</Name>
          <Alias>error</Alias>
          <Key>d11fe4e5-fa7e-4ae1-b69f-d66cc60813cf</Key>
          <Type>ColorValue</Type>
          <Definition>ca5d09cb-6193-4b95-b7c1-bc3de01fea8d</Definition>
          <Tab Alias="colors">Colors</Tab>
          <SortOrder>14</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: #e74c3c]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Embed Font</Name>
          <Alias>embedFont</Alias>
          <Key>a8cb7446-1d6c-464d-a8ab-2f676722eae9</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[This html code will be placed in the &lt;head&gt;]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading Font</Name>
          <Alias>headingFont</Alias>
          <Key>a8d6f872-a837-4ed8-8624-04eeb233ef80</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Font Stack for headings]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Body Font</Name>
          <Alias>bodyFont</Alias>
          <Key>cf60415b-62ad-4d7a-b804-3feb14a87853</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Font Stack for site]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text: Font Size</Name>
          <Alias>textFontSize</Alias>
          <Key>884fba12-4caa-412e-ad63-151c08dd4bae</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>a87d223b-7045-40d5-97ba-ec9bd4d5ea3d</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 1.1rem]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Big: Font Size</Name>
          <Alias>textBigFontSize</Alias>
          <Key>603619b1-4f60-4864-85c3-007dd84d6339</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>a87d223b-7045-40d5-97ba-ec9bd4d5ea3d</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 1.25rem]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Small: Font Size</Name>
          <Alias>textSmallFontSize</Alias>
          <Key>05b65f37-8040-4be4-acb6-39f68e7f3798</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>a87d223b-7045-40d5-97ba-ec9bd4d5ea3d</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 0.75rem]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text: Line Height</Name>
          <Alias>textLineHeight</Alias>
          <Key>eae0888d-255f-4121-b20e-dda4f6d8becf</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>69d8e3b0-a7b1-4b31-bba3-bba3942ba5eb</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 1.6]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text: Font Weight</Name>
          <Alias>textFontWeight</Alias>
          <Key>4cfbd175-8efc-4690-bf8f-557fe48bfe21</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: normal]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Big: Font Weight</Name>
          <Alias>textBigFontWeight</Alias>
          <Key>815598c6-2dea-46f1-adcc-29f0833b5a89</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>8</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 300]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading: Line Height</Name>
          <Alias>headingLineHeight</Alias>
          <Key>50d2f81e-0d26-4019-8bc2-aa89ee2d060b</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>69d8e3b0-a7b1-4b31-bba3-bba3942ba5eb</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>9</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 1.5]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading: Font Weight</Name>
          <Alias>headingFontWeight</Alias>
          <Key>e2089aac-0952-4bc4-9174-12361ad9b6b2</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>10</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: bold]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading 1: Font Size</Name>
          <Alias>heading1FontSize</Alias>
          <Key>1334a66e-f95a-4219-b594-15951895c90a</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>a87d223b-7045-40d5-97ba-ec9bd4d5ea3d</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>11</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 2.5rem]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading 2: Font Size</Name>
          <Alias>heading2FontSize</Alias>
          <Key>293fbbcd-4238-4f8d-82b9-1d2b3a73d4d1</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>a87d223b-7045-40d5-97ba-ec9bd4d5ea3d</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>12</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 2.25rem]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading 3: Font Size</Name>
          <Alias>heading3FontSize</Alias>
          <Key>3c2a46f9-9acf-4e16-b7c1-f6d0ec292acc</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>a87d223b-7045-40d5-97ba-ec9bd4d5ea3d</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>13</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 1.75rem]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading 4: Font Size</Name>
          <Alias>heading4FontSize</Alias>
          <Key>5bf7b68e-43a1-461c-8da1-301438109728</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>a87d223b-7045-40d5-97ba-ec9bd4d5ea3d</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>14</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 1.5rem]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading 5: Font Size</Name>
          <Alias>heading5FontSize</Alias>
          <Key>c2b73a9a-cd26-4b30-afa5-37414abd6afd</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>a87d223b-7045-40d5-97ba-ec9bd4d5ea3d</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>15</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 1.2rem]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading 6: Font Size</Name>
          <Alias>heading6FontSize</Alias>
          <Key>06d3e37f-8b40-45b3-90d7-596ef1877215</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>a87d223b-7045-40d5-97ba-ec9bd4d5ea3d</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>16</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 1rem]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hero Heading: Font Size</Name>
          <Alias>heroHeadingFontSize</Alias>
          <Key>4b45a301-0101-493e-baa1-a7c3ac8432bc</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>a87d223b-7045-40d5-97ba-ec9bd4d5ea3d</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>17</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default:  3.75rem]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hero Heading Mobile: Font Size</Name>
          <Alias>heroHeadingMobileFontSize</Alias>
          <Key>d1de4798-f4dd-465b-a8c0-b14765ec0d63</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>a87d223b-7045-40d5-97ba-ec9bd4d5ea3d</Definition>
          <Tab Alias="typography">Typography</Tab>
          <SortOrder>18</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 2.5rem]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Header Theme</Name>
          <Alias>headerBackgroundColor</Alias>
          <Key>3a8d771f-e80a-4566-a6fc-4c3b052ab602</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>1b288bec-2cf1-42f0-a445-97bed308e0f3</Definition>
          <Tab Alias="header">Header</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Background color for the header]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>headerContainerWidth</Alias>
          <Key>e4ed07cb-6d21-4b4e-ab45-3ecb2abeb1d4</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="header">Header</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Header Layout</Name>
          <Alias>headerLayout</Alias>
          <Key>9d365451-5d56-4741-bc92-2ccb29768beb</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>85c53ccd-7fac-4c2a-8203-033165986ab3</Definition>
          <Tab Alias="header">Header</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Height</Name>
          <Alias>headerHeight</Alias>
          <Key>d1347f13-394e-408a-a855-3d053f8a11a4</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>c5babca9-845d-484f-a896-0aacd90ba311</Definition>
          <Tab Alias="header">Header</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Height of the header. Default: 70px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Height Mobile</Name>
          <Alias>headerHeightMobile</Alias>
          <Key>05bc0365-82a5-477a-b0cc-7339469a710c</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>c5babca9-845d-484f-a896-0aacd90ba311</Definition>
          <Tab Alias="header">Header</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Height of the header on mobile. Default: 50px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Logo Padding</Name>
          <Alias>logoPadding</Alias>
          <Key>74c9f4d6-a403-4fb1-ab5f-dcf493bf3b8a</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>c5babca9-845d-484f-a896-0aacd90ba311</Definition>
          <Tab Alias="header">Header</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Padding over and under the logo. Default: 17px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Logo Padding Mobile</Name>
          <Alias>logoPaddingMobile</Alias>
          <Key>723a43ba-ccd3-42d3-b2fd-bc3e4e0682ce</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>c5babca9-845d-484f-a896-0aacd90ba311</Definition>
          <Tab Alias="header">Header</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Padding over and under the logo on mobile. Default: 12px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Navigation Padding</Name>
          <Alias>navigationPadding</Alias>
          <Key>5b3cd544-8949-48bc-b3e2-1c0d9964984e</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>c5babca9-845d-484f-a896-0aacd90ba311</Definition>
          <Tab Alias="header">Header</Tab>
          <SortOrder>7</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Padding around navigation items. Default: 30px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Navigation Padding Smaller Screens</Name>
          <Alias>navigationPaddingSmallerScreens</Alias>
          <Key>652ec3b6-81f0-4560-81c5-9e59a271cf8f</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>c5babca9-845d-484f-a896-0aacd90ba311</Definition>
          <Tab Alias="header">Header</Tab>
          <SortOrder>8</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Padding around navigation items on smaller screens. Default: 15px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Navigation Font Size</Name>
          <Alias>navigationFontSize</Alias>
          <Key>4f5616b7-09c4-4329-8089-80c838a6befb</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>a87d223b-7045-40d5-97ba-ec9bd4d5ea3d</Definition>
          <Tab Alias="header">Header</Tab>
          <SortOrder>9</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 0.875rem]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Navigation Font Size Mobile</Name>
          <Alias>navigationFontSizeMobile</Alias>
          <Key>804930ea-d075-4f5f-9a52-64f2488cf898</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>a87d223b-7045-40d5-97ba-ec9bd4d5ea3d</Definition>
          <Tab Alias="header">Header</Tab>
          <SortOrder>10</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: 1rem]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Navigation Font Weight</Name>
          <Alias>navigationFontWeight</Alias>
          <Key>60b6fc27-1d84-48ab-96fb-a7556c6efda2</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="header">Header</Tab>
          <SortOrder>11</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default: bold]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Footer Theme</Name>
          <Alias>footerBackgroundColor</Alias>
          <Key>cdab2df4-61ff-4d96-a551-2bdd088b2879</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>fab3daf9-11d0-453d-870a-386a109d8b6e</Definition>
          <Tab Alias="footer">Footer</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Background color for the footer]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>footerContainerWidth</Alias>
          <Key>388a789a-26e0-42ec-81ab-514d179dd451</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="footer">Footer</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Container Width Small</Name>
          <Alias>containerWidthSmall</Alias>
          <Key>a839e29e-044f-4640-93da-5f50681cedcc</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>c5babca9-845d-484f-a896-0aacd90ba311</Definition>
          <Tab Alias="grid">Grid</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Small container width. Default: 850px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>containerWidth</Alias>
          <Key>17c36ea6-739e-48c4-9faf-2af9081cbbcd</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>c5babca9-845d-484f-a896-0aacd90ba311</Definition>
          <Tab Alias="grid">Grid</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Default container width. Default: 1300px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Container Width Big</Name>
          <Alias>containerWidthBig</Alias>
          <Key>ce8097f1-7ac5-4122-aa35-457ebbe0e044</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>c5babca9-845d-484f-a896-0aacd90ba311</Definition>
          <Tab Alias="grid">Grid</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Big container width. Default: 1600px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Grid Gutter</Name>
          <Alias>gridGutter</Alias>
          <Key>a65892d4-38ef-4daf-910e-9913084b411c</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>c5babca9-845d-484f-a896-0aacd90ba311</Definition>
          <Tab Alias="grid">Grid</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Space between columns. Default: 30px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Grid Gutter Medium</Name>
          <Alias>gridGutterMedium</Alias>
          <Key>93cce584-997a-4109-ab01-5a8cec443c04</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>c5babca9-845d-484f-a896-0aacd90ba311</Definition>
          <Tab Alias="grid">Grid</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Space between columns on tablets. Default: 15px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Grid Gutter Small</Name>
          <Alias>gridGutterSmall</Alias>
          <Key>e78e6b51-1028-49f7-b1bc-5b4f4fa933e7</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>c5babca9-845d-484f-a896-0aacd90ba311</Definition>
          <Tab Alias="grid">Grid</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Space between columns on mobile. Default: 15px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Grid Gutter XS</Name>
          <Alias>gridGutterXS</Alias>
          <Key>6087e653-61e4-474f-9c1c-c0c302b06ebe</Key>
          <Type>IglooMeasurmentValue</Type>
          <Definition>c5babca9-845d-484f-a896-0aacd90ba311</Definition>
          <Tab Alias="grid">Grid</Tab>
          <SortOrder>6</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Space between columns on smaller mobiles. Default: 15px]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>173</Id>
          <Key>3f46043e-0615-4324-8979-1a5392a1e7f6</Key>
          <Type>Group</Type>
          <Caption>General</Caption>
          <Alias>general</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
        <Tab>
          <Id>174</Id>
          <Key>611250eb-f59a-44df-9bd3-fead680b4d78</Key>
          <Type>Group</Type>
          <Caption>Colors</Caption>
          <Alias>colors</Alias>
          <SortOrder>1</SortOrder>
        </Tab>
        <Tab>
          <Id>175</Id>
          <Key>046ebf02-fcf2-478e-8721-dcd0f47bcf3c</Key>
          <Type>Group</Type>
          <Caption>Typography</Caption>
          <Alias>typography</Alias>
          <SortOrder>2</SortOrder>
        </Tab>
        <Tab>
          <Id>176</Id>
          <Key>939a48b9-997c-4e13-a281-5dd5e7656eeb</Key>
          <Type>Group</Type>
          <Caption>Header</Caption>
          <Alias>header</Alias>
          <SortOrder>3</SortOrder>
        </Tab>
        <Tab>
          <Id>177</Id>
          <Key>c9ccdee1-65dd-4441-917d-f46fe53bbeda</Key>
          <Type>Group</Type>
          <Caption>Footer</Caption>
          <Alias>footer</Alias>
          <SortOrder>4</SortOrder>
        </Tab>
        <Tab>
          <Id>178</Id>
          <Key>097ec06c-a9eb-4bde-8596-ba5ec7fa32dc</Key>
          <Type>Group</Type>
          <Caption>Grid</Caption>
          <Alias>grid</Alias>
          <SortOrder>5</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Umbraco+Form" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/35110af4-ec56-499d-a4d6-0ac6a17ac61c">
      <Info>
        <Name>Umbraco Form</Name>
        <Alias>umbracoForm</Alias>
        <Key>97c328b5-9396-474d-82f2-d9a3b5e48ffb</Key>
        <Icon>icon-paper-plane-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Pre Heading</Name>
          <Alias>preHeading</Alias>
          <Key>ba9485fd-af42-48cb-b276-961e5fbe8b4e</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Heading</Name>
          <Alias>heading</Alias>
          <Key>6c9b997d-ae72-4271-9a35-58b1418026a6</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text</Name>
          <Alias>text</Alias>
          <Key>cf7daa8d-421a-480c-b811-905b288d5601</Key>
          <Type>Umbraco.TinyMCE</Type>
          <Definition>558c2f81-e36f-4e32-b038-52ea5db20d3c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Form</Name>
          <Alias>form</Alias>
          <Key>be83bbac-b526-4bfa-940c-b587d366b350</Key>
          <Type>UmbracoForms.FormPicker</Type>
          <Definition>ba334926-a94e-4c21-b392-9011ae9c7596</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>179</Id>
          <Key>835985a9-b545-46bd-bb07-7ab754463597</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Umbraco+Form" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/e73c988a-8422-44a4-a09c-2226f4354f97">
      <Info>
        <Name>Umbraco Form</Name>
        <Alias>columnUmbracoForm</Alias>
        <Key>95506bd0-a381-46ae-93d0-13b08d64468a</Key>
        <Icon>icon-paper-plane-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Form</Name>
          <Alias>form</Alias>
          <Key>3e90a3b4-18ef-47f8-bf70-378470629f2c</Key>
          <Type>Umbraco.Label</Type>
          <Definition>f0bc4bfb-b499-40d6-ba86-058885a5178c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>180</Id>
          <Key>95449ded-2005-408f-b021-47639dab83c6</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Umbraco+Form" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/e73c988a-8422-44a4-a09c-2226f4354f97">
      <Info>
        <Name>Umbraco Form Settings</Name>
        <Alias>columnUmbracoFormSettings</Alias>
        <Key>0b43179e-f066-497b-9bab-d79e252baf22</Key>
        <Icon>icon-paper-plane-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>eab82d3a-803b-431e-8d44-8997be9870de</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Boxed Column</Name>
          <Alias>boxedColumn</Alias>
          <Key>2289af64-d473-440a-be36-0e39e353126a</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Image</Name>
          <Alias>backgroundImage</Alias>
          <Key>3311dd69-19c5-4f23-83eb-fe9441b2decb</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>fe71522c-0670-4737-9ec6-178c4b343f5f</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>1453e1b5-9809-460b-98c0-608e35a7710e</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>181</Id>
          <Key>9c98cbf6-4e50-4e71-86d7-599b729ed3a1</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Umbraco+Form" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/35110af4-ec56-499d-a4d6-0ac6a17ac61c">
      <Info>
        <Name>Umbraco Form Settings</Name>
        <Alias>umbracoFormSettings</Alias>
        <Key>aecb7749-9a41-4ee7-8b2b-9ac7399914fe</Key>
        <Icon>icon-paper-plane-alt color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Background Image</Name>
          <Alias>backgroundImage</Alias>
          <Key>eb2e5cfb-c582-45f2-a86e-627bcf272742</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Background Color</Name>
          <Alias>backgroundColor</Alias>
          <Key>dfd53ea6-a542-458a-8b26-9ea93021b509</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>7d2401a5-67f0-4b78-bf39-df3e39c0bf7c</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Text Color</Name>
          <Alias>textColor</Alias>
          <Key>f430bec3-c66f-4a86-9d9d-8c3dcf9a3298</Key>
          <Type>IglooApprovedColorPicker</Type>
          <Definition>b57a1e48-2a3e-424f-9233-aeb10a35b207</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Container Width</Name>
          <Alias>containerWidth</Alias>
          <Key>922cbab7-adc7-4ab2-bb94-cfe0412e0c24</Key>
          <Type>BBB.ButtonPicker</Type>
          <Definition>6cf36ab1-264f-48f4-8265-217127b86e25</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Anchor ID</Name>
          <Alias>anchorID</Alias>
          <Key>697f98f1-b457-482b-94b7-2d9f35fbc290</Key>
          <Type>Umbraco.TextBox</Type>
          <Definition>0cc0eba1-9960-42c9-bf9b-60e150b429ae</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds an ID to the widget so it can be used for anchor links]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>182</Id>
          <Key>214efc66-6004-49c2-b084-3c07764eeaab</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Video" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/9837ff3c-d358-4576-9817-f66bd86fe7da">
      <Info>
        <Name>Video</Name>
        <Alias>columnVideo</Alias>
        <Key>3f39d34e-5a92-4314-9575-6aa4f22a1972</Key>
        <Icon>icon-play color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Video</Name>
          <Alias>video</Alias>
          <Key>6d215adc-b60b-4576-860e-0242431e4883</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[.mp4 file]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Poster</Name>
          <Alias>poster</Alias>
          <Key>f50835c8-77ac-47bf-b6cc-70e46d3401ec</Key>
          <Type>Umbraco.MediaPicker3</Type>
          <Definition>d195af77-4fe1-41ed-a70e-91cad8f35595</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Image to be shown while the video is downloading, or until the user hits the play button. If this is not included, the first frame of the video will be used instead.]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Video Embed Code</Name>
          <Alias>videoEmbedCode</Alias>
          <Key>39d28947-d84a-422b-8caf-f10d53f7daaf</Key>
          <Type>Umbraco.TextArea</Type>
          <Definition>c6bac0dd-4ab9-45b1-8e30-e4b619ee5da3</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Paste the embed code from ex YouTube or Vimeo here to show instead of .mp4 file]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>183</Id>
          <Key>4229436e-c6e0-4166-8623-05d32041aa7e</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
    <DocumentType Folders="Widgets/Grid/Video" FolderKeys="fadd2193-84ec-4cd5-96f7-d6901c842a7c/dad5dd1b-321a-4809-8942-5beea83b6c38/9837ff3c-d358-4576-9817-f66bd86fe7da">
      <Info>
        <Name>Video Settings</Name>
        <Alias>columnVideoSettings</Alias>
        <Key>a62fc95e-4f14-4511-9963-7dec8ca9b652</Key>
        <Icon>icon-play color-black</Icon>
        <Thumbnail>folder.png</Thumbnail>
        <Description />
        <AllowAtRoot>False</AllowAtRoot>
        <IsListView>False</IsListView>
        <IsElement>True</IsElement>
        <Variations>Nothing</Variations>
        <Compositions />
        <AllowedTemplates />
        <DefaultTemplate></DefaultTemplate>
      </Info>
      <Structure />
      <GenericProperties>
        <GenericProperty>
          <Name>Column Width</Name>
          <Alias>columnWidth</Alias>
          <Key>f9ddf893-db64-447c-8800-96333379bd9a</Key>
          <Type>Umbraco.DropDown.Flexible</Type>
          <Definition>8038005e-959e-4bd1-b958-59d9395b0fd9</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>0</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Hide Controls</Name>
          <Alias>hideControls</Alias>
          <Key>a3c6ca19-1789-44ab-90d5-d5e5e8132268</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>1</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Hide player controls, play pause etc]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Autoplay</Name>
          <Alias>autoplay</Alias>
          <Key>8fc545fb-e4b1-405e-ac12-87bcd3ce1509</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>2</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Start video on page load]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Mute</Name>
          <Alias>mute</Alias>
          <Key>07beec08-8f80-47d8-a17e-a1a7ef0f8b8f</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>3</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Mute video from start]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Loop</Name>
          <Alias>loop</Alias>
          <Key>ff6de9a4-0c53-407a-b33b-cee855657ac8</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>4</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Loop video]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
        <GenericProperty>
          <Name>Video Shadow</Name>
          <Alias>videoShadow</Alias>
          <Key>b8180245-813f-4ade-961c-721940e27a9f</Key>
          <Type>Umbraco.TrueFalse</Type>
          <Definition>92897bc6-a5f3-4ffe-ae27-f2e7e33dda49</Definition>
          <Tab Alias="content">Content</Tab>
          <SortOrder>5</SortOrder>
          <Mandatory>False</Mandatory>
          <LabelOnTop>False</LabelOnTop>
          <MandatoryMessage></MandatoryMessage>
          <Validation></Validation>
          <ValidationRegExpMessage></ValidationRegExpMessage>
          <Description><![CDATA[Adds a shadow under the video]]></Description>
          <Variations>Nothing</Variations>
        </GenericProperty>
      </GenericProperties>
      <Tabs>
        <Tab>
          <Id>184</Id>
          <Key>e2f0e951-aef1-4ede-bc8f-7ff8fedc6025</Key>
          <Type>Group</Type>
          <Caption>Content</Caption>
          <Alias>content</Alias>
          <SortOrder>0</SortOrder>
        </Tab>
      </Tabs>
      <HistoryCleanupPolicy preventCleanup="false" />
    </DocumentType>
  </DocumentTypes>
  <MediaTypes />
  <Templates>
    <Template>
      <Name>Feed</Name>
      <Key>e7df0f63-1538-4962-9f2e-b7b38939c881</Key>
      <Alias>Feed</Alias>
      <Design><![CDATA[@inherits UmbracoViewPage<ContentModels.Feed>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using System.Globalization
@{
    Layout = "Master.cshtml";

    var posts = Model.Children<ContentModels.Post>().Where(x => x.IsVisible()).OrderByDescending(x => x.Date).ToList();

    var page = 1;

    if (Context.Request.Query.Keys.Contains("page"))
    {
        var requestQuery = Context.Request.Query["page"][0];
        page = int.Parse(requestQuery);
    }

    const int takePerPage = 9;
    var numberOfPagesDecimal = Convert.ToDecimal(posts.Count) / takePerPage;
    var numberOfPagesInt = int.Parse(Math.Ceiling(numberOfPagesDecimal).ToString(CultureInfo.InvariantCulture));

    var pagesToSkip = takePerPage * (page - 1);
    posts = posts.Skip(pagesToSkip).Take(takePerPage).ToList();
}

@await Html.PartialAsync("~/Views/Partials/Widgets/RenderWidgets.cshtml")

<section class="block feed gray-bg">

    <div class="container">

        <div class="row row--center box-wrap">

            @foreach (var post in posts)
            {
                <div class="col-33 col-s-100">
                    <article class="box">
                        @if (post.PostImage != null)
                        {
                            <div class="box__image">
                                <a href="@post.Url()" title="@post.Heading" tabindex="-1">
                                    <img class="lazyload"
                                         src="@(post.PostImage.GetCropUrl(10,7, quality: 80))"
                                         data-sizes="auto"
                                         data-srcset="@(post.PostImage.GetCropUrl(300,210, quality: 80)) 300w,
                                	    @(post.PostImage.GetCropUrl(500,350, quality: 80)) 500w,
                                	    @(post.PostImage.GetCropUrl(1000,700, quality: 80)) 1000w"
                                         alt="@post.Heading">
                                </a>
                            </div>
                        }
                        <div class="box__text">
                            <h3 class="h5"><a title="@post.Heading" href="@post.Url()">@post.Heading</a></h3>
                            @if (!Model.HideDates)
                            {
                                <div class="box__meta">
                                    @string.Format("{0: dd MMMM yyyy}", post.Date)
                                </div>
                            }
                            <p>@post.PostDescription</p>
                        </div>
                    </article>
                </div>
            }
        </div>

    </div>

    @if (numberOfPagesInt > 1)
    {
        <div class="text-center">
            <ul class="pager">
                @for (var i = 1; i <= numberOfPagesInt; i++)
                {
                    <li class="@(i == page ? "selected" : "")"><a title="Go to page @i" href="@(Model.Url())?page=@i">@i</a></li>
                }
            </ul>
        </div>
    }
</section>]]></Design>
    </Template>
    <Template>
      <Name>Master</Name>
      <Key>01656312-9988-4aef-a891-af119cae266f</Key>
      <Alias>Master</Alias>
      <Design><![CDATA[@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject Igloo.Core.Services.ISettingsService _settingsService;
@using Igloo.Core.Extensions;
@using Smidge;
@{
    Layout = null;

    var googleAnalyticsId = _settingsService.Get<string>(Model, "googleAnalyticsID");
    var googleTagManagerID = _settingsService.Get<string>(Model, "googleTagManagerID");
    var hotjarID = _settingsService.Get<string>(Model, "hotjarID");

    var enableCookieConsentDialog = _settingsService.Get<bool>(Model, "enableCookieConsentDialog");
    var embedFont = _settingsService.Get<string>(Model, "embedFont");

    var settingsLogoUrl = _settingsService.Get<IPublishedContent>(Model, "companyLogo")?.Url();
    var settingsPhoneNumber = _settingsService.Get<string>(Model, "companyPhoneNumber");
    var settingsCompanyName = _settingsService.Get<string>(Model, "companyName");

    var hideHeader = Model.Value<bool>("hideHeader");
    var hideFooter = Model.Value<bool>("hideFooter");
    var site = Model.Root();
    var lang = System.Threading.Thread.CurrentThread.CurrentCulture.TwoLetterISOLanguageName;
    var search = site.FirstChild<Search>();
    var enableSubHeader = site.Value<bool>("enableSubHeader");

    var showThemeExplorer = _settingsService.Get<bool>(Model, "showThemeExplorer");

    SmidgeHelper
    .CreateJsBundle("igloo-js-bundle")
    .RequiresJs("/scripts/lib/ls.respimg.min.js", 
        "/scripts/lib/ls.bgset.min.js" , 
        "/scripts/lib/lazysizes.min.js",
        "/scripts/lib/fluidvids.js",
        "/scripts/lib/photoswipe.min.js",
        "/scripts/lib/photoswipe-ui-default.min.js",
        "/scripts/lib/instafeed.js",
        "/scripts/lib/flickity.pkgd.min.js",
        "/scripts/lib/forms/promise-polyfill/polyfill.min.js",
        "/scripts/lib/forms/aspnet-validation/aspnet-validation.min.js",
        "/scripts/lib/intersection-observer.js",
        "/scripts/lib/axios.min.js",
        "/scripts/ig-app.js",
        "/scripts/custom.js");

    SmidgeHelper
        .CreateCssBundle("igloo-css-bundle")
        .RequiresCss("~/css/lib/reset.css", 
        "~/css/ig-theme.defaults.css", 
        "~/css/lib/font-awesome.css", 
        "~/css/lib/photoswipe.css", 
        "~/css/ig-base.css", 
        "~/css/ig-header.css", 
        "~/css/ig-footer.css", 
        "~/css/ig-widgets.css",
        "~/css/custom.css"
        );

}

<!DOCTYPE html>
<html lang="@lang">
<head>
    <link rel="preload" href="/ig-assets/fonts/fontawesome-webfont.woff2?v=4.7.0" as="font" type="font/woff2" crossorigin>

    @Html.Raw(embedFont)
    @await SmidgeHelper.CssHereAsync("igloo-css-bundle")
    <link href="@Model.GetThemePath()" rel="stylesheet" type="text/css" />

    @await Html.PartialAsync("~/Views/Partials/Shared/Meta.cshtml")
    @if (!string.IsNullOrEmpty(googleTagManagerID))
    {
        <script>
            (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
            new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
            j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
            'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
            })(window,document,'script','dataLayer','@googleTagManagerID');
        </script>
    }

    @if (!string.IsNullOrEmpty(hotjarID))
    {
        <script>
            (function(h,o,t,j,a,r){
                h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
                h._hjSettings={hjid:@(hotjarID),hjsv:6};
                a=o.getElementsByTagName('head')[0];
                r=o.createElement('script');r.async=1;
                r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
                a.appendChild(r);
            })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
        </script>
    }

    <script>window.MSInputMethodContext && document.documentMode && document.write('<script src="/scripts/lib/ie11CustomProperties.js"><\x2fscript>');</script>
</head>
<body class="page-loading @(enableSubHeader ? "pre-top-visible" : "")" data-siteid="@site.Id" data-culture="@System.Threading.Thread.CurrentThread.CurrentCulture.Name">

    <a href="#content" class="button skip-link">@Umbraco.GetDictionaryValue("Jump to content")</a>

    <div class="io-hook"></div>

    @if (!hideHeader)
    {
        if (enableSubHeader)
        {
            @await Html.PartialAsync("~/Views/Partials/Shared/SubHeader.cshtml")
        }
        @await Html.PartialAsync("~/Views/Partials/Shared/Header.cshtml")
    }

    <main id="content">
        @RenderBody()
    </main>

    @if (!hideFooter)
    {
        @await Html.PartialAsync("~/Views/Partials/Shared/Footer.cshtml", site)
    }

    @if (search != null)
    {
        @await Html.PartialAsync("~/Views/Partials/Shared/SearchModal.cshtml")
    }

    @if (enableCookieConsentDialog)
    {
        @await Html.PartialAsync("~/Views/Partials/Shared/CookieConsent.cshtml")
    }

    @await Html.PartialAsync("~/Views/Partials/Shared/PhotoSwipe.cshtml")

    @if (googleAnalyticsId != "")
    {
        <script async src="https://www.googletagmanager.com/gtag/js?id=@googleAnalyticsId"></script>
        <script>
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());
            gtag('config', '@googleAnalyticsId');
        </script>
    }

    <script type="application/ld+json">
        {
        "@@context": "http://schema.org",
        "@@type": "Organization",
        "url": "@site.Url(mode: UrlMode.Absolute)"
        @if(settingsCompanyName != ""){
            <text>,"name": "@settingsCompanyName"</text>
        }
        @if (settingsLogoUrl != null)
        {
            <text>,"logo": "@settingsLogoUrl"</text>
        }

        @if (settingsPhoneNumber != "")
        {
            <text>,"telephone":"@settingsPhoneNumber"</text>
        }
        }
    </script>


    @if (googleTagManagerID != "")
    {
        <noscript>
            <iframe src="https://www.googletagmanager.com/ns.html?id=@(googleTagManagerID)" height="0" width="0" style="display:none;visibility:hidden"></iframe>
        </noscript>
    }

    @if (showThemeExplorer || UmbracoContext.InPreviewMode)
    {
        @await Html.PartialAsync("~/Views/Partials/Shared/ThemeExplorer.cshtml")
        <link rel="stylesheet" href="~/css/lib/theme-explorer.css">
        <script src="~/scripts/lib/jscolor.js"></script>
        <script src="~/scripts/lib/theme-explorer.js"></script>
    }

    @await SmidgeHelper.JsHereAsync("igloo-js-bundle")
    @RenderSection("bodyEnd", false)
</body>
</html>]]></Design>
    </Template>
    <Template>
      <Name>Page</Name>
      <Key>8d26c72c-f123-4d76-8ac1-b9c6b458f004</Key>
      <Alias>Page</Alias>
      <Design><![CDATA[@inherits UmbracoViewPage
@{
    Layout = "Master.cshtml";
}

@await Html.PartialAsync("~/Views/Partials/Widgets/RenderWidgets.cshtml")]]></Design>
    </Template>
    <Template>
      <Name>Post</Name>
      <Key>ce4d6056-6cf4-4268-bded-5c0cca2f8a4c</Key>
      <Alias>Post</Alias>
      <Design><![CDATA[@inherits UmbracoViewPage<ContentModels.Post>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.Blocks;
@using System.Globalization
@inject Igloo.Core.Services.ISettingsService _settingsService;
@{
    Layout = "Master.cshtml";

    var parentFeed = Model.Parent<ContentModels.Feed>();
    var posts = parentFeed.Children<ContentModels.Post>().Where(x => x.IsVisible() && x.Id != Model.Id).OrderByDescending(x => x.Date).Take(3).ToList();
    var hideDate = parentFeed.HideDates;
    var disqusShortname = _settingsService.Get<string>(Model, "disqusShortname");
    var companyName = _settingsService.Get<string>(Model, "companyName");
    var companyLogo = _settingsService.Get<IPublishedContent>(Model, "companyLogo")?.Url();

    var author = Model.Author as ContentModels.Person;
}


<section class="block post white-bg">

    <div class="block__header">
        @if (Model.PreHeading != "")
        {
            <div class="pre-head">@(Model.PreHeading)</div>
        }
        <h1>@(Model.Heading)</h1>
        <div class="post__header">
            @if (author != null)
            {
                <div class="post__author">
                    @if (author.Image != null)
                    {
                        <img src="@author.Image.GetCropUrl(100, 100, quality: 80)" alt="@author.FullName">
                    }
                    <span>@author.FullName</span>
                </div>
            }
            @if (!hideDate && Model.Date != null)
            {
                <div class="post__meta">
                    @string.Format("{0: dd MMMM yyyy}", Model.Date)
                </div>
            }
        </div>
        @if (!string.IsNullOrEmpty(Model.IntroText.ToString()))
        {
            <div class="block__header-text text-big">
                @Html.Raw(Model.IntroText)
            </div>
        }
    </div>

    <div class="block__body">

        @if (Model.Image != null)
        {
            <div class="post__image">

                <img class="lazyload"
                     src="@(Model.Image.Url())?width=50"
                     data-sizes="auto"
                     data-srcset="@(Model.Image.Url())?upscale=false&width=480&quality=80 480w,
                	@(Model.Image.Url())?upscale=false&width=768&quality=80 768w,
                	@(Model.Image.Url())?upscale=false&width=1100&quality=80 1100w"
                     alt="@Model.Heading">
            </div>
        }

        <div class="post__body">

            @Model.Text

            @if (Model.ContentWidgets != null && Model.ContentWidgets.Any())
            {
                <div class="row sub-grid">

                    @foreach (BlockListItem column in Model.ContentWidgets)
                    {
                        var columnWidth = column.Settings?.Value<string>("columnWidth", "")?.Replace("%", "") ?? "100";
                        var columnType = column.Content.ContentType.Alias;

                        if (columnWidth == "25")
                        {
                            columnWidth = "25 col-m-50";
                        }
                        else if (columnWidth == "20")
                        {
                            columnWidth = "20 col-m-33";
                        }
                        else if (columnWidth == "10")
                        {
                            columnWidth = "10 col-m-20";
                        }

                        <div class="col-@(columnWidth) col-s-100">
                            @if (columnType == "lineBreak")
                            {
                                @await Html.PartialAsync("~/Views/Partials/Shared/LineBreak.cshtml", column)
                            }
                            else
                            {
                                @await Html.PartialAsync("~/Views/Partials/Widgets/Grid/" + columnType + ".cshtml", column, new ViewDataDictionary(ViewData) { { "containerWidth", "standard" }, { "order", 2 } })
                            }
                        </div>
                    }

                </div>
            }

            @if (author != null)
            {

                <div class="post__author-bio">
                    @if (author.Image != null)
                    {
                        <img src="@author.Image.GetCropUrl(200, 200, quality: 80)" alt="@author.FullName">
                    }
                    <div class="post__author-bio-text">
                        <h5 class="h6">@author.FullName</h5>
                        <p>@author.Description</p>
                    </div>
                </div>
            }

            @if (!parentFeed.HideShareButtons)
            {
                @await Html.PartialAsync("~/Views/Partials/Shared/ShareButtons.cshtml")
            }

            @if (disqusShortname != "")
            {
                if (!Model.DisableComments)
                {
                    <br>
                    <div id="disqus_thread"></div>
                    <script>
						(function() {
						var d = document, s = d.createElement('script');
						s.src = 'https://@(disqusShortname).disqus.com/embed.js';
						s.setAttribute('data-timestamp', +new Date());
						(d.head || d.body).appendChild(s);
						})();
                    </script>
                }
            }

        </div>

    </div>

</section>

@await Html.PartialAsync("~/Views/Partials/Widgets/RenderWidgets.cshtml", Model, new ViewDataDictionary(ViewData) { { "indexNumber", 1 } })

@if (posts.Count > 0)
{
    <section class="block feed gray-bg">

        <div class="container">

            <div class="row row--center box-wrap">

                @foreach (var post in posts)
                {
                    <div class="col-33 col-s-100">
                        <article class="box">
                            @if (post.PostImage != null)
                            {
                                <div class="box__image">
                                    <a href="@post.Url()" title="@post.Heading" tabindex="-1">
                                        <img class="lazyload"
                                             src="@(post.PostImage.GetCropUrl(10,7, quality: 80))"
                                             data-sizes="auto"
                                             data-srcset="@(post.PostImage.GetCropUrl(300,210, quality: 80)) 300w,
                                    	    @(post.PostImage.GetCropUrl(500,350, quality: 80)) 500w,
                                    	    @(post.PostImage.GetCropUrl(1000,700, quality: 80)) 1000w"
                                             alt="@post.Heading">
                                    </a>
                                </div>
                            }
                            <div class="box__text">
                                <h3 class="h5"><a title="@post.Heading" href="@post.Url()">@post.Heading</a></h3>
                                @if (!hideDate)
                                {
                                    <div class="box__meta">
                                        @String.Format("{0: dd MMMM yyyy}", post.Date)
                                    </div>
                                }
                                <p>@post.PostDescription</p>
                            </div>
                        </article>
                    </div>
                }

            </div>

        </div>

        @if (posts.Count > 2)
        {
            <div class="text-center">
                <div class="button-wrap">
                    <br>
                    <a href="@parentFeed.Url()" class="button button--dark">@Umbraco.GetDictionaryValue("Show more")</a>
                </div>
            </div>
        }

    </section>
}
@section bodyEnd
{
    <script type="application/ld+json">
        {
        "@@context": "http://schema.org",
        "@@type": "NewsArticle",
        "mainEntityOfPage": {
        "@@type": "WebPage",
        "@@id": "@Model.Url(mode: UrlMode.Absolute)"
        },
        "headline": "@Model.Heading",
        "image": [
        "@(Model.PostImage != null ? Model.PostImage.Url(mode: UrlMode.Absolute) : "")"
        ],
        "datePublished": "@Model.Date",
        "dateModified": "@Model.UpdateDate",
        "author": {
        "@@type": "Organization",
        "name": "@companyName"
        },
        "publisher": {
        "@@type": "Organization",
        "name": "@companyName",
        "logo": {
            "@@type": "ImageObject",
            "url": "@(companyLogo != null ? companyLogo : "")"
        }
        },
        "description": "@Model.PostDescription"
        }
    </script>
}]]></Design>
    </Template>
    <Template>
      <Name>Search</Name>
      <Key>e68d219a-9016-4968-9814-b78ba78dceba</Key>
      <Alias>Search</Alias>
      <Design><![CDATA[@inherits UmbracoViewPage<IPublishedContent>
@using Igloo.Core.Extensions
@inject Igloo.Core.Services.ISettingsService _settingsService;
@{
    Layout = "Master.cshtml";
    var q = "";

    if (Context.Request.Query.Keys.Contains("search")) {
        q = Context.Request.Query["search"][0];
    }

    var searchGridView = _settingsService.Get<bool>(Model, "searchGridView", defaultValue: false);
    var searchPageAmount = _settingsService.Get<int>(Model, "searchPageAmount", defaultValue: 8);
}
<section class="block search-block gray-bg">
    <div class="container">
        <div class="row row--center">
            <div class="col-50 col-s-100">

                <form action="@Model.Url()" class="search__form">
                    <label for="page-search-input-inline" class="sr-only">@Umbraco.GetDictionaryValue("Search")</label>
                    <i class="fa fa-search" aria-hidden="true"></i>
                    <input type="text" name="search" id="page-search-input-inline" class="search__input" value="@(q)" placeholder="@Umbraco.GetDictionaryValue("Search Placeholder")">
                    <input type="hidden" name="amount" class="search-pagination-amount" value="@searchPageAmount" />
                </form>
            </div>
        </div>
    </div>
    <div class="search-result-info">
        @Umbraco.GetDictionaryValue("Your Search") <strong class="query">"@(q)"</strong> @Umbraco.GetDictionaryValue("Gave") <strong class="search-results-count"></strong> <strong class="search-results-count-label single">@Umbraco.GetDictionaryValue("Result")</strong> <strong class="search-results-count-label multi">@Umbraco.GetDictionaryValue("Results")</strong>
    </div>
</section>
<section class="block gray-bg search-results">
    @if (searchGridView)
    {
        <div class="container">
            <div class="row row--center">

                <template>
                    <div class="col-33 col-s-100 search-result-container">
                        <article class="box">
                            <div class="box__image">
                                <a href="" title="" tabindex="-1">
                                    <img class="lazyload" src="" alt="">
                                </a>
                            </div>

                            <div class="box__text">
                                <h3 class="h5"><a title="" href=""></a></h3>
                                <p></p>
                            </div>
                        </article>
                    </div>
                </template>

            </div>

        </div>
    }
    else
    {
        <div class="container container--small">
            <div class="row">
                <div class="col-100">
                    <template>
                        <article class="search-result">
                            <h3 class="h5"><a href=""></a></h3>
                            <p></p>
                        </article>
                    </template>

                </div>
            </div>

        </div>
    }

    <div class="search-empty">
        <i class="fa fa-search" aria-hidden="true"></i>
        <h5>@Umbraco.GetDictionaryValue("No Results Found")</h5>
    </div>

    <div class="container container--small search-pagination-container">
        <div class="row">
            <div class="col-100">
                <button class="button button--block button--dark">@Umbraco.GetDictionaryValue("Load More")</button>
            </div>
        </div>
    </div>

</section>
@await Html.PartialAsync("~/Views/Partials/Widgets/RenderWidgets.cshtml", Model, new ViewDataDictionary(ViewData) { { "indexNumber", 1 } })]]></Design>
    </Template>
    <Template>
      <Name>Sitemap</Name>
      <Key>f624a1ff-80cd-47b6-b2fb-0ba4f8c197ce</Key>
      <Alias>Sitemap</Alias>
      <Design><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
@inherits UmbracoViewPage
@using System.Linq;
@{
    Layout = null;
    Context.Response.ContentType = "text/xml";
}
    
    <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
        @{ListChildNodes(Model.Root());}
    </urlset>

    @functions{ 
    void ListChildNodes(IPublishedContent root)
    {
        if (root.Root().Id == root.Id)
        {
            <url>
                <loc>@root.Url(mode: UrlMode.Absolute)</loc>
                <lastmod>@(string.Format("{0:s}+00:00", root.UpdateDate))</lastmod>
                @if(root.Value("sitemapPageChangeFrequently") != ""){
                    <changefreq>@root.Value("sitemapPageChangeFrequently")</changefreq>
                }
                <priority>@(root.Value("sitemapPagePriority") == "" ? "0.5" : root.Value("sitemapPagePriority"))</priority>
            </url>
        }

        foreach (var node in root.Children.Where(x => !x.Value<bool>("hideFromSearchEngines") && !x.IsDocumentType("websiteSettings")))
        {
            if (node.TemplateId != 0 && node.ContentType.Alias != "sitemap")
            {
                <url>
                    <loc>@node.Url(mode: UrlMode.Absolute)</loc>
                    <lastmod>@(string.Format("{0:s}+00:00", node.UpdateDate))</lastmod>
                    @if(node.Value("sitemapPageChangeFrequently") != ""){
                        <changefreq>@node.Value("sitemapPageChangeFrequently")</changefreq>
                    }
                    <priority>@(node.Value("sitemapPagePriority") == "" ? "0.5" : node.Value("sitemapPagePriority"))</priority>
                </url>
            }

            if (node.Children.Any(x => x.TemplateId != 0))
            {
                ListChildNodes(node);
            }
        }
    }
}]]></Design>
    </Template>
  </Templates>
  <Stylesheets>
    <Stylesheet>
      <Name>custom</Name>
      <FileName>custom.css</FileName>
      <Content><![CDATA[]]></Content>
      <Properties />
    </Stylesheet>
    <Stylesheet>
      <Name>ig-base</Name>
      <FileName>ig-base.css</FileName>
      <Content><![CDATA[/*======================================
  #General
======================================*/
* {
  box-sizing: border-box;
}
img {
  max-width: 100%;
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
main {
  display: block;
}
a {
  color: var(--theme);
}
a:hover {
  color: var(--theme-darker);
}
p a {
  text-decoration: underline;
}
.theme-bg a {
  color: var(--theme-contrast);
}
.theme-alt-bg a {
  color: var(--theme-alt-contrast);
}
/*======================================
  #Typography
======================================*/
html {
  -webkit-text-size-adjust: 100%;
          text-size-adjust: 100%;
  scroll-padding-top: var(--header-height);
  scroll-behavior: smooth;
}
@media only screen and (max-width: 992px) {
  html {
    font-size: 0.95em;
  }
}
@media only screen and (max-width: 768px) {
  html {
    font-size: 0.9em;
  }
}
body {
  font-family: var(--body-font);
  line-height: var(--body-line-height);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: var(--font-size);
  font-weight: var(--body-font-weight);
  width: 100%;
  overflow-x: hidden;
  color: var(--text-dark);
}
p,
ul,
ol {
  margin-bottom: 1.5em;
}
.text-big {
  font-weight: var(--text-big-font-weight);
  font-size: var(--font-size-big);
}
.text-small {
  font-size: var(--font-size-small);
}
h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6,
.act-heading {
  font-family: var(--heading-font);
  line-height: var(--heading-line-height);
  margin-bottom: 0.5em;
  font-weight: var(--heading-font-weight);
  color: var(--heading-dark);
}
.section-head {
  text-transform: uppercase;
  font-weight: var(--heading-font-weight);
  font-size: 0.65rem;
  letter-spacing: 0.2em;
  line-height: 1;
  margin-bottom: 1em;
}
.pre-head {
  font-weight: var(--body-font-weight);
  font-family: var(--heading-font);
  text-transform: uppercase;
  font-size: 0.8rem;
  letter-spacing: 0.3em;
  line-height: 1;
  margin-bottom: 0.9em;
  opacity: 0.8;
  color: var(--heading-dark);
}
.light-color {
  color: var(--text-light);
}
.light-color h1,
.light-color h2,
.light-color h3,
.light-color h4,
.light-color h5,
.light-color h6 .act-heading,
.light-color .pre-head,
.light-color .section-head {
  color: var(--heading-light);
}
h1,
.h1 {
  font-size: var(--font-size-h1);
}
h2,
.h2 {
  font-size: var(--font-size-h2);
}
h3,
.h3 {
  font-size: var(--font-size-h3);
}
h4,
.h4 {
  font-size: var(--font-size-h4);
}
h5,
.h5 {
  font-size: var(--font-size-h5);
}
h6,
.h6 {
  font-size: var(--font-size-h6);
}
small {
  font-size: 80%;
}
mark {
  background: #fcf8e3;
  padding: 0 0.3em;
}
abbr {
  border-bottom: 2px dotted #555;
  text-decoration: none;
  cursor: help;
}
kbd {
  background: var(--background-dark);
  color: var(--white);
  border-radius: 3px;
  padding: 2px 4px;
  font-size: 80%;
}
a {
  transition: all 0.3s ease;
  text-decoration: none;
  cursor: pointer;
}
a:hover {
  text-decoration: none;
}
em,
i {
  font-style: italic;
}
strong,
b {
  font-weight: bold;
}
hr {
  border: none;
  height: 1px;
  background: var(--border-dark);
  margin: 2em 0;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
blockquote {
  font-style: normal;
  font-size: var(--font-size-big);
  position: relative;
  font-weight: var(--font-weight-light);
  max-width: 32.5em;
  margin: 4.4em auto 4em;
  text-align: center;
}
blockquote::before {
  color: var(--theme);
  position: absolute;
  font-family: "FontAwesome";
  content: "\f10d";
  top: -1.5em;
  left: 50%;
  transform: translateX(-50%);
  font-size: 1.5rem;
  line-height: 1;
}
blockquote cite {
  display: block;
  font-size: 80%;
}
ul,
ol {
  padding-left: 20px;
}
ul ul,
ol ul,
ul ol,
ol ol {
  margin-bottom: 0;
}
ul {
  list-style: disc;
}
ol {
  list-style: decimal;
}
/*======================================
  #Format image classes
======================================*/
.image-left {
  float: left;
  margin: 0 0.6em 0.6em 0;
}
.image-right {
  float: right;
  margin: 0 0 0.6em 0.6em;
}
.image-left,
.image-right {
  display: block;
}
@media only screen and (max-width: 768px) {
  .image-left,
  .image-right {
    float: none;
  }
}
figcaption {
  color: var(--text-dark);
  text-align: center;
  font-style: italic;
  font-size: 0.875rem;
  padding-top: 5px;
}
.light-color figcaption {
  color: var(--text-light);
}
/*======================================
  #Lazyload
======================================*/
img[data-sizes="auto"] {
  display: block;
  width: 100%;
}
.lazyload,
.lazyloading {
  opacity: 0;
  width: 100%;
}
.lazyloaded {
  opacity: 1;
  transition: opacity 300ms;
}
/*======================================
  #Tables
======================================*/
.table-wrap {
  min-height: 0.01%;
  overflow-x: auto;
}
table {
  width: 100%;
  max-width: 100%;
  font-size: 1rem;
}
table th,
table td {
  padding: 0.75em;
}
table th {
  font-weight: var(--font-weight-bold);
  text-align: left;
}
table thead tr {
  border-bottom: 2px solid var(--border-dark);
}
table tbody tr {
  border-top: 1px solid var(--border-dark);
}
table tbody tr:first-child {
  border-top: 0;
}
table tbody tr:hover {
  background: rgba(0, 0, 0, 0.04);
}
/*======================================
  #Loader
======================================*/
.loading {
  position: relative;
  z-index: 1;
}
.loading::before {
  content: "";
  position: absolute;
  background-color: var(--white);
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 99998;
}
.loading::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  margin: -10px 0 0 -10px;
  z-index: 99999;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  border: 0.2rem solid rgba(0, 0, 0, 0.15);
  border-top-color: rgba(0, 0, 0, 0.5);
  animation: spin 0.5s infinite linear;
}
.loading--gray::before {
  background-color: var(--background-light);
}
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
/*======================================
  #Success animation
======================================*/
.checkmark__circle {
  stroke-dasharray: 166;
  stroke-dashoffset: 166;
  stroke-width: 2;
  stroke-miterlimit: 10;
  stroke: var(--success);
  fill: none;
  animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
}
.checkmark-svg {
  width: 4.3rem;
  height: 4.3rem;
  border-radius: 50%;
  display: block;
  stroke-width: 2;
  stroke: var(--white);
  stroke-miterlimit: 10;
  margin: 1.5em auto;
  box-shadow: inset 0px 0px 0px var(--success);
  animation: fill 0.4s ease-in-out 0.4s forwards, scale 0.3s ease-in-out 0.9s both;
}
.checkmark__check {
  transform-origin: 50% 50%;
  stroke-dasharray: 48;
  stroke-dashoffset: 48;
  animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
}
@keyframes stroke {
  100% {
    stroke-dashoffset: 0;
  }
}
@keyframes scale {
  0%,
  100% {
    transform: none;
  }
  50% {
    transform: scale3d(1.1, 1.1, 1);
  }
}
@keyframes fill {
  100% {
    box-shadow: inset 0px 0px 0px 50px var(--success);
  }
}
/*======================================
  #Skip link
======================================*/
a.skip-link {
  position: absolute;
  top: 0;
  left: 20px;
  z-index: 999999999;
  color: var(--theme-contrast);
  background-color: var(--theme);
  transform: translateY(-100%);
  opacity: 0;
}
a.skip-link:hover {
  color: var(--white);
}
a.skip-link:focus {
  opacity: 1;
  transform: translateY(20px);
}
/*======================================
  #Colors
======================================*/
.theme-bg {
  background-color: var(--theme);
}
.theme-alt-bg {
  background-color: var(--theme-alt);
}
.dark-bg {
  background-color: var(--background-dark);
}
.gray-bg {
  background-color: var(--background-light);
}
.white-bg {
  background-color: var(--white);
}
.theme-color {
  color: var(--theme);
}
.theme-alt-color {
  color: var(--theme-alt);
}
.white-color {
  color: var(--white);
}
.gray-color {
  color: #999;
}
.dark-color {
  color: var(--background-dark);
}
/*======================================
  #Helpers
======================================*/
.fr {
  float: right;
}
.fl {
  float: left;
}
.cb {
  clear: both;
}
.nm {
  margin: 0 !important;
}
.np {
  padding: 0 !important;
}
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}
.thin {
  font-weight: var(--font-weight-light);
}
.normal {
  font-weight: var(--font-weight-normal);
}
.bold {
  font-weight: var(--font-weight-bold);
}
.bolder {
  font-weight: 900;
}
.responsive-img {
  width: auto!important;
  height: auto!important;
  max-width: 100%!important;
  max-height: 100%!important;
}
.hidden {
  visibility: hidden;
  opacity: 0;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}
.hide {
  display: none;
}
.hide--important {
  display: none !important;
}
.show--s {
  display: none!important;
}
.show--m {
  display: none!important;
}
.show--xs {
  display: none!important;
}
@media only screen and (max-width: 992px) {
  .hide--m {
    display: none !important;
  }
  .show--m {
    display: block !important;
  }
}
@media only screen and (max-width: 768px) {
  .hide--s {
    display: none !important;
  }
  .show--s {
    display: block !important;
  }
}
@media only screen and (max-width: 480px) {
  .hide--xs {
    display: none !important;
  }
  .show--xs {
    display: block !important;
  }
}
/*======================================
  #General
======================================*/
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
input {
  line-height: normal;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input[type="text"],
input[type="email"],
input[type="url"],
input[type="tel"],
input[type="password"],
input[type="search"],
input[type="number"],
textarea {
  -webkit-appearance: none;
}
input[type="search"] {
  -webkit-appearance: textfield;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
textarea {
  overflow: auto;
}
button {
  -webkit-appearance: none;
          appearance: none;
  background: transparent;
  border: 0;
  padding: 0;
  line-height: inherit;
  cursor: pointer;
}
/*======================================
  #Forms
======================================*/
form label,
.form-label {
  margin-bottom: 0.8em;
  line-height: 1;
  font-weight: var(--font-weight-bold);
  font-size: 0.9rem;
  letter-spacing: 0.03em;
  display: block;
}
.light-color form label,
.light-color .form-label {
  color: var(--text-light);
}
input[type="text"],
input[type="email"],
input[type="url"],
input[type="tel"],
input[type="password"],
input[type="search"],
input[type="number"],
input[type="date"],
textarea,
select {
  background-color: var(--background-light);
  display: block;
  padding: 1em;
  color: var(--text-dark);
  border-radius: 4px;
  font-size: 16px;
  width: 100%;
  border: 0;
  border: 1px solid var(--border-dark);
  transition: all 0.25s ease;
  margin-bottom: var(--grid-gutter);
  font-weight: var(--font-weight-normal);
}
input[type="text"]:focus,
input[type="email"]:focus,
input[type="url"]:focus,
input[type="tel"]:focus,
input[type="password"]:focus,
input[type="search"]:focus,
input[type="number"]:focus,
input[type="date"]:focus,
textarea:focus,
select:focus {
  outline: none;
  box-shadow: 0 0 6px rgba(var(--theme-rgb), 0.3);
  border: 1px solid rgba(var(--theme-rgb), 0.7);
  background-color: var(--white);
}
input[type="text"]:required:valid,
input[type="email"]:required:valid,
input[type="url"]:required:valid,
input[type="tel"]:required:valid,
input[type="password"]:required:valid,
input[type="search"]:required:valid,
input[type="number"]:required:valid,
input[type="date"]:required:valid,
textarea:required:valid,
select:required:valid {
  position: relative;
  border-color: rgba(46, 204, 113, 0.05);
  box-shadow: 0 0 1px 1px var(--success) !important;
}
input[type="text"]:required:valid + i,
input[type="email"]:required:valid + i,
input[type="url"]:required:valid + i,
input[type="tel"]:required:valid + i,
input[type="password"]:required:valid + i,
input[type="search"]:required:valid + i,
input[type="number"]:required:valid + i,
input[type="date"]:required:valid + i,
textarea:required:valid + i,
select:required:valid + i {
  opacity: 1;
  visibility: visible;
  transform: scale(1) translateY(-50%);
}
input[type="text"][disabled],
input[type="email"][disabled],
input[type="url"][disabled],
input[type="tel"][disabled],
input[type="password"][disabled],
input[type="search"][disabled],
input[type="number"][disabled],
input[type="date"][disabled],
textarea[disabled],
select[disabled] {
  cursor: not-allowed;
}
input[type="text"]:-ms-input-placeholder, input[type="email"]:-ms-input-placeholder, input[type="url"]:-ms-input-placeholder, input[type="tel"]:-ms-input-placeholder, input[type="password"]:-ms-input-placeholder, input[type="search"]:-ms-input-placeholder, input[type="number"]:-ms-input-placeholder, input[type="date"]:-ms-input-placeholder, textarea:-ms-input-placeholder, select:-ms-input-placeholder {
  font-style: italic;
}
input[type="text"]::placeholder,
input[type="email"]::placeholder,
input[type="url"]::placeholder,
input[type="tel"]::placeholder,
input[type="password"]::placeholder,
input[type="search"]::placeholder,
input[type="number"]::placeholder,
input[type="date"]::placeholder,
textarea::placeholder,
select::placeholder {
  font-style: italic;
}
.form-validate-wrap {
  position: relative;
}
.form-validate-wrap > i {
  position: absolute;
  top: 50%;
  right: 10px;
  color: var(--success);
  font-size: 1.2em;
  opacity: 0;
  visibility: hidden;
  transform: scale(0) translateY(-50%);
  transition: all 0.25s ease;
}
select {
  line-height: 1;
  height: 3.3125em;
  padding: 1em;
  -webkit-appearance: none;
          appearance: none;
  background-image: url("data:image/svg+xml;utf8,<svg viewBox='0 0 140 140' width='24' height='24' xmlns='http://www.w3.org/2000/svg'><g><path d='m121.3,34.6c-1.6-1.6-4.2-1.6-5.8,0l-51,51.1-51.1-51.1c-1.6-1.6-4.2-1.6-5.8,0-1.6,1.6-1.6,4.2 0,5.8l53.9,53.9c0.8,0.8 1.8,1.2 2.9,1.2 1,0 2.1-0.4 2.9-1.2l53.9-53.9c1.7-1.6 1.7-4.2 0.1-5.8z' fill='black'/></g></svg>");
  background-size: 0.875rem;
  background-repeat: no-repeat;
  background-position: calc(100% - 20px) center;
}
textarea {
  width: 100%;
  max-width: 100%;
  min-width: 100%;
}
.gray-bg input[type="text"],
.gray-bg input[type="email"],
.gray-bg input[type="url"],
.gray-bg input[type="tel"],
.gray-bg input[type="password"],
.gray-bg input[type="search"],
.gray-bg input[type="number"],
.gray-bg input[type="date"],
.gray-bg textarea,
.gray-bg select {
  background-color: var(--white);
}
.dark-bg.light-color input[type="text"],
.dark-bg.light-color input[type="email"],
.dark-bg.light-color input[type="url"],
.dark-bg.light-color input[type="tel"],
.dark-bg.light-color input[type="password"],
.dark-bg.light-color input[type="search"],
.dark-bg.light-color input[type="number"],
.dark-bg.light-color input[type="date"],
.dark-bg.light-color textarea,
.dark-bg.light-color select {
  background-color: var(--background-dark-lighter);
  color: var(--text-light);
  border-color: var(--border-light);
}
.dark-bg.light-color input[type="text"]:-ms-input-placeholder, .dark-bg.light-color input[type="email"]:-ms-input-placeholder, .dark-bg.light-color input[type="url"]:-ms-input-placeholder, .dark-bg.light-color input[type="tel"]:-ms-input-placeholder, .dark-bg.light-color input[type="password"]:-ms-input-placeholder, .dark-bg.light-color input[type="search"]:-ms-input-placeholder, .dark-bg.light-color input[type="number"]:-ms-input-placeholder, .dark-bg.light-color input[type="date"]:-ms-input-placeholder, .dark-bg.light-color textarea:-ms-input-placeholder, .dark-bg.light-color select:-ms-input-placeholder {
  color: var(--text-light);
}
.dark-bg.light-color input[type="text"]::placeholder,
.dark-bg.light-color input[type="email"]::placeholder,
.dark-bg.light-color input[type="url"]::placeholder,
.dark-bg.light-color input[type="tel"]::placeholder,
.dark-bg.light-color input[type="password"]::placeholder,
.dark-bg.light-color input[type="search"]::placeholder,
.dark-bg.light-color input[type="number"]::placeholder,
.dark-bg.light-color input[type="date"]::placeholder,
.dark-bg.light-color textarea::placeholder,
.dark-bg.light-color select::placeholder {
  color: var(--text-light);
}
.dark-bg.light-color input[type="text"]:focus,
.dark-bg.light-color input[type="email"]:focus,
.dark-bg.light-color input[type="url"]:focus,
.dark-bg.light-color input[type="tel"]:focus,
.dark-bg.light-color input[type="password"]:focus,
.dark-bg.light-color input[type="search"]:focus,
.dark-bg.light-color input[type="number"]:focus,
.dark-bg.light-color input[type="date"]:focus,
.dark-bg.light-color textarea:focus,
.dark-bg.light-color select:focus {
  border-color: var(--theme);
}
.dark-bg.light-color select {
  background-image: url("data:image/svg+xml;utf8,<svg viewBox='0 0 140 140' width='24' height='24' xmlns='http://www.w3.org/2000/svg'><g><path d='m121.3,34.6c-1.6-1.6-4.2-1.6-5.8,0l-51,51.1-51.1-51.1c-1.6-1.6-4.2-1.6-5.8,0-1.6,1.6-1.6,4.2 0,5.8l53.9,53.9c0.8,0.8 1.8,1.2 2.9,1.2 1,0 2.1-0.4 2.9-1.2l53.9-53.9c1.7-1.6 1.7-4.2 0.1-5.8z' fill='white'/></g></svg>");
}
/*======================================
  #Umbraco forms
======================================*/
.success-color {
  color: var(--success) !important;
}
legend {
  padding: 0.85em 1em;
  line-height: 1;
  background: rgba(0, 0, 0, 0.025);
  font-weight: var(--font-weight-bold);
  font-size: 0.75em;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  display: block;
  width: 100%;
  text-align: center;
  margin-bottom: var(--grid-gutter);
}
legend.legend-dark {
  background: rgba(0, 0, 0, 0.05);
  color: var(--text-dark);
}
.light-color legend {
  background-color: rgba(255, 255, 255, 0.05);
  color: var(--text-light);
}
.radiobuttonlist,
.multiplechoice,
.fileupload {
  margin-bottom: var(--grid-gutter);
  display: block;
}
.contourPage .checkbox {
  position: relative;
  padding-left: 26px;
  margin-bottom: var(--grid-gutter);
}
.contourPage .checkbox .checkbox-single {
  position: absolute;
  top: -6px;
  left: 6px;
}
#recaptcha_area,
.recaptcha2,
.captcha,
.hcaptcha {
  margin-bottom: var(--grid-gutter);
}
#recaptcha_area table,
.recaptcha2 table,
.captcha table,
.hcaptcha table {
  border: 0 !important;
}
.h-captcha + .field-validation-error,
.g-recaptcha + .field-validation-error {
  margin-top: 0;
}
.radio-list-item,
.checkbox-list-item {
  position: relative;
  padding: 10px 10px 10px 30px;
  margin-bottom: 2px;
}
.radio-list-item label,
.checkbox-list-item label {
  text-transform: none;
}
.radio-list-item input,
.checkbox-list-item input {
  position: absolute;
  left: 7px;
  top: 8px;
}
.radio-list-item label,
.checkbox-list-item label {
  margin: 0;
  font-size: 0.8rem;
  padding: 0;
  text-transform: none;
}
.umbraco-forms-field.checkbox {
  position: relative;
  padding-left: 1.5rem;
  margin-bottom: var(--grid-gutter);
}
.umbraco-forms-field.checkbox label {
  font-size: 0.8rem;
  text-transform: none;
  letter-spacing: 0;
}
.umbraco-forms-field.checkbox .umbraco-forms-field-wrapper {
  position: absolute;
  top: 0;
  left: 0;
}
@media only screen and (max-width: 768px) {
  .umbraco-forms-field.checkbox {
    margin-bottom: 20px;
  }
}
.help-block {
  font-size: 0.75rem;
  display: block;
  padding: 0 0 5px 0;
  margin-top: -0.7em;
}
.field-validation-error {
  display: block;
  color: var(--error);
  font-weight: var(--font-weight-bold);
  font-size: 0.75rem;
  margin-top: calc(var(--grid-gutter) * -1);
  margin-bottom: var(--grid-gutter);
}
@media only screen and (max-width: 768px) {
  .field-validation-error {
    margin-top: -1.25em;
    margin-bottom: 1.25em;
  }
}
.umbraco-forms-indicator,
.validation-summary-errors,
.error-color {
  color: var(--error);
}
/*======================================
  #Buttons
======================================*/
.button,
input[type="submit"],
input[type="button"] {
  display: inline-block;
  -webkit-appearance: none;
  line-height: 1;
  padding: 1em 2em;
  letter-spacing: 0.04em;
  font-size: 0.9rem;
  font-weight: var(--font-weight-bold);
  transition: all 0.3s ease;
  border-width: 2px;
  border-style: solid;
  text-align: center;
  text-decoration: none!important;
  border-radius: var(--button-border-radius);
  background: var(--theme);
  color: var(--theme-contrast) !important;
  border-color: var(--theme);
}
.button:hover,
input[type="submit"]:hover,
input[type="button"]:hover {
  background: var(--theme-darker);
  border-color: var(--theme-darker);
  color: var(--theme-contrast);
}
.button.button--block,
input[type="submit"].button--block,
input[type="button"].button--block {
  width: 100%;
  padding-left: 0;
  padding-right: 0;
}
.button.button--small,
input[type="submit"].button--small,
input[type="button"].button--small {
  padding: 0.8em 1em;
  font-size: 0.8rem;
  border-width: 1px;
}
.button.button--big,
input[type="submit"].button--big,
input[type="button"].button--big {
  padding: 1.2em 2em;
  font-size: 1.2rem;
}
.button.button--theme-alt,
input[type="submit"].button--theme-alt,
input[type="button"].button--theme-alt {
  background: var(--theme-alt);
  color: var(--theme-alt-contrast) !important;
  border-color: var(--theme-alt);
}
.button.button--theme-alt:hover,
input[type="submit"].button--theme-alt:hover,
input[type="button"].button--theme-alt:hover {
  background: var(--theme-alt-darker);
  border-color: var(--theme-alt-darker);
  color: var(--theme-alt-contrast) !important;
}
.button.button--dark,
input[type="submit"].button--dark,
input[type="button"].button--dark {
  color: var(--text-light) !important;
  background: var(--background-dark);
  border-color: var(--background-dark);
}
.button.button--dark:hover,
input[type="submit"].button--dark:hover,
input[type="button"].button--dark:hover {
  color: var(--text-light) !important;
  background: var(--background-dark-lighter);
  border-color: var(--background-dark-lighter);
}
.button.button--white,
input[type="submit"].button--white,
input[type="button"].button--white {
  background: var(--white);
  border-color: var(--white);
  color: var(--text-dark) !important;
}
.button.button--white:hover,
input[type="submit"].button--white:hover,
input[type="button"].button--white:hover {
  background: var(--background-light);
  border-color: var(--background-light);
  color: var(--text-dark) !important;
}
.button.button--light,
input[type="submit"].button--light,
input[type="button"].button--light,
.button.button--gray,
input[type="submit"].button--gray,
input[type="button"].button--gray {
  background: var(--background-light);
  border-color: var(--background-light);
  color: var(--text-dark) !important;
}
.button.button--light:hover,
input[type="submit"].button--light:hover,
input[type="button"].button--light:hover,
.button.button--gray:hover,
input[type="submit"].button--gray:hover,
input[type="button"].button--gray:hover {
  background: var(--white);
  border-color: var(--white);
  color: var(--text-dark) !important;
}
.button.button--border,
input[type="submit"].button--border,
input[type="button"].button--border {
  background: transparent;
  color: var(--theme) !important;
}
.button.button--border:hover,
input[type="submit"].button--border:hover,
input[type="button"].button--border:hover {
  background: var(--theme);
  border-color: var(--theme);
  color: var(--theme-contrast) !important;
}
.button.button--border.button--theme-alt,
input[type="submit"].button--border.button--theme-alt,
input[type="button"].button--border.button--theme-alt {
  color: var(--theme-alt) !important;
}
.button.button--border.button--theme-alt:hover,
input[type="submit"].button--border.button--theme-alt:hover,
input[type="button"].button--border.button--theme-alt:hover {
  color: var(--theme-contrast) !important;
  background: var(--theme-alt);
  border-color: var(--theme-alt);
}
.button.button--border.button--dark,
input[type="submit"].button--border.button--dark,
input[type="button"].button--border.button--dark {
  color: var(--background-dark) !important;
}
.button.button--border.button--dark:hover,
input[type="submit"].button--border.button--dark:hover,
input[type="button"].button--border.button--dark:hover {
  color: var(--text-light) !important;
  background: var(--background-dark);
  border-color: var(--background-dark);
}
.button.button--border.button--white,
input[type="submit"].button--border.button--white,
input[type="button"].button--border.button--white {
  color: var(--white) !important;
}
.button.button--border.button--white:hover,
input[type="submit"].button--border.button--white:hover,
input[type="button"].button--border.button--white:hover {
  color: var(--text-dark) !important;
  background: var(--white);
  border-color: var(--white);
}
.button.button--border.button--light,
input[type="submit"].button--border.button--light,
input[type="button"].button--border.button--light,
.button.button--border.button--gray,
input[type="submit"].button--border.button--gray,
input[type="button"].button--border.button--gray {
  color: var(--background-light) !important;
}
.button.button--border.button--light:hover,
input[type="submit"].button--border.button--light:hover,
input[type="button"].button--border.button--light:hover,
.button.button--border.button--gray:hover,
input[type="submit"].button--border.button--gray:hover,
input[type="button"].button--border.button--gray:hover {
  color: var(--text-dark) !important;
  background: var(--background-light);
  border-color: var(--background-light);
}
.button.button--underline,
input[type="submit"].button--underline,
input[type="button"].button--underline {
  background-color: transparent!important;
  border-color: transparent!important;
  color: var(--theme) !important;
  text-decoration: underline!important;
  padding-left: 1em;
  padding-right: 1em;
}
.button.button--underline:hover,
input[type="submit"].button--underline:hover,
input[type="button"].button--underline:hover {
  color: var(--theme-darker) !important;
  text-decoration: none!important;
}
.button.button--underline.button--dark,
input[type="submit"].button--underline.button--dark,
input[type="button"].button--underline.button--dark {
  color: var(--background-dark) !important;
}
.button.button--underline.button--dark:hover,
input[type="submit"].button--underline.button--dark:hover,
input[type="button"].button--underline.button--dark:hover {
  color: var(--background-dark-lighter);
}
.button.button--underline.button--light,
input[type="submit"].button--underline.button--light,
input[type="button"].button--underline.button--light {
  color: var(--background-light) !important;
}
.button.button--underline.button--light:hover,
input[type="submit"].button--underline.button--light:hover,
input[type="button"].button--underline.button--light:hover {
  color: var(--white) !important;
}
.button.button--underline.button--white,
input[type="submit"].button--underline.button--white,
input[type="button"].button--underline.button--white {
  color: var(--white) !important;
}
.button.button--underline.button--white:hover,
input[type="submit"].button--underline.button--white:hover,
input[type="button"].button--underline.button--white:hover {
  color: var(--background-light) !important;
}
.button.button--underline.button--theme-alt,
input[type="submit"].button--underline.button--theme-alt,
input[type="button"].button--underline.button--theme-alt {
  color: var(--theme-alt) !important;
}
.button.button--underline.button--theme-alt:hover,
input[type="submit"].button--underline.button--theme-alt:hover,
input[type="button"].button--underline.button--theme-alt:hover {
  color: var(--theme-alt-darker) !important;
}
.button[disabled],
input[type="submit"][disabled],
input[type="button"][disabled],
.button.button--disabled,
input[type="submit"].button--disabled,
input[type="button"].button--disabled {
  cursor: not-allowed;
  background: var(--border-dark) !important;
  border-color: var(--border-dark) !important;
  color: var(--text-dark) !important;
}
.button[disabled]:hover,
input[type="submit"][disabled]:hover,
input[type="button"][disabled]:hover,
.button.button--disabled:hover,
input[type="submit"].button--disabled:hover,
input[type="button"].button--disabled:hover {
  background: var(--border-dark) !important;
  border-color: var(--border-dark) !important;
  color: var(--text-dark) !important;
}
/*======================================
  #Button loading state
======================================*/
.button.button--loading {
  position: relative;
  color: transparent!important;
  pointer-events: none;
  overflow: hidden;
  outline: none;
  background-color: var(--background-light) !important;
  border-color: var(--background-light) !important;
}
.button.button--loading::after,
.button.button--loading::before {
  content: "";
  position: absolute;
  width: 7px;
  height: 7px;
  background-color: var(--black);
  border-radius: 50%;
  top: 50%;
  left: 50%;
  opacity: 0.2;
  transform: translate(-50%, -50%) scale(0);
  animation: button-load 1.2s infinite ease-in-out;
}
.button.button--loading::before {
  animation-delay: 0.4s;
}
@keyframes button-load {
  0% {
    transform: translate(-50%, -50%) scale(0);
    border-radius: 50%;
    opacity: 0.2;
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(8);
  }
}
/*======================================
  #Checkbox
======================================*/
/* Customize the label (the container) */
.cb-wrap,
.rb-wrap {
  display: block;
  position: relative;
  padding-left: 1.35rem;
  cursor: pointer;
  font-size: 0.875rem;
  font-weight: var(--font-weight-bold);
  -webkit-user-select: none;
      -ms-user-select: none;
          user-select: none;
  line-height: 16px;
  text-transform: none;
  letter-spacing: 0;
  margin-bottom: 0.8em;
}
.cb-wrap p,
.rb-wrap p {
  margin-bottom: 0px;
}
/* Hide the browser's default checkbox */
.cb-wrap input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}
/* Create a custom checkbox */
.cb-wrap .checkmark {
  position: absolute;
  border-radius: 2px;
  top: 0;
  left: 0;
  height: 1rem;
  width: 1rem;
  background-color: var(--background-light);
  border: 1px solid var(--border-dark);
  transition: all 0.2s ease;
}
/* cb-wrap mouse-over, add a grey background color */
.cb-wrap:hover input ~ .checkmark {
  background-color: var(--border-dark);
}
/* When the checkbox is checked, add a blue background */
.cb-wrap input:checked ~ .checkmark {
  background-color: var(--theme) !important;
  border-color: transparent;
}
/* Create the checkmark/indicator (hidden when not checked) */
.cb-wrap .checkmark:after {
  content: "";
  position: absolute;
  color: var(--theme-contrast);
}
/* Show the checkmark when checked */
.cb-wrap input:checked ~ .checkmark:after {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1) translateZ(0);
}
/* Style the checkmark/indicator */
.cb-wrap .checkmark:after {
  content: "\f00c";
  font-family: "FontAwesome";
  color: white;
  line-height: 1;
  font-size: 0.75rem;
  transition: all 0.2s ease;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0) translateZ(0);
  opacity: 0;
}
.cb-wrap input:focus ~ .checkmark {
  box-shadow: 0 0 6px rgba(var(--theme-rgb), 0.3);
  border: 1px solid rgba(var(--theme-rgb), 0.7);
}
.dark-bg.light-color .cb-wrap input:focus ~ .checkmark {
  box-shadow: 0 0 0 2px var(--background-dark), 0 0 0 4px var(--theme);
}
.dark-bg.light-color .cb-wrap .checkmark {
  background: var(--background-dark-lighter);
  border: 1px solid var(--border-light);
}
.gray-bg .cb-wrap .checkmark {
  background-color: var(--white);
}
/*======================================
  #Radio Button
======================================*/
/* Hide the browser's default radio button */
.rb-wrap input {
  position: absolute;
  opacity: 0;
}
/* Create a custom radio button */
.rb-wrap .radiobtn {
  position: absolute;
  top: 0;
  left: 0;
  height: 1rem;
  width: 1rem;
  background-color: var(--background-light);
  border: 1px solid var(--border-dark);
  border-radius: 50%;
  transition: all 0.2s ease;
}
/* On mouse-over, add a grey background color */
.rb-wrap:hover input ~ .radiobtn {
  background-color: var(--border-dark);
}
/* When the radio button is checked, add a blue background */
.rb-wrap input:checked ~ .radiobtn {
  background-color: var(--theme) !important;
}
/* Create the indicator (the dot/circle - hidden when not checked) */
.rb-wrap .radiobtn:after {
  content: "";
  position: absolute;
  opacity: 0;
  transition: all 0.2s ease;
  transform: translate(-50%, -50%) scale(0);
}
/* Show the indicator (dot/circle) when checked */
.rb-wrap input:checked ~ .radiobtn:after {
  display: block;
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
}
/* Style the indicator (dot/circle) */
.rb-wrap .radiobtn:after {
  top: 50%;
  left: 50%;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: var(--white);
  color: var(--theme-contrast);
}
.rb-wrap input:focus ~ .radiobtn {
  box-shadow: 0 0 6px rgba(var(--theme-rgb), 0.3);
  border: 1px solid rgba(var(--theme-rgb), 0.7);
}
.dark-bg.light-color .rb-wrap input:focus ~ .radiobtn {
  box-shadow: 0 0 0 2px var(--background-dark), 0 0 0 4px var(--theme);
}
.dark-bg.light-color .rb-wrap .radiobtn {
  background: var(--background-dark-lighter);
  border: 1px solid var(--border-light);
}
.gray-bg .rb-wrap .radiobtn {
  background-color: var(--white);
}
/*======================================
  #Container
======================================*/
.container-fluid,
.container {
  margin-right: auto;
  margin-left: auto;
  padding-left: var(--grid-gutter);
  padding-right: var(--grid-gutter);
}
.container {
  max-width: var(--grid-width);
}
.container--small {
  max-width: var(--grid-width-small);
}
.container--big {
  max-width: var(--grid-width-big);
}
.container--fluid {
  max-width: 100%;
}
/*======================================
  #Row
======================================*/
.row {
  display: flex;
  flex-flow: row wrap;
  margin-left: calc(var(--grid-gutter-half) * -1);
  margin-right: calc(var(--grid-gutter-half) * -1);
}
.row.row--center {
  justify-content: center;
}
.row.row--left {
  justify-content: flex-start;
}
.row.row--right {
  justify-content: flex-end;
}
.row.row--space-around {
  justify-content: space-around;
}
.row.row--space-between {
  justify-content: space-between;
}
.row.row--space-evenly {
  justify-content: space-evenly;
}
.row.row--v-top {
  align-items: flex-start;
}
.row.row--v-center {
  align-items: center;
}
.row.row--v-bottom {
  align-items: flex-end;
}
.row.row--reverse {
  flex-direction: row-reverse;
}
.row.row--flat,
.row.row--flat .row.sub-grid {
  margin-left: 0;
  margin-right: 0;
}
.row.row--flat > [class*='col-'],
.row.row--flat .row.sub-grid > [class*='col-'],
.row.row--flat > .col,
.row.row--flat .row.sub-grid > .col {
  padding-left: 0!important;
  padding-right: 0!important;
}
@media only screen and (max-width: 768px) {
  .row.row--flat-s {
    margin-left: 0;
    margin-right: 0;
  }
  .row.row--flat-s > [class*='col-'],
  .row.row--flat-s > .col {
    padding-left: 0;
    padding-right: 0;
  }
}
.row.row--grow > [class*='col-'],
.row.row--grow > .col {
  flex-grow: 1;
}
/*======================================
  #Cols
======================================*/
[class*='col-'],
.col {
  padding-left: var(--grid-gutter-half);
  padding-right: var(--grid-gutter-half);
}
[class*='col-'].col--v-center,
.col.col--v-center {
  -ms-grid-row-align: center;
      align-self: center;
}
[class*='col-'].col--grow,
.col.col--grow {
  flex-grow: 1;
}
.col,
.col- {
  flex-grow: 1;
  flex-basis: 0;
}
.col-10 {
  flex-basis: 10%;
  max-width: 10%;
}
.col-16 {
  flex-basis: 16.66666667%;
  max-width: 16.66666667%;
}
.col-20 {
  flex-basis: 20%;
  max-width: 20%;
}
.col-25 {
  flex-basis: 25%;
  max-width: 25%;
}
.col-30 {
  flex-basis: 30%;
  max-width: 30%;
}
.col-33 {
  flex-basis: 33.33333333%;
  max-width: 33.33333333%;
}
.col-40 {
  flex-basis: 40%;
  max-width: 40%;
}
.col-45 {
  flex-basis: 45%;
  max-width: 45%;
}
.col-50 {
  flex-basis: 50%;
  max-width: 50%;
}
.col-55 {
  flex-basis: 55%;
  max-width: 55%;
}
.col-60 {
  flex-basis: 60%;
  max-width: 60%;
}
.col-66 {
  flex-basis: 66.66666666%;
  max-width: 66.66666666%;
}
.col-70 {
  flex-basis: 70%;
  max-width: 70%;
}
.col-75 {
  flex-basis: 75%;
  max-width: 75%;
}
.col-80 {
  flex-basis: 80%;
  max-width: 80%;
}
.col-90 {
  flex-basis: 90%;
  max-width: 90%;
}
.col-100 {
  flex-basis: 100%;
  max-width: 100%;
}
@media only screen and (max-width: 1200px) {
  .col-l-10 {
    flex-basis: 10%;
    max-width: 10%;
  }
  .col-l-16 {
    flex-basis: 16.66666667%;
    max-width: 16.66666667%;
  }
  .col-l-20 {
    flex-basis: 20%;
    max-width: 20%;
  }
  .col-l-25 {
    flex-basis: 25%;
    max-width: 25%;
  }
  .col-l-30 {
    flex-basis: 30%;
    max-width: 30%;
  }
  .col-l-33 {
    flex-basis: 33.33333333%;
    max-width: 33.33333333%;
  }
  .col-l-40 {
    flex-basis: 40%;
    max-width: 40%;
  }
  .col-l-45 {
    flex-basis: 45%;
    max-width: 45%;
  }
  .col-l-50 {
    flex-basis: 50%;
    max-width: 50%;
  }
  .col-l-55 {
    flex-basis: 55%;
    max-width: 55%;
  }
  .col-l-60 {
    flex-basis: 60%;
    max-width: 60%;
  }
  .col-l-66 {
    flex-basis: 66.66666666%;
    max-width: 66.66666666%;
  }
  .col-l-70 {
    flex-basis: 70%;
    max-width: 70%;
  }
  .col-l-75 {
    flex-basis: 75%;
    max-width: 75%;
  }
  .col-l-80 {
    flex-basis: 80%;
    max-width: 80%;
  }
  .col-l-90 {
    flex-basis: 90%;
    max-width: 90%;
  }
  .col-l-100 {
    flex-basis: 100%;
    max-width: 100%;
  }
}
@media only screen and (max-width: 992px) {
  .col-m-10 {
    flex-basis: 10%;
    max-width: 10%;
  }
  .col-m-16 {
    flex-basis: 16.66666667%;
    max-width: 16.66666667%;
  }
  .col-m-20 {
    flex-basis: 20%;
    max-width: 20%;
  }
  .col-m-25 {
    flex-basis: 25%;
    max-width: 25%;
  }
  .col-m-30 {
    flex-basis: 30%;
    max-width: 30%;
  }
  .col-m-33 {
    flex-basis: 33.33333333%;
    max-width: 33.33333333%;
  }
  .col-m-40 {
    flex-basis: 40%;
    max-width: 40%;
  }
  .col-m-45 {
    flex-basis: 45%;
    max-width: 45%;
  }
  .col-m-50 {
    flex-basis: 50%;
    max-width: 50%;
  }
  .col-m-55 {
    flex-basis: 55%;
    max-width: 55%;
  }
  .col-m-60 {
    flex-basis: 60%;
    max-width: 60%;
  }
  .col-m-66 {
    flex-basis: 66.66666666%;
    max-width: 66.66666666%;
  }
  .col-m-70 {
    flex-basis: 70%;
    max-width: 70%;
  }
  .col-m-75 {
    flex-basis: 75%;
    max-width: 75%;
  }
  .col-m-80 {
    flex-basis: 80%;
    max-width: 80%;
  }
  .col-m-90 {
    flex-basis: 90%;
    max-width: 90%;
  }
  .col-m-100 {
    flex-basis: 100%;
    max-width: 100%;
  }
}
@media only screen and (max-width: 768px) {
  .col-s-10 {
    flex-basis: 10%;
    max-width: 10%;
  }
  .col-s-16 {
    flex-basis: 16.66666667%;
    max-width: 16.66666667%;
  }
  .col-s-20 {
    flex-basis: 20%;
    max-width: 20%;
  }
  .col-s-25 {
    flex-basis: 25%;
    max-width: 25%;
  }
  .col-s-30 {
    flex-basis: 30%;
    max-width: 30%;
  }
  .col-s-33 {
    flex-basis: 33.33333333%;
    max-width: 33.33333333%;
  }
  .col-s-40 {
    flex-basis: 40%;
    max-width: 40%;
  }
  .col-s-45 {
    flex-basis: 45%;
    max-width: 45%;
  }
  .col-s-50 {
    flex-basis: 50%;
    max-width: 50%;
  }
  .col-s-55 {
    flex-basis: 55%;
    max-width: 55%;
  }
  .col-s-60 {
    flex-basis: 60%;
    max-width: 60%;
  }
  .col-s-66 {
    flex-basis: 66.66666666%;
    max-width: 66.66666666%;
  }
  .col-s-70 {
    flex-basis: 70%;
    max-width: 70%;
  }
  .col-s-75 {
    flex-basis: 75%;
    max-width: 75%;
  }
  .col-s-80 {
    flex-basis: 80%;
    max-width: 80%;
  }
  .col-s-90 {
    flex-basis: 90%;
    max-width: 90%;
  }
  .col-s-100 {
    flex-basis: 100%;
    max-width: 100%;
  }
}
@media only screen and (max-width: 480px) {
  .col-xs-10 {
    flex-basis: 10%;
    max-width: 10%;
  }
  .col-xs-16 {
    flex-basis: 16.66666667%;
    max-width: 16.66666667%;
  }
  .col-xs-20 {
    flex-basis: 20%;
    max-width: 20%;
  }
  .col-xs-25 {
    flex-basis: 25%;
    max-width: 25%;
  }
  .col-xs-30 {
    flex-basis: 30%;
    max-width: 30%;
  }
  .col-xs-33 {
    flex-basis: 33.33333333%;
    max-width: 33.33333333%;
  }
  .col-xs-40 {
    flex-basis: 40%;
    max-width: 40%;
  }
  .col-xs-45 {
    flex-basis: 45%;
    max-width: 45%;
  }
  .col-xs-50 {
    flex-basis: 50%;
    max-width: 50%;
  }
  .col-xs-55 {
    flex-basis: 55%;
    max-width: 55%;
  }
  .col-xs-60 {
    flex-basis: 60%;
    max-width: 60%;
  }
  .col-xs-66 {
    flex-basis: 66.66666666%;
    max-width: 66.66666666%;
  }
  .col-xs-70 {
    flex-basis: 70%;
    max-width: 70%;
  }
  .col-xs-75 {
    flex-basis: 75%;
    max-width: 75%;
  }
  .col-xs-80 {
    flex-basis: 80%;
    max-width: 80%;
  }
  .col-xs-90 {
    flex-basis: 90%;
    max-width: 90%;
  }
  .col-xs-100 {
    flex-basis: 100%;
    max-width: 100%;
  }
}
/*======================================
  #Order
======================================*/
.col-order-1 {
  order: 1;
}
.col-order-2 {
  order: 2;
}
.col-order-3 {
  order: 3;
}
.col-order-4 {
  order: 4;
}
.col-order-5 {
  order: 5;
}
@media only screen and (max-width: 992px) {
  .col-m-order-1 {
    order: 1;
  }
  .col-m-order-2 {
    order: 2;
  }
  .col-m-order-3 {
    order: 3;
  }
  .col-m-order-4 {
    order: 4;
  }
  .col-m-order-5 {
    order: 5;
  }
}
@media only screen and (max-width: 768px) {
  .col-s-order-1 {
    order: 1;
  }
  .col-s-order-2 {
    order: 2;
  }
  .col-s-order-3 {
    order: 3;
  }
  .col-s-order-4 {
    order: 4;
  }
  .col-s-order-5 {
    order: 5;
  }
}
/*======================================
  #Horizontal scroll
======================================*/
.row.row--no-wrap {
  flex-flow: nowrap;
  justify-content: flex-start;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}
.row.row--no-wrap > [class*='col-'] {
  flex: 0 0 auto;
}
@media only screen and (max-width: 992px) {
  .row.row--no-wrap-m {
    flex-flow: nowrap;
    justify-content: flex-start;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
  .row.row--no-wrap-m > [class*='col-'] {
    flex: 0 0 auto;
  }
}
@media only screen and (max-width: 768px) {
  .row.row--no-wrap-s {
    flex-flow: nowrap;
    justify-content: flex-start;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    -ms-scroll-snap-type: x mandatory;
    scroll-snap-type: x mandatory;
    margin: 0;
  }
  .row.row--no-wrap-s > [class*='col-'] {
    flex: 0 0 auto;
    scroll-snap-align: center;
  }
  .row.row--no-wrap-s > .col-s-80 {
    min-width: 80%;
  }
  .row.row--no-wrap-s > .col-s-90 {
    min-width: 90%;
  }
}
@media only screen and (max-width: 768px) {
  .container--mobile-scroll {
    padding: 0;
  }
  .container--mobile-scroll > .row > [class*='col-']:first-child {
    padding-left: var(--grid-gutter);
  }
  .container--mobile-scroll > .row > [class*='col-']:last-child {
    padding-right: var(--grid-gutter);
  }
}
]]></Content>
      <Properties />
    </Stylesheet>
    <Stylesheet>
      <Name>ig-footer</Name>
      <FileName>ig-footer.css</FileName>
      <Content><![CDATA[/*======================================
  #Footer
======================================*/
.footer {
  padding: 30px 0;
  position: relative;
  font-size: 1rem;
  background-color: var(--background-dark);
}
.footer .footer-grid {
  padding-top: 60px;
  padding-bottom: 60px;
}
.footer.footer--light {
  background: var(--white);
  border-top: 1px solid var(--border-dark);
}
@media only screen and (max-width: 768px) {
  .footer {
    padding: 10px 0;
  }
  .footer .footer-grid {
    padding-top: 10px;
    padding-bottom: 10px;
  }
}
/*======================================
  #Items
======================================*/
.footer-item {
  margin: 20px 0;
  color: rgba(255, 255, 255, 0.7);
}
.footer-item .h6 {
  margin-bottom: 1em;
}
.footer-item ul {
  list-style: none;
  padding: 0;
  margin: 0;
}
.footer-item a {
  color: inherit;
}
@media only screen and (max-width: 768px) {
  .footer-item {
    text-align: center;
    margin: 10px 0;
  }
  .footer-item .navigation--level-0 {
    text-align: center;
  }
  .footer-item .navigation--level-0 li.selected > div a::before {
    display: none;
  }
}
.footer--light .footer-item {
  color: #666;
}
/*======================================
  #Contact
======================================*/
.footer-item--text {
  font-size: 0.875em;
}
.footer-item--text a {
  text-decoration: underline;
}
/*======================================
  #Logos
======================================*/
.footer-item--logos {
  margin-bottom: 0;
}
.footer-item--logos ul {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  margin: -20px 0 0;
}
.footer-item--logos ul li a img,
.footer-item--logos ul li > div img {
  padding: 20px;
  width: 100%;
}
@media only screen and (max-width: 768px) {
  .footer-item--logos ul li a img,
  .footer-item--logos ul li > div img {
    padding: 10px;
  }
}
.footer-item--logos.text-right ul {
  justify-content: flex-end;
}
.footer-item--logos.text-center ul {
  justify-content: center;
}
@media only screen and (max-width: 768px) {
  .footer-item--logos ul {
    margin: -10px 0 0;
    justify-content: center!important;
  }
  .footer-item--logos ul li {
    width: 50%;
  }
}
/*======================================
  #Contact
======================================*/
/* .footer-item--contact{} */
.contact-list {
  margin: 0;
  padding: 0;
  list-style: none;
}
.contact-list li {
  position: relative;
  padding-left: 25px;
  margin-bottom: 15px;
}
.contact-list li i {
  position: absolute;
  left: 0;
  top: 0.25em;
  width: 1.05em;
  text-align: center;
}
.contact-list li i.fa-envelope {
  font-size: 0.9em;
  top: 0.35em;
}
.contact-list li:last-child {
  margin-bottom: 0;
}
.text-right .contact-list li,
.text-center .contact-list li {
  padding-left: 0;
}
.text-right .contact-list li i,
.text-center .contact-list li i {
  position: static;
  margin-right: 3px;
}
@media only screen and (max-width: 768px) {
  .footer .contact-list {
    text-align: center;
  }
  .footer .contact-list li {
    padding-left: 0;
  }
  .footer .contact-list li i {
    position: static;
  }
}
/*======================================
  #Social
======================================*/
/* .footer-item--social-links{} */
.social-nav {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  flex-flow: row wrap;
}
.social-nav li {
  margin: 0 10px 10px 0;
}
.social-nav li a {
  display: block;
  width: 2.5em;
  height: 2.5em;
  display: flex;
  border-radius: 100%;
  font-size: 1.25rem;
  justify-content: center;
  align-items: center;
  color: #555;
  background: rgba(0, 0, 0, 0.05);
}
.social-nav li a:hover {
  color: var(--theme-contrast) !important;
  background-color: var(--theme) !important;
}
.social-nav--small li a {
  width: 1.9em;
  height: 1.9em;
  font-size: 1.25rem;
}
@media only screen and (max-width: 768px) {
  .social-nav {
    justify-content: center!important;
  }
}
.text-right .social-nav {
  justify-content: flex-end;
}
.text-right .social-nav li {
  margin: 0 0 10px 10px;
}
.text-center .social-nav {
  justify-content: center;
}
.text-center .social-nav li {
  margin: 0 5px 10px;
}
.light-color .social-nav li a {
  color: var(--white);
  background: rgba(255, 255, 255, 0.05);
}
/*======================================
  #Opening hours
======================================*/
.opening-hours {
  list-style: none;
  margin: 0;
  padding: 0;
  text-align: left;
}
.opening-hours li {
  border-top: 1px solid var(--border-light);
  padding: 10px;
}
.opening-hours li:first-child {
  border-top: 0;
  padding-top: 0;
}
.opening-hours li .time {
  float: right;
}
.footer--light .opening-hours li {
  border-top-color: var(--border-dark);
}
.light-color .opening-hours li {
  border-top-color: var(--border-light);
}
/*======================================
  #Bottom info
======================================*/
.footer__bottom-info {
  font-size: 0.75rem;
  text-align: center;
  margin: 0;
  color: rgba(255, 255, 255, 0.6);
}
.footer--light .footer__bottom-info {
  color: #888;
}
.igloo-symbol,
.ucc-symbol {
  display: block;
  opacity: 0.4;
  width: 20px;
  position: absolute;
  left: 20px;
  bottom: 20px;
  transition: none;
}
.igloo-symbol img,
.ucc-symbol img {
  width: 100%;
  display: block;
}
.igloo-symbol svg,
.ucc-symbol svg {
  display: block;
}
.igloo-symbol:hover,
.ucc-symbol:hover {
  opacity: 1;
}
@media only screen and (max-width: 768px) {
  .igloo-symbol,
  .ucc-symbol {
    position: static;
    margin: 10px auto;
  }
}
.footer--light #igloo_symbol,
.footer--light #ucc_symbol {
  fill: #111 !important;
}
/*======================================
  #To-top button
======================================*/
.to-top {
  position: fixed;
  bottom: -40px;
  right: 20px;
  width: 2.8em;
  height: 2.8em;
  font-size: 0.875rem;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  color: var(--white);
  z-index: 99;
  transition: all 0.3s ease;
}
.to-top:hover {
  color: var(--white);
}
.to-top--white {
  background: var(--white);
  color: var(--text-dark);
  box-shadow: 0 8px 20px -6px rgba(0, 0, 0, 0.15);
}
.to-top--white:hover {
  box-shadow: 0 6px 14px -6px rgba(0, 0, 0, 0.05);
  color: var(--theme);
}
.to-top--theme {
  background: var(--theme);
  color: var(--theme-contrast);
}
.to-top--theme:hover {
  background-color: var(--theme-darker);
}
.to-top--theme-alt {
  background: var(--theme-alt);
  color: var(--theme-alt-contrast);
}
.to-top--theme-alt:hover {
  background-color: var(--theme-alt-darker);
}
.to-top--dark {
  background-color: var(--background-dark);
}
.to-top--dark:hover {
  background-color: var(--background-dark-lighter);
}
.scroll .to-top {
  bottom: 20px;
}
]]></Content>
      <Properties />
    </Stylesheet>
    <Stylesheet>
      <Name>ig-header</Name>
      <FileName>ig-header.css</FileName>
      <Content><![CDATA[/*======================================
  #Header
======================================*/
.top {
  background-color: var(--background-dark);
  height: var(--header-height);
  position: absolute;
  width: 100%;
  top: 0;
  left: 0;
  z-index: 500;
  transition: background 0.4s ease, box-shadow 0.4s ease;
}
.top .top-inner {
  height: var(--header-height);
  margin: 0 auto;
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr auto 1fr;
  grid-template-columns: 1fr auto 1fr;
      grid-template-areas: "left center right";
  max-width: var(--grid-width);
  padding: 0 var(--grid-gutter);
}
@media only screen and (max-width: 992px) {
  .top .top-inner {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
}
.top.top--light {
  background: var(--white);
  box-shadow: 0 0 0 1px var(--border-dark);
}
.top.top--light:hover {
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
}
.top.top--small-width .top-inner {
  max-width: var(--grid-width-small);
}
.top.top--big-width .top-inner {
  max-width: var(--grid-width-big);
}
.top.top--full-width .top-inner {
  max-width: 100%;
}
.pre-top-visible .top {
  top: var(--pre-top-height);
}
@media only screen and (max-width: 992px) {
  .pre-top-visible .top {
    top: 0;
  }
}
.scroll .top {
  position: fixed;
  top: 0!important;
}
.scroll .top.top--light {
  box-shadow: 0 0 35px rgba(0, 0, 0, 0.1);
}
.top.top--scroll-bg {
  background: transparent;
  box-shadow: none;
}
.top.top--scroll-bg:hover {
  box-shadow: none;
}
.scroll .top.top--scroll-bg {
  background-color: var(--background-dark);
}
.scroll .top.top--scroll-bg.top--light {
  background: var(--white);
  box-shadow: 0 0 35px rgba(0, 0, 0, 0.1);
}
.top__left {
  -ms-grid-row: 1;
  -ms-grid-column: 1;
  grid-area: left;
  padding-right: 20px;
  height: var(--header-height);
}
@media only screen and (max-width: 992px) {
  .top__left {
    padding: 0 !important;
  }
}
.top__middle {
  -ms-grid-row: 1;
  -ms-grid-column: 2;
  grid-area: center;
}
.top__right {
  -ms-grid-row: 1;
  -ms-grid-column: 3;
  grid-area: right;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}
.top.top--navigation-center .top-inner {
  -ms-grid-columns: 1fr auto 1fr;
  grid-template-columns: 1fr auto 1fr;
}
.top.top--navigation-left .top-inner {
  -ms-grid-columns: auto auto 1fr;
  grid-template-columns: auto auto 1fr;
}
.top.top--navigation-right .top-inner {
  -ms-grid-columns: 1fr auto auto;
  grid-template-columns: 1fr auto auto;
}
.top.top--navigation-left-logo-center .top-inner {
  -ms-grid-columns: 1fr auto 1fr;
  grid-template-columns: 1fr auto 1fr;
}
.top.top--navigation-left-logo-center .top-inner .top__left {
  -ms-grid-row: 1;
  -ms-grid-column: 2;
  grid-area: center;
  justify-content: center;
  padding: 0 20px;
}
.top.top--navigation-left-logo-center .top-inner .top__middle {
  -ms-grid-row: 1;
  -ms-grid-column: 1;
  grid-area: left;
  justify-content: flex-start;
}
/*======================================
  #Intersection observer hook for scroll 
======================================*/
.io-hook {
  position: absolute;
  top: 0px;
  left: 0;
  height: 1px;
  width: 1px;
  visibility: hidden;
}
.pre-top-visible .io-hook {
  top: var(--pre-top-height);
}
@media only screen and (max-width: 992px) {
  .pre-top-visible .io-hook {
    top: 0;
  }
}
/*======================================
  #Logo
======================================*/
.logo-wrap {
  height: 100%;
}
.logo {
  position: relative;
  height: 100%;
  display: inline-flex;
  align-items: center;
  justify-content: flex-start;
  transition: all 0.3s ease;
  z-index: 5;
  padding: var(--logo-padding) 0;
}
.logo img {
  height: 100%;
  display: block;
  max-width: 100%;
}
.browser-safari .logo img {
  --logo-padding-total: calc(var(--logo-padding) + var(--logo-padding));
  max-height: calc(var(--header-height) - var(--logo-padding-total));
}
.top--dark .logo--on-light {
  display: none;
}
.top--dark .logo--on-dark {
  display: inline-flex;
}
.top--light .logo--on-light {
  display: inline-flex;
}
.top--light .logo--on-dark {
  display: none;
}
.top--scroll-light .logo--on-light {
  display: none;
}
.top--scroll-light .logo--on-dark {
  display: inline-flex;
}
.top--scroll-dark .logo--on-light {
  display: inline-flex;
}
.top--scroll-dark .logo--on-dark {
  display: none;
}
.scroll .top--light .logo--on-light {
  display: inline-flex;
}
.scroll .top--light .logo--on-dark {
  display: none;
}
.scroll .top--dark .logo--on-light {
  display: none;
}
.scroll .top--dark .logo--on-dark {
  display: inline-flex;
}
.browser-explorer.browser-version-9 .logo {
  position: absolute;
  top: 0;
  left: 0;
}
/*======================================
  #Main navigation
======================================*/
@media only screen and (max-width: 992px) {
  .main-nav--main {
    position: fixed;
    width: 100%;
    left: 0;
    bottom: 0;
    overflow-y: auto;
    transform: translateX(100%);
    -webkit-overflow-scrolling: touch;
    transition: all 0.35s ease;
    visibility: hidden;
    background-color: var(--background-dark);
    top: var(--header-height);
  }
  .mobile-nav-visible {
    overflow: hidden;
  }
  .mobile-nav-visible .main-nav--main {
    transform: translateX(0);
    visibility: visible;
  }
}
/* Lists */
.main-nav__ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
.main-nav__ul--first {
  display: flex;
}
@media only screen and (max-width: 992px) {
  .main-nav__ul--first {
    flex-flow: row wrap;
  }
}
.main-nav__ul--second,
.main-nav__ul--third {
  position: absolute;
  min-width: 200px;
  opacity: 0;
  visibility: hidden;
  transition: all 0.125s ease;
  background-color: var(--background-dark);
}
@media only screen and (max-width: 992px) {
  .main-nav__ul--second,
  .main-nav__ul--third {
    position: static;
    visibility: visible;
    opacity: 1;
    display: none;
    transition: none;
    box-shadow: none!important;
  }
}
@media only screen and (min-width: 992px) {
  .main-nav__ul--second,
  .main-nav__ul--third {
    display: block!important;
  }
}
.main-nav__ul--second {
  top: 100%;
  left: 0;
}
.main-nav__ul--second.go-right {
  left: auto;
  right: 0;
}
.main-nav__ul--third {
  top: 0;
  left: 100%;
}
.main-nav__ul--third.go-right {
  left: auto;
  right: 100%;
}
@media only screen and (max-width: 992px) {
  .main-nav__ul--third {
    background-color: var(--border-light) !important;
  }
}
.main-nav__ul--big {
  width: 100%;
  box-shadow: 0 10px 24px rgba(0, 0, 0, 0.15);
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}
@media only screen and (max-width: 992px) {
  .main-nav__ul--big {
    overflow: visible;
    max-height: 100%!important;
  }
}
.top--light .main-nav__ul--second,
.top--light .main-nav__ul--third {
  background: var(--white);
  box-shadow: 0 12px 20px -6px rgba(0, 0, 0, 0.15);
}
/* Items */
.main-nav__li {
  display: block;
  position: relative;
  transition: all 0.2s ease;
}
.main-nav__li--big {
  position: static;
}
.main-nav__li:hover,
.main-nav__li.touch-open {
  background: rgba(255, 255, 255, 0.03);
}
.main-nav__li:hover > .main-nav__ul,
.main-nav__li.touch-open > .main-nav__ul {
  opacity: 1;
  z-index: 99;
  visibility: visible;
}
@media only screen and (max-width: 992px) {
  .main-nav__li {
    width: 100%;
  }
  .main-nav__li:hover,
  .main-nav__li.touch-open {
    background-color: inherit!important;
  }
}
.top--light .main-nav__li:hover {
  background: rgba(0, 0, 0, 0.02);
}
/* Links */
.main-nav__a {
  color: var(--heading-light);
  display: block;
  font-size: var(--navigation-font-size);
  font-weight: var(--navigation-font-weight);
  transition: all 0.2s ease;
  position: relative;
  white-space: nowrap;
}
.main-nav__a .fa-chevron-down {
  font-size: 50%;
  color: rgba(255, 255, 255, 0.5);
  transform: translate(0, -1px);
  width: 10px;
  text-align: center;
}
.main-nav__a:hover {
  color: var(--heading-light);
}
.main-nav__a .expand {
  display: none;
}
@media only screen and (max-width: 992px) {
  .main-nav__a {
    border-top: 1px solid var(--border-light);
    line-height: 1!important;
    padding: 15px var(--grid-gutter) !important;
  }
  .main-nav__a .fa-chevron-down,
  .main-nav__a .fa-chevron-right {
    display: none;
  }
  .main-nav__a .expand {
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    width: 50px;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--border-light);
  }
  .main-nav__a .expand i {
    transition: transform 0.2s linear;
  }
  .main-nav__a .expand.open i {
    transform: rotate(45deg);
  }
}
.main-nav__ul--first > .main-nav__li > .main-nav__a {
  line-height: var(--header-height);
  padding: 0 var(--navigation-padding);
}
.main-nav__li.selected > .main-nav__a {
  color: var(--selected-nav-item) !important;
}
.main-nav__ul--second .main-nav__a {
  padding: 0.9em 1.25em;
}
.main-nav__ul--second .main-nav__a .fa-chevron-right {
  font-size: 65%;
  color: rgba(255, 255, 255, 0.5);
  position: absolute;
  right: 15px;
  top: 50%;
  transform: translateY(-50%);
}
@media only screen and (max-width: 992px) {
  .main-nav__ul--second .main-nav__a {
    background-color: var(--border-light);
  }
}
.main-nav__li.touch-open > a .fa-chevron-down:before {
  content: "\f00d";
}
.top--light .main-nav__a {
  color: var(--heading-dark);
}
.top--light .main-nav__a:hover {
  color: var(--heading-dark);
}
.top--light .main-nav__a .fa-chevron-down,
.top--light .main-nav__a .fa-chevron-right {
  color: rgba(0, 0, 0, 0.5);
}
/* Button */
.main-nav__li--btn {
  padding: 0 0 0 10px;
  display: flex;
  align-items: center;
}
.main-nav__li--btn .button {
  padding: 0.8em 1.35em;
}
.main-nav__li--btn:hover {
  background: transparent!important;
}
@media only screen and (max-width: 992px) {
  .main-nav__li--btn {
    padding: 20px 20px 0;
    display: block;
    text-align: center;
  }
  .main-nav__li--btn .button {
    display: inline-block;
  }
}
/* Language Picker */
.main-nav__li--lang > .main-nav__a {
  padding: 0;
  width: var(--header-height);
  height: var(--header-height);
  max-width: 70px;
}
.main-nav__li--lang > .main-nav__a span {
  display: none;
}
.main-nav__li--lang > .main-nav__a img {
  max-width: 1.2em;
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.main-nav__li--lang .main-nav__ul--second .main-nav__a {
  display: flex;
  flex-direction: row;
  align-items: center;
  line-height: 2em;
  white-space: nowrap;
}
.main-nav__li--lang .main-nav__ul--second .main-nav__a img {
  max-width: 1.2em;
  margin-right: 4px;
}
@media only screen and (max-width: 992px) {
  .main-nav__li--lang > .main-nav__a {
    display: flex;
    flex-direction: row;
    padding: 15px 25px;
    width: auto !important;
    height: auto !important;
    line-height: 2em;
    align-items: center;
    max-width: 100%!important;
  }
  .main-nav__li--lang > .main-nav__a span {
    display: block;
  }
  .main-nav__li--lang > .main-nav__a img {
    position: static;
    transform: none;
    margin-right: 4px;
  }
  .main-nav__li--lang .main-nav__ul--second {
    border-bottom: 1px solid var(--border-light);
  }
  .main-nav__li--lang .main-nav__ul--second .main-nav__li {
    display: block;
    border-left: 1px solid var(--border-light);
  }
  .main-nav__li--lang .main-nav__ul--second .main-nav__a {
    white-space: normal;
    line-height: 1;
  }
}
/* Mobile Contact */
.main-nav__li--contact {
  display: none;
}
@media only screen and (max-width: 992px) {
  .main-nav__li--contact {
    display: block;
    width: 50%;
    flex-grow: 1;
  }
  .main-nav__li--contact .main-nav__a {
    text-align: center;
    font-weight: var(--font-weight-normal);
  }
  .main-nav__li--contact .main-nav__a i {
    margin-right: 3px;
  }
  .main-nav__li--contact:nth-child(2) {
    border-left: 1px solid var(--border-light);
  }
  .top--light .main-nav__li--contact:nth-child(2) {
    border-left-color: var(--border-dark);
  }
}
.top--scroll-light .main-nav > ul > li > .main-nav__a {
  color: var(--heading-light);
}
.top--scroll-light .main-nav > ul > li > .main-nav__a i.fa-chevron-down {
  color: rgba(255, 255, 255, 0.5);
}
@media only screen and (max-width: 992px) {
  .top--scroll-light .main-nav > ul > li > .main-nav__a {
    color: inherit;
  }
}
.top--scroll-dark .main-nav > ul > li > .main-nav__a {
  color: var(--heading-dark);
}
.top--scroll-dark .main-nav > ul > li > .main-nav__a i.fa-chevron-down {
  color: rgba(0, 0, 0, 0.5);
}
@media only screen and (max-width: 992px) {
  .top--scroll-dark .main-nav > ul > li > .main-nav__a {
    color: inherit;
  }
}
@media only screen and (max-width: 992px) {
  .top--dark .main-nav > ul > li > .main-nav__a {
    color: var(--heading-light);
  }
}
.scroll .top--light .main-nav > ul > li > .main-nav__a {
  color: var(--heading-dark);
}
.scroll .top--light .main-nav > ul > li > .main-nav__a i.fa-chevron-down {
  color: rgba(0, 0, 0, 0.5);
}
.scroll .top--dark .main-nav > ul > li > .main-nav__a {
  color: var(--heading-light);
}
.scroll .top--dark .main-nav > ul > li > .main-nav__a i.fa-chevron-down {
  color: rgba(255, 255, 255, 0.5);
}
@media only screen and (max-width: 992px) {
  .top--light .main-nav {
    background: var(--white);
  }
  .top--light .main-nav li.mobile-contact:nth-child(2) {
    border-left-color: rgba(0, 0, 0, 0.08);
  }
  .top--light .main-nav .main-nav__a .expand {
    background-color: rgba(0, 0, 0, 0.04);
  }
  .top--light .main-nav .main-nav__a {
    border-top: 1px solid rgba(0, 0, 0, 0.08);
  }
  .top--light .main-nav .main-nav__ul--second .main-nav__a {
    background-color: rgba(0, 0, 0, 0.04);
  }
  .top--light .main-nav .main-nav__li--lang ul {
    border-bottom-color: rgba(0, 0, 0, 0.08);
  }
  .top--light .main-nav .main-nav__li--lang ul li {
    border-left-color: rgba(0, 0, 0, 0.08);
  }
  .top--light .main-nav .main-nav__ul--third {
    background-color: rgba(0, 0, 0, 0.04) !important;
  }
  .top--light .main-nav .main-nav__li:hover {
    background: inherit!important;
  }
}
.browser-explorer.browser-version-9 .main-nav {
  position: absolute;
  top: 0;
  right: 0;
}
.browser-explorer.browser-version-9 .main-nav .main-nav__li--contact {
  display: none;
}
.browser-explorer.browser-version-9 .main-nav ul li {
  display: inline-block;
}
/*======================================
  #Search
======================================*/
.main-nav .toggle-search .main-nav__a {
  width: var(--header-height);
  height: var(--header-height);
  font-size: 1.0625rem !important;
  text-align: center;
  padding: 0!important;
  max-width: 70px;
}
.mobile-actions {
  display: none;
}
@media only screen and (max-width: 992px) {
  .mobile-actions {
    display: block;
  }
}
.mobile-actions ul {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
}
.mobile-actions ul li a {
  font-size: 1.3rem !important;
  display: flex;
  color: var(--heading-light);
  line-height: 1;
  align-items: center;
  justify-content: center;
  width: var(--header-height);
  height: var(--header-height);
}
.top--light .mobile-actions ul li a {
  color: var(--heading-dark);
}
.top--scroll-dark .mobile-actions ul li a {
  color: var(--heading-dark);
}
.top--scroll-light .mobile-actions ul li a {
  color: var(--heading-light);
}
.scroll .top--light .mobile-actions ul li a {
  color: var(--heading-dark);
}
.scroll .top--dark .mobile-actions ul li a {
  color: var(--heading-light);
}
/*======================================
  #Toggle mobile nav
======================================*/
.hamburger {
  cursor: pointer;
  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;
  width: var(--header-height);
  height: var(--header-height);
  max-width: 40px;
}
.mobile-nav-visible .hamburger .hamburger-inner,
.mobile-nav-visible .hamburger .hamburger-inner::before,
.mobile-nav-visible .hamburger .hamburger-inner::after {
  width: 30px;
}
.hamburger-box {
  width: 30px;
  height: 24px;
  display: inline-block;
  position: relative;
}
.hamburger-inner,
.hamburger-inner::before,
.hamburger-inner::after {
  width: 28px;
  height: 2px;
  background-color: var(--white);
  border-radius: 4px;
  position: absolute;
  transition-property: transform;
  transition-duration: 0.15s;
  transition-timing-function: ease;
}
.hamburger-inner {
  display: block;
  top: 50%;
  width: 78%;
  margin-top: 2px;
  transition-duration: 0.22s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
}
.hamburger-inner::before,
.hamburger-inner::after {
  content: "";
  display: block;
}
.hamburger-inner::before {
  top: -8px;
  transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in;
}
.hamburger-inner::after {
  bottom: -8px;
  transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}
.mobile-nav-visible .hamburger-inner {
  transform: rotate(225deg) scale(0.85);
  transition-delay: 0.12s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
}
.mobile-nav-visible .hamburger-inner::before {
  top: 0;
  opacity: 0;
  transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out;
}
.mobile-nav-visible .hamburger-inner::after {
  bottom: 0;
  transform: rotate(-90deg);
  transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
}
.top--light .hamburger-inner,
.top--light .hamburger-inner::before,
.top--light .hamburger-inner::after {
  background-color: var(--heading-dark);
}
.top--scroll-dark .hamburger-inner,
.top--scroll-dark .hamburger-inner::before,
.top--scroll-dark .hamburger-inner::after {
  background-color: var(--heading-dark);
}
.top--scroll-light .hamburger-inner,
.top--scroll-light .hamburger-inner::before,
.top--scroll-light .hamburger-inner::after {
  background-color: var(--heading-light);
}
.scroll .top--light .hamburger-inner,
.scroll .top--light .hamburger-inner::before,
.scroll .top--light .hamburger-inner::after {
  background-color: var(--heading-dark);
}
.scroll .top--dark .hamburger-inner,
.scroll .top--dark .hamburger-inner::before,
.scroll .top--dark .hamburger-inner::after {
  background-color: var(--heading-light);
}
/*======================================
  #Pre top
======================================*/
.pre-top {
  position: absolute;
  width: 100%;
  top: 0;
  left: 0;
  height: 30px;
  font-size: 0.8125rem;
  background-color: var(--white);
  z-index: 600;
  color: rgba(0, 0, 0, 0.9);
  box-shadow: 0 0 0 1px var(--border-dark);
}
.pre-top a {
  color: rgba(0, 0, 0, 0.9);
}
@media only screen and (max-width: 992px) {
  .pre-top {
    display: none;
  }
}
.pre-top.pre-top--dark {
  box-shadow: 0 0 0 1px var(--border-light);
  color: rgba(255, 255, 255, 0.9);
  background-color: var(--background-dark);
}
.pre-top.pre-top--dark a {
  color: rgba(255, 255, 255, 0.9);
}
.pre-top.pre-top--dark ul.pre-top__list ul {
  box-shadow: none;
  background-color: var(--background-dark);
}
.pre-top.pre-top--dark ul.pre-top__list ul li:hover {
  background-color: rgba(255, 255, 255, 0.03);
}
.pre-top.pre-top--dark .pre-top__list li ul li a {
  color: rgba(255, 255, 255, 0.7) !important;
}
.pre-top.pre-top--scroll-bg {
  background: transparent!important;
}
.pre-top__inner {
  display: flex;
  justify-content: space-between;
}
.pre-top .pre-top__list {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  font-weight: var(--navigation-font-weight);
}
.pre-top .pre-top__list--right {
  margin-left: auto;
}
.pre-top .pre-top__list--left > li {
  margin-right: 1em;
}
.pre-top .pre-top__list--left > li ul {
  left: 0;
}
.pre-top .pre-top__list--right > li {
  margin-left: 1em;
}
.pre-top .pre-top__list--right > li ul {
  right: 0;
}
.pre-top .pre-top__list li {
  position: relative;
  line-height: 30px;
}
.pre-top .pre-top__list li a {
  display: block;
}
.pre-top .pre-top__list li a .fa-caret-down {
  opacity: 0.5;
}
.pre-top .pre-top__list li ul {
  position: absolute;
  list-style: none;
  margin: 0;
  padding: 0;
  background: var(--white);
  min-width: 170px;
  top: 100%;
  box-shadow: 0 8px 20px -6px rgba(0, 0, 0, 0.15);
  padding: 5px 0;
  visibility: hidden;
  opacity: 0;
  margin-top: 1px;
  transition: all 0.2s ease;
}
.pre-top .pre-top__list li ul li a {
  line-height: 1;
  padding: 10px 15px;
  color: rgba(0, 0, 0, 0.7) !important;
}
.pre-top .pre-top__list li ul li a:hover {
  background: rgba(0, 0, 0, 0.02);
  color: inherit;
}
.pre-top .pre-top__list > li:hover > a,
.pre-top .pre-top__list .touch-open > a {
  opacity: 0.7;
  color: inherit;
}
.pre-top .pre-top__list > li:hover > ul,
.pre-top .pre-top__list .touch-open > ul {
  visibility: visible;
  opacity: 1;
}
.pre-top.pre-top--scroll-dark {
  color: rgba(0, 0, 0, 0.9) !important;
  box-shadow: 0 0 0 1px var(--border-dark);
}
.pre-top.pre-top--scroll-dark a {
  color: rgba(0, 0, 0, 0.9) !important;
}
.pre-top.pre-top--scroll-light {
  color: rgba(255, 255, 255, 0.9) !important;
  box-shadow: 0 0 0 1px var(--border-light);
}
.pre-top.pre-top--scroll-light a {
  color: rgba(255, 255, 255, 0.9) !important;
}
]]></Content>
      <Properties />
    </Stylesheet>
    <Stylesheet>
      <Name>ig-theme</Name>
      <FileName>ig-theme.css</FileName>
      <Content><![CDATA[:root {
    /* Base */
    --white: #fff;
    --black: #000;
    
    /* Theme */
    --theme: {themeColor};
    --theme-rgb: {themeColorRGB};
    --theme-darker: {themeColorDarker};
    --theme-contrast: {themeContrast};

    /* Theme alt */
    --theme-alt: {themeAltColor};
    --theme-alt-darker: {themeAltColorDarker};
    --theme-alt-contrast: {themeAltContrast};
    
    /* Dark */
    --heading-dark: {headingColorDark};
    --text-dark: {textColorDark};
    --background-dark: {darkBackground};
    --background-dark-lighter: {darkBackgroundLighter};
    --border-dark: {borderDark};
    
    /* Light */
    --heading-light: {headingColorLight};
    --text-light: {textColorLight};
    --background-light: {grayBackground};
    --border-light: {borderLight};
    
    /* Header */
    --selected-nav-item: {selectedNavigationItem};
    --header-height: {headerHeight};
    --logo-padding: {logoPadding};
    --pre-top-height: 30px;
    --top-combo-calc: calc(var(--header-height) + var(--pre-top-height));
    --navigation-padding: {navigationPadding};
    --navigation-font-size: {navigationFontSize};    
    --navigation-font-weight: {navigationFontWeight};
    
    /* Grid */
    --grid-width-small: {containerWidthSmall};
    --grid-width: {containerWidth};
    --grid-width-big: {containerWidthBig};
    --grid-gutter: {gridGutter};
    --grid-gutter-half: calc(var(--grid-gutter) / 2);
    
    /* Buttons */
    --button-border-radius: {buttonBorderRadius};
    
    /* Typography */
    --body-font: {bodyFont};
    --heading-font: {headingFont};
    --font-size: {textFontSize};
    --font-size-big: {textBigFontSize};
    --font-size-small: {textSmallFontSize};
    --body-line-height: {textLineHeight};
    
    --font-size-h1: {heading1FontSize};
    --font-size-h2: {heading2FontSize};
    --font-size-h3: {heading3FontSize};
    --font-size-h4: {heading4FontSize};
    --font-size-h5: {heading5FontSize};
    --font-size-h6: {heading6FontSize};
    --hero-heading: {heroHeadingFontSize};
    --heading-line-height: {headingLineHeight}; 
    
    --font-weight-normal: normal;
    --font-weight-light: 300;
    --font-weight-bold: bold;
    --font-weight-bolder: bolder;
    
    --body-font-weight: {textFontWeight};
    --heading-font-weight: {headingFontWeight};
    --text-big-font-weight: {textBigFontWeight};
    
    /* Validation */
    --success: {success};
    --error: {error};
}
@media only screen and (max-width: 1200px) {
  :root {
    --navigation-padding: {navigationPaddingSmallerScreens};
  }
}
@media only screen and (max-width: 992px) {
  :root {
    --header-height: {headerHeightMobile};
    --grid-gutter: {gridGutterMedium};
    --logo-padding: {logoPaddingMobile};
    --navigation-font-size: {navigationFontSizeMobile};
  }
}
@media only screen and (max-width: 768px) {
  :root {
    --grid-gutter: {gridGutterSmall};
    --hero-heading: {heroHeadingMobileFontSize};
  }
}
@media only screen and (max-width: 480px) {
  :root {
    --grid-gutter: {gridGutterXS};
  }
}
]]></Content>
      <Properties />
    </Stylesheet>
    <Stylesheet>
      <Name>ig-theme.defaults</Name>
      <FileName>ig-theme.defaults.css</FileName>
      <Content><![CDATA[:root {
  --white: #fff;
  --black: #000;
  --theme: #3aa5ed;
  --theme-rgb: 58, 165, 237;
  --theme-darker: #148ee0;
  --theme-contrast: #fff;
  --theme-alt: #2ecc71;
  --theme-alt-darker: #25a25a;
  --theme-alt-contrast: #fff;
  --heading-dark: #111;
  --text-dark: #444;
  --background-dark: #111;
  --background-dark-lighter: #1b1b1b;
  --border-dark: rgba(0, 0, 0, 0.08);
  --heading-light: #fff;
  --text-light: #fff;
  --background-light: #f9f9f9;
  --border-light: rgba(255, 255, 255, 0.1);
  --selected-nav-item: #3aa5ed;
  --header-height: 70px;
  --logo-padding: 24px;
  --pre-top-height: 30px;
  --top-combo-calc: calc(var(--header-height) + var(--pre-top-height));
  --navigation-padding: 30px;
  --navigation-font-size: 0.875rem;
  --navigation-font-weight: bold;
  --grid-width-small: 850px;
  --grid-width: 1300px;
  --grid-width-big: 1600px;
  --grid-gutter: 30px;
  --grid-gutter-half: calc(var(--grid-gutter) / 2);
  --button-border-radius: 4px;
  --body-font: "Roboto", sans-serif;
  --heading-font: "Roboto", sans-serif;
  --font-size: 1.1rem;
  --font-size-big: 1.25rem;
  --font-size-small: 0.75rem;
  --body-line-height: 1.6;
  --font-size-h1: 2.5rem;
  --font-size-h2: 2.25rem;
  --font-size-h3: 1.75rem;
  --font-size-h4: 1.5rem;
  --font-size-h5: 1.2rem;
  --font-size-h6: 1rem;
  --hero-heading: 3.75rem;
  --heading-line-height: 1.5;
  --font-weight-normal: normal;
  --font-weight-light: 300;
  --font-weight-bold: bold;
  --font-weight-bolder: bolder;
  --body-font-weight: normal;
  --heading-font-weight: bold;
  --text-big-font-weight: 300;
  --success: #2ecc71;
  --error: #e74c3c;
}
@media only screen and (max-width: 1200px) {
  :root {
    --navigation-padding: 15px;
  }
}
@media only screen and (max-width: 992px) {
  :root {
    --header-height: 50px;
    --grid-gutter: 20px;
    --logo-padding: 15px;
    --navigation-font-size: 1rem;
  }
}
@media only screen and (max-width: 768px) {
  :root {
    --grid-gutter: 15px;
    --hero-heading: 2.5rem;
  }
}
@media only screen and (max-width: 480px) {
  :root {
    --grid-gutter: 15px;
  }
}]]></Content>
      <Properties />
    </Stylesheet>
    <Stylesheet>
      <Name>ig-widgets</Name>
      <FileName>ig-widgets.css</FileName>
      <Content><![CDATA[/*======================================
  #Hero
======================================*/
.hero {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 80px 0;
  max-width: 100%;
  background-color: var(--background-dark);
}
.hero.hero--v-top {
  align-items: flex-start;
}
.hero.hero--v-bottom {
  align-items: flex-end;
}
@media only screen and (max-width: 768px) {
  .hero {
    padding: 60px 0;
  }
}
.hero.hero--25 {
  min-height: 25vh;
}
.hero.hero--30 {
  min-height: 30vh;
}
.hero.hero--35 {
  min-height: 35vh;
}
.hero.hero--40 {
  min-height: 40vh;
}
.hero.hero--45 {
  min-height: 45vh;
}
.hero.hero--50 {
  min-height: 50vh;
}
.hero.hero--55 {
  min-height: 55vh;
}
.hero.hero--60 {
  min-height: 60vh;
}
.hero.hero--65 {
  min-height: 65vh;
}
.hero.hero--70 {
  min-height: 70vh;
}
.hero.hero--75 {
  min-height: 75vh;
}
.hero.hero--80 {
  min-height: 80vh;
}
.hero.hero--85 {
  min-height: 85vh;
}
.hero.hero--90 {
  min-height: 90vh;
}
.hero.hero--95 {
  min-height: 95vh;
}
.hero.hero--100 {
  min-height: 100vh;
}
.hero .hero__background {
  position: absolute;
  width: 100%;
  bottom: 0;
  left: 0;
  top: 0;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  z-index: 1;
}
.hero .hero__inner {
  flex-grow: 1;
  width: 100%;
}
.hero.overlay--light {
  background: var(--white) !important;
}
.browser-explorer.browser-version-11 .hero .hero__inner {
  overflow: hidden;
  padding: 10px 0;
}
.browser-explorer.browser-version-11 .hero.hero--25 {
  height: 25vh;
}
.browser-explorer.browser-version-11 .hero.hero--30 {
  height: 30vh;
}
.browser-explorer.browser-version-11 .hero.hero--35 {
  height: 35vh;
}
.browser-explorer.browser-version-11 .hero.hero--40 {
  height: 40vh;
}
.browser-explorer.browser-version-11 .hero.hero--45 {
  height: 45vh;
}
.browser-explorer.browser-version-11 .hero.hero--50 {
  height: 50vh;
}
.browser-explorer.browser-version-11 .hero.hero--55 {
  height: 55vh;
}
.browser-explorer.browser-version-11 .hero.hero--60 {
  height: 60vh;
}
.browser-explorer.browser-version-11 .hero.hero--65 {
  height: 65vh;
}
.browser-explorer.browser-version-11 .hero.hero--70 {
  height: 70vh;
}
.browser-explorer.browser-version-11 .hero.hero--75 {
  height: 75vh;
}
.browser-explorer.browser-version-11 .hero.hero--80 {
  height: 80vh;
}
.browser-explorer.browser-version-11 .hero.hero--85 {
  height: 85vh;
}
.browser-explorer.browser-version-11 .hero.hero--90 {
  height: 90vh;
}
.browser-explorer.browser-version-11 .hero.hero--95 {
  height: 95vh;
}
.browser-explorer.browser-version-11 .hero.hero--100 {
  height: 100vh;
}
@media only screen and (max-width: 768px) {
  .browser-safari .top + .hero.hero--100 {
    min-height: 90vh;
  }
}
/*======================================
  #Hero text
======================================*/
.hero__inner {
  position: relative;
  z-index: 10;
}
.hero__inner h1,
.hero__inner h2 {
  font-size: var(--hero-heading);
  line-height: 1.4;
  margin-bottom: 0;
}
.hero__inner .hero__text {
  margin: 20px 0 0;
}
.hero__inner .hero__text p:last-of-type {
  margin-bottom: 0;
}
.hero__inner .button-wrap {
  margin-top: 30px;
}
/*======================================
  #Hero animation
======================================*/
.hero.animate {
  overflow: hidden;
}
.hero.animate .hero__background {
  transform: scale(1.05);
  transition: all 2s ease;
  opacity: 0;
}
.hero.animate .hero__inner {
  opacity: 0;
  transform: scale(0.95) translateZ(0);
  transition: all 0.6s ease 0.1s;
}
.hero.animate .hero__inner .button-wrap .button {
  transform: translateZ(0);
  opacity: 0;
  transition: opacity 1.2s ease 0.5s, background 0.3s ease 0s, color 0.3s ease 0s;
}
.hero.animate .hero__inner .button-wrap .button:nth-child(2) {
  transition: opacity 1.2s ease 0.7s, background 0.3s ease 0s, color 0.3s ease 0s;
}
.hero.animate .hero__inner .button-wrap .button:nth-child(3) {
  transition: opacity 1.2s ease 0.9s, background 0.3s ease 0s, color 0.3s ease 0s;
}
.hero.in-view.animate .hero__background {
  transform: scale(1);
  opacity: 1;
}
.hero.in-view.animate .hero__inner {
  opacity: 1;
  transform: scale(1) translateZ(0);
}
.hero.in-view.animate .hero__inner .button-wrap .button {
  opacity: 1;
}
.row--center .hero__inner {
  text-align: center;
}
.row--center .hero__inner .button-wrap {
  justify-content: center;
}
.row--center .hero__inner .button-wrap .button {
  margin: 5px;
}
/*======================================
  #Overlay
======================================*/
.overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  z-index: 5;
  background: var(--background-dark);
  opacity: 0.3;
  transition: opacity 0.4s ease;
}
.overlay.overlay--light {
  background: var(--white);
}
/*======================================
  #Scroll icon
======================================*/
.icon-scroll {
  position: absolute;
  bottom: 30px;
  left: 50%;
  color: var(--heading-light);
  z-index: 9;
  width: 30px;
  text-align: center;
  margin-left: -15px;
  animation-duration: 2.2s;
  animation-iteration-count: infinite;
  animation-name: scroll;
}
.icon-scroll.overlay--light {
  color: var(--heading-dark);
}
@keyframes scroll {
  0% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
  80% {
    opacity: 0;
    transform: translateY(36px) scale(0.5);
  }
  81% {
    opacity: 0;
    transform: translateY(-5px) scale(0.9);
  }
}
/*======================================
  #Video
======================================*/
.hero__video {
  position: absolute;
  width: 100%;
  bottom: 0;
  left: 0;
  top: 0;
  z-index: 2;
  overflow: hidden;
}
.hero__video .hero__video-player {
  position: absolute;
  min-width: 100%;
  min-height: 100%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
/*======================================
  #Top + Combos
======================================*/
.top + #content > .hero:first-child {
  padding: calc(var(--header-height) + 80px) 0 80px;
}
@media only screen and (max-width: 992px) {
  .top + #content > .hero:first-child {
    padding: calc(var(--header-height) + 60px) 0 60px;
  }
}
.top + #content > .hero:first-child .hero__background,
.top + #content > .hero:first-child .hero__video {
  top: var(--header-height);
}
.pre-top + .top + #content > .hero:first-child {
  padding: calc(var(--header-height) + var(--pre-top-height) + 80px) 0 80px;
}
@media only screen and (max-width: 992px) {
  .pre-top + .top + #content > .hero:first-child {
    padding: calc(var(--header-height) + 60px) 0 60px;
  }
}
.pre-top + .top + #content > .hero:first-child .hero__background,
.pre-top + .top + #content > .hero:first-child .hero__video {
  top: calc(var(--header-height) + var(--pre-top-height));
}
@media only screen and (max-width: 992px) {
  .pre-top + .top + #content > .hero:first-child .hero__background,
  .pre-top + .top + #content > .hero:first-child .hero__video {
    top: var(--header-height);
  }
}
.top.top--scroll-bg + #content > .hero:first-child {
  padding: calc(var(--header-height) + 10px) 0;
}
.top.top--scroll-bg + #content > .hero:first-child .hero__background,
.top.top--scroll-bg + #content > .hero:first-child .hero__video {
  top: 0;
}
.pre-top + .top.top--scroll-bg + #content > .hero:first-child {
  padding: calc(var(--header-height) + var(--pre-top-height) + 10px) 0;
}
@media only screen and (max-width: 992px) {
  .pre-top + .top.top--scroll-bg + #content > .hero:first-child {
    padding: calc(var(--header-height) + 10px) 0;
  }
}
.pre-top + .top.top--scroll-bg + #content > .hero:first-child .hero__background,
.pre-top + .top.top--scroll-bg + #content > .hero:first-child .hero__video {
  top: 0;
}
/*======================================
  #Block General
======================================*/
.block {
  padding: 80px 0;
  position: relative;
}
@media only screen and (max-width: 992px) {
  .block {
    padding: 50px 0;
  }
}
@media only screen and (max-width: 768px) {
  .block {
    padding: 30px 0;
  }
}
.block.block--compact {
  padding: 30px 0;
}
.block__header {
  text-align: center;
  max-width: 850px;
  margin: 0 auto;
  padding: 0 20px;
}
.block__header .block__header-text img {
  height: auto!important;
}
.block__header .block__header-text p:last-of-type {
  margin-bottom: 0;
}
.block__header h1,
.block__header h2,
.block__header h3 {
  margin-bottom: 0;
}
.block__header h1 + .block__header-text,
.block__header h2 + .block__header-text,
.block__header h3 + .block__header-text {
  margin-top: 15px;
}
.block__header + .block__body {
  margin-top: 60px;
}
@media only screen and (max-width: 768px) {
  .block__header + .block__body {
    margin-top: 30px;
  }
}
.block__body + .button-wrap {
  margin-top: 60px;
}
@media only screen and (max-width: 768px) {
  .block__body + .button-wrap {
    margin-top: 20px;
  }
}
.block__header + .button-wrap {
  margin-top: 30px;
}
.block > .button-wrap {
  padding: 0 20px;
  text-align: center;
}
.button-wrap {
  display: inline-flex;
  flex-flow: row wrap;
  align-items: center;
}
.button-wrap .button {
  margin: 5px 10px 5px 0;
}
.button-wrap .button--underline:only-child {
  padding-left: 0;
  padding-right: 0;
}
.text-center .button-wrap {
  justify-content: center;
}
.text-center .button-wrap .button {
  margin: 5px;
}
.text-right .button-wrap {
  justify-content: flex-end;
}
.text-right .button-wrap .button {
  margin: 5px 0 5px 10px;
}
/*======================================
  #Block background
======================================*/
.block__background {
  background-color: var(--background-dark);
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  z-index: -1;
}
.light-color .block__background.lazyloading {
  opacity: 1;
  background-color: var(--background-dark);
}
/*======================================
  #Section Combos
======================================*/
.top + #content {
  margin-top: var(--header-height);
}
.pre-top-visible .top + #content {
  margin-top: var(--top-combo-calc);
}
@media only screen and (max-width: 992px) {
  .pre-top-visible .top + #content {
    margin-top: var(--header-height);
  }
}
.top.top--scroll-bg + #content {
  margin-top: 0;
}
#content > .map:first-child,
#content > .hero:first-child,
#content > .split-wrap:first-child,
#content > .account-form:first-child {
  margin-top: calc(var(--header-height) * -1);
}
.pre-top-visible #content > .map:first-child,
.pre-top-visible #content > .split-wrap:first-child,
.pre-top-visible #content > .hero:first-child,
.pre-top-visible #content > .account-form:first-child {
  margin-top: calc(var(--top-combo-calc) * -1);
}
@media only screen and (max-width: 992px) {
  .pre-top-visible #content > .map:first-child,
  .pre-top-visible #content > .split-wrap:first-child,
  .pre-top-visible #content > .hero:first-child,
  .pre-top-visible #content > .account-form:first-child {
    margin-top: calc(var(--header-height) * -1);
  }
}
#content > .map:first-child,
#content > .split-wrap:first-child .split,
#content > .account-form:first-child {
  padding-top: var(--header-height);
}
.pre-top-visible #content > .map:first-child,
.pre-top-visible #content > .split-wrap:first-child .split,
.pre-top-visible #content > .account-form:first-child {
  padding-top: var(--top-combo-calc);
}
@media only screen and (max-width: 992px) {
  .pre-top-visible #content > .map:first-child,
  .pre-top-visible #content > .split-wrap:first-child .split,
  .pre-top-visible #content > .account-form:first-child {
    padding-top: var(--header-height);
  }
}
.top.top--scroll-bg + #content > .map:first-child,
.top.top--scroll-bg + #content > .split-wrap:first-child .split,
.top.top--scroll-bg + #content > .split-wrap:first-child,
.top.top--scroll-bg + #content > .account-form:first-child {
  padding-top: 0;
  margin-top: 0;
}
.top.top--scroll-bg + #content > .hero:first-child {
  margin-top: 0;
}
.block.theme-bg + .block.theme-bg,
.block.theme-alt-bg + .block.theme-alt-bg,
.block.dark-bg + .block.dark-bg,
.block.white-bg + .block.white-bg,
.block.gray-bg + .block.gray-bg {
  padding-top: 0;
}
.pre-top-visible .search__autocomplete,
.pre-top-visible .main-nav__ul--big {
  max-height: calc(100vh - var(--top-combo-calc));
}
.search__autocomplete,
.pre-top-visible.scroll .search__autocomplete,
.main-nav__ul--big,
.pre-top-visible.scroll .main-nav__ul--big {
  max-height: calc(100vh - var(--header-height));
}
/*======================================
  #Animate 
======================================*/
.animate-item {
  transition: all 0.8s ease;
  opacity: 0;
  transform: scale(0.95) translateZ(0);
}
.animate-item.in-view {
  opacity: 1;
  transform: scale(1);
}
/*======================================
  #Gallery 
======================================*/
.gallery.block--compact {
  padding: var(--grid-gutter-half) 0 0;
}
.gallery__group {
  display: -ms-grid;
  display: grid;
  grid-gap: var(--grid-gutter-half);
  margin-bottom: var(--grid-gutter-half);
}
.gallery__group--no-gap {
  grid-gap: 0;
  margin-bottom: 0;
}
.gallery__group figure,
.gallery__group .gallery__video {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}
.gallery__group figure a,
.gallery__group .gallery__video a {
  display: block;
  height: 100%;
}
.gallery__group figure a img,
.gallery__group .gallery__video a img {
  transition: opacity 0.25s ease;
  transform: translate3d(0, 0, 0);
}
.gallery__group figure a:hover img,
.gallery__group .gallery__video a:hover img {
  opacity: 0.9;
}
.gallery__group figure img,
.gallery__group .gallery__video img,
.gallery__group figure video,
.gallery__group .gallery__video video {
  display: block;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.gallery__group .gallery__item {
  -ms-grid-columns: 1fr;
  grid-template-columns: 1fr;
  position: relative;
}
.gallery__group .gallery__item::after {
  content: "";
  display: block;
}
.gallery__group--1 .gallery__item::after {
  padding-bottom: 56.25%;
}
.gallery__group--2 {
  -ms-grid-columns: 1fr 1fr;
  grid-template-columns: 1fr 1fr;
}
.gallery__group--2 .gallery__item::after {
  padding-bottom: 100%;
}
.gallery__group--3 {
  -ms-grid-columns: 2fr 1fr;
  grid-template-columns: 2fr 1fr;
  -ms-grid-rows: 1fr 1fr;
  grid-template-rows: 1fr 1fr;
}
.gallery__group--3 .gallery__item:nth-child(3n+1) {
  -ms-grid-row-span: 2;
  grid-row-end: span 2;
}
.gallery__group--3 .gallery__item:nth-child(3n+1)::after {
  padding-bottom: 80%;
}
.gallery__group--4 {
  -ms-grid-columns: 1fr 1fr;
  grid-template-columns: 1fr 1fr;
  -ms-grid-rows: 1fr 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr 1fr;
}
.gallery__group--4 .gallery__item {
  -ms-grid-row-span: 2;
  grid-row-end: span 2;
}
.gallery__group--4 .gallery__item:nth-child(4n+1) {
  -ms-grid-row-span: 3;
  grid-row-end: span 3;
}
.gallery__group--4 .gallery__item:nth-child(4n+1)::after {
  padding-bottom: 80%;
}
.gallery__group--4 .gallery__item:nth-child(4n+4) {
  -ms-grid-column: 2;
      grid-column-start: 2;
  -ms-grid-row: 3;
      grid-row-start: 3;
  -ms-grid-row-span: 3;
  grid-row-end: span 3;
}
.gallery__group--5 {
  -ms-grid-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  -ms-grid-rows: 1fr 1fr 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr;
}
.gallery__group--5 .gallery__item:nth-child(5n+1) {
  -ms-grid-row-span: 4;
  grid-row-end: span 4;
  -ms-grid-column-span: 5;
  grid-column-end: span 5;
}
.gallery__group--5 .gallery__item:nth-child(5n+1)::after {
  padding-bottom: 80%;
}
.gallery__group--5 .gallery__item:nth-child(5n+2),
.gallery__group--5 .gallery__item:nth-child(5n+3) {
  -ms-grid-column-span: 3;
  grid-column-end: span 3;
  -ms-grid-row-span: 2;
  grid-row-end: span 2;
}
.gallery__group--5 .gallery__item:nth-child(5n+4) {
  -ms-grid-row-span: 2;
  grid-row-end: span 2;
  -ms-grid-column-span: 3;
  grid-column-end: span 3;
}
.gallery__group--5 .gallery__item:nth-child(5n+5) {
  -ms-grid-row-span: 2;
  grid-row-end: span 2;
  -ms-grid-column-span: 5;
  grid-column-end: span 5;
}
.gallery__group--6 {
  -ms-grid-columns: 1fr 1fr 1fr 1fr;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  -ms-grid-rows: 1fr 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr 1fr;
}
.gallery__group--6 .gallery__item {
  -ms-grid-row-span: 2;
  grid-row-end: span 2;
}
.gallery__group--6 .gallery__item:nth-child(6n+1),
.gallery__group--6 .gallery__item:nth-child(6n+4) {
  -ms-grid-row-span: 3;
  grid-row-end: span 3;
  -ms-grid-column-span: 2;
  grid-column-end: span 2;
}
.gallery__group--6 .gallery__item:nth-child(6n+1)::after,
.gallery__group--6 .gallery__item:nth-child(6n+4)::after {
  padding-bottom: 70%;
}
.gallery__group--7 {
  -ms-grid-columns: 1fr 1fr 1fr 1fr;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  -ms-grid-rows: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
}
.gallery__group--7 .gallery__item:nth-child(7n+1),
.gallery__group--7 .gallery__item:nth-child(7n+4) {
  -ms-grid-row-span: 2;
  grid-row-end: span 2;
}
.gallery__group--7 .gallery__item:nth-child(7n+1)::after,
.gallery__group--7 .gallery__item:nth-child(7n+4)::after {
  padding-bottom: 190%;
}
.gallery__group--7 .gallery__item:nth-child(7n+2) {
  -ms-grid-row-span: 2;
  grid-row-end: span 2;
  -ms-grid-column-span: 2;
  grid-column-end: span 2;
}
.gallery__group--8 {
  -ms-grid-columns: 1fr 1fr 1fr 1fr;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  -ms-grid-rows: 1fr 1fr 1fr ;
  grid-template-rows: 1fr 1fr 1fr ;
}
.gallery__group--8 .gallery__item:nth-child(8n+1) {
  -ms-grid-row-span: 2;
  grid-row-end: span 2;
}
.gallery__group--8 .gallery__item:nth-child(8n+1)::after {
  padding-bottom: 200%;
}
.gallery__group--8 .gallery__item:nth-child(8n+4) {
  -ms-grid-column-span: 2;
  grid-column-end: span 2;
  -ms-grid-column: 3;
      grid-column-start: 3;
  -ms-grid-row: 1;
      grid-row-start: 1;
}
.gallery__group--8 .gallery__item:nth-child(8n+6) {
  -ms-grid-row-span: 2;
  grid-row-end: span 2;
}
.gallery__group--8 .gallery__item:nth-child(8n+7) {
  -ms-grid-column-span: 2;
  grid-column-end: span 2;
}
.gallery__group--grid {
  -ms-grid-columns: (1fr)[4];
  grid-template-columns: repeat(4, 1fr);
}
.gallery__group--grid .gallery__item::after {
  padding-bottom: 100%;
}
@media only screen and (max-width: 768px) {
  .gallery__group--grid {
    -ms-grid-columns: (1fr)[2];
    grid-template-columns: repeat(2, 1fr);
  }
}
.gallery__item {
  background-color: var(--border-dark);
}
.dark-bg .gallery__item,
.theme-bg .gallery__item,
.theme-alt-bg .gallery__item {
  background-color: var(--border-light);
}
.instagram-user-link {
  position: absolute;
  top: 5px;
  right: 5px;
  color: var(--heading-light) !important;
  display: block;
  padding: 10px;
  line-height: 1;
  border-radius: 100%;
  z-index: 3;
  opacity: 0.7;
}
.instagram-user-link:hover {
  opacity: 1;
}
/*======================================
  #List
======================================*/
/* .feed{} */
.box-wrap .box {
  margin-bottom: 0!important;
  height: 100%;
}
.box-wrap > [class*='col-'] {
  margin-bottom: var(--grid-gutter);
}
.box {
  background: var(--white);
  box-shadow: 0 22px 43px -20px rgba(0, 0, 0, 0.15);
  transition: box-shadow 0.3s ease;
  display: block;
  margin-bottom: var(--grid-gutter);
  color: var(--text-dark);
}
.box h1,
.box h2,
.box h3,
.box h4,
.box h5,
.box h6 {
  color: var(--heading-dark) !important;
}
.box img {
  display: block;
}
.box .box__image img {
  width: 100%;
}
.box .box__text {
  padding: var(--grid-gutter);
  position: relative;
}
.box .box__text p {
  margin-bottom: 0;
  font-size: 1rem;
}
.box .box__meta {
  font-size: 0.7rem;
  line-height: 1;
  padding: 0 0 0.7em;
  font-weight: var(--font-weight-bold);
}
.box:hover {
  box-shadow: 0 12px 23px -15px rgba(0, 0, 0, 0.15);
}
.white-bg .box {
  border: 1px solid rgba(0, 0, 0, 0.04);
  background-color: var(--background-light);
  box-shadow: none;
}
.white-bg .box:hover {
  box-shadow: none;
}
.dark-bg .box {
  background-color: var(--background-dark-lighter);
  color: var(--text-light);
}
.dark-bg .box h1,
.dark-bg .box h2,
.dark-bg .box h3,
.dark-bg .box h4,
.dark-bg .box h5,
.dark-bg .box h6 {
  color: var(--heading-light) !important;
}
.theme-bg .box,
.theme-alt-bg .box {
  background-color: rgba(255, 255, 255, 0.15);
  color: inherit;
}
.theme-bg .box h1,
.theme-alt-bg .box h1,
.theme-bg .box h2,
.theme-alt-bg .box h2,
.theme-bg .box h3,
.theme-alt-bg .box h3,
.theme-bg .box h4,
.theme-alt-bg .box h4,
.theme-bg .box h5,
.theme-alt-bg .box h5,
.theme-bg .box h6,
.theme-alt-bg .box h6 {
  color: inherit !important;
}
/*======================================
  #Pager
======================================*/
ul.pager {
  margin: 1.5em 0 0;
  padding: 0;
  list-style: none;
}
ul.pager li {
  display: inline-block;
  margin: 0 3px 6px;
}
ul.pager li a {
  display: block;
  line-height: 1;
  padding: 0.8em 1em;
  font-weight: var(--font-weight-bold);
  font-size: 1rem;
  background: var(--white);
  border-radius: 4px;
  color: var(--heading-dark);
  transition: all 0.25s ease;
  box-shadow: 0 8px 20px -6px rgba(0, 0, 0, 0.15);
}
ul.pager li a:hover {
  box-shadow: 0 6px 14px -6px rgba(0, 0, 0, 0.05);
  color: var(--theme);
}
ul.pager li.selected a {
  cursor: default;
  box-shadow: none;
  background: transparent;
  color: var(--text-dark);
}
.white-bg ul.pager li a {
  color: #555;
  background-color: rgba(0, 0, 0, 0.05);
  box-shadow: 0 0 0 -2px rgba(0, 0, 0, 0);
}
.white-bg ul.pager li a:hover {
  background-color: rgba(0, 0, 0, 0);
  box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.09);
}
/*======================================
  #Post
======================================*/
.post__image {
  max-width: 1100px;
  margin: 0 auto 40px;
  overflow: hidden;
}
.post__image img {
  display: block;
  margin: 0 auto;
}
.post__meta {
  font-size: 0.8rem;
  font-weight: var(--font-weight-bold);
}
.post__header {
  margin: 1em 0;
  display: flex;
  align-items: center;
  justify-content: center;
}
.post__author {
  display: flex;
  align-items: center;
  font-weight: bold;
  font-size: 0.8rem;
  margin-right: 2em;
}
.post__author img {
  margin-right: 10px;
  max-width: 40px;
  border-radius: 50%;
  display: block;
}
.post__author-bio {
  display: flex;
  align-items: flex-start;
  max-width: 550px;
  margin: 4.5em auto 0;
}
.post__author-bio img {
  margin-right: 15px;
  width: 100px;
  height: 100px;
  border-radius: 50%;
  display: block;
}
.post__author-bio-text {
  font-size: 1rem;
}
.post__body {
  max-width: 850px;
  padding: 0 20px;
  margin: 0 auto;
}
.post__body img {
  height: auto!important;
}
/*======================================
  #Share
======================================*/
.share {
  text-align: center;
  margin: 2em 0;
}
.share h6 {
  margin-bottom: 20px;
}
ul.share-list {
  padding: 0;
  margin: 0;
  list-style: none;
  display: flex;
  justify-content: center;
}
ul.share-list li {
  margin: 0 0.3em;
}
ul.share-list li a {
  display: block;
  color: var(--white);
  line-height: 1;
  font-size: 1.25rem;
  border-radius: 50%;
  width: 2.5em;
  height: 2.5em;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--theme);
}
ul.share-list li a:hover {
  transform: translateY(-5px);
  background-color: var(--theme-darker);
}
ul.share-list li.share-facebook a {
  background: #3b5998;
}
ul.share-list li.share-facebook a:hover {
  background: #4264aa;
}
ul.share-list li.share-twitter a {
  background: #4099FF;
}
ul.share-list li.share-twitter a:hover {
  background: #5aa7ff;
}
ul.share-list li.share-linkedin a {
  background: #007bb5;
}
ul.share-list li.share-linkedin a:hover {
  background: #008ccf;
}
ul.tags + .share {
  margin-top: 30px;
}
/*======================================
  #Tags
======================================*/
.block-header ul.tags {
  margin-top: 20px;
}
ul.tags {
  list-style: none;
  padding: 0;
  margin: 40px 0 0;
}
ul.tags li {
  display: inline-block;
}
ul.tags li a {
  display: block;
  background: var(--background-light);
  line-height: 1;
  padding: 0.5em 1em;
  border-radius: 4px;
  font-size: 0.75rem;
  font-weight: var(--font-weight-bold);
  color: var(--text-dark);
  text-transform: uppercase;
}
ul.tags li a i {
  position: relative;
  margin: 0 0 0 5px;
}
ul.tags li a:hover {
  background: var(--background-dark);
  color: var(--heading-light);
}
ul.tags li a.active {
  background: var(--background-dark);
  color: var(--heading-light);
}
ul.tags li a.active:hover {
  background: var(--background-light);
  color: var(--text-dark);
}
/*======================================
  #Map
======================================*/
.map {
  min-height: 200px;
}
.map.map--25 {
  height: 25vh;
}
.map.map--30 {
  height: 30vh;
}
.map.map--35 {
  height: 35vh;
}
.map.map--40 {
  height: 40vh;
}
.map.map--45 {
  height: 45vh;
}
.map.map--50 {
  height: 50vh;
}
.map.map--55 {
  height: 55vh;
}
.map.map--60 {
  height: 60vh;
}
.map.map--65 {
  height: 65vh;
}
.map.map--70 {
  height: 70vh;
}
.map.map--75 {
  height: 75vh;
}
.map.map--80 {
  height: 80vh;
}
.map.map--85 {
  height: 85vh;
}
.map.map--90 {
  height: 90vh;
}
.map.map--95 {
  height: 95vh;
}
.map.map--100 {
  height: 100vh;
}
.map .map__canvas {
  height: 100%;
  width: 100%;
}
.map.map--split {
  height: auto;
  min-height: min-content;
  display: flex;
  flex-flow: row wrap;
}
.map.map--split.map--25 {
  min-height: 25vh;
}
.map.map--split.map--30 {
  min-height: 30vh;
}
.map.map--split.map--35 {
  min-height: 35vh;
}
.map.map--split.map--40 {
  min-height: 40vh;
}
.map.map--split.map--45 {
  min-height: 45vh;
}
.map.map--split.map--50 {
  min-height: 50vh;
}
.map.map--split.map--55 {
  min-height: 55vh;
}
.map.map--split.map--60 {
  min-height: 60vh;
}
.map.map--split.map--65 {
  min-height: 65vh;
}
.map.map--split.map--70 {
  min-height: 70vh;
}
.map.map--split.map--75 {
  min-height: 75vh;
}
.map.map--split.map--80 {
  min-height: 80vh;
}
.map.map--split.map--85 {
  min-height: 85vh;
}
.map.map--split.map--90 {
  min-height: 90vh;
}
.map.map--split.map--95 {
  min-height: 95vh;
}
.map.map--split.map--100 {
  min-height: 100vh;
}
.map.map--split .map__content {
  width: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.map.map--split .map__content .map__content-inner {
  padding: 80px 40px;
  max-width: 650px;
  flex-grow: 1;
}
.map.map--split .map__canvas {
  width: 50%;
  height: auto;
}
.map.map--split.map--text-right .map__content {
  order: 2;
}
.map.map--split.map--text-right .map__canvas {
  order: 1;
}
@media only screen and (max-width: 992px) {
  .map.map--split .map__canvas {
    order: 1;
  }
  .map.map--split .map__content {
    order: 2;
  }
}
@media only screen and (max-width: 992px) {
  .map.map--split {
    height: auto;
    flex-wrap: wrap;
  }
  .map.map--split .map__content {
    width: 100%;
  }
  .map.map--split .map__content .map__content-inner {
    padding: 40px 20px;
  }
  .map.map--split .map__canvas {
    width: 100%;
  }
  .map.map--split.map--25 .map__canvas {
    height: 25vh;
  }
  .map.map--split.map--30 .map__canvas {
    height: 30vh;
  }
  .map.map--split.map--35 .map__canvas {
    height: 35vh;
  }
  .map.map--split.map--40 .map__canvas {
    height: 40vh;
  }
  .map.map--split.map--45 .map__canvas {
    height: 45vh;
  }
  .map.map--split.map--50 .map__canvas {
    height: 50vh;
  }
  .map.map--split.map--55 .map__canvas {
    height: 55vh;
  }
  .map.map--split.map--60 .map__canvas {
    height: 60vh;
  }
  .map.map--split.map--65 .map__canvas {
    height: 65vh;
  }
  .map.map--split.map--70 .map__canvas {
    height: 70vh;
  }
  .map.map--split.map--75 .map__canvas {
    height: 75vh;
  }
  .map.map--split.map--80 .map__canvas {
    height: 80vh;
  }
  .map.map--split.map--85 .map__canvas {
    height: 85vh;
  }
  .map.map--split.map--90 .map__canvas {
    height: 90vh;
  }
  .map.map--split.map--95 .map__canvas {
    height: 95vh;
  }
  .map.map--split.map--100 .map__canvas {
    height: 100vh;
  }
}
.map .opening-hours li {
  border-top-color: var(--border-dark);
}
.map .contact-list,
.map .opening-hours,
.map .button-wrap {
  margin-top: 30px;
}
.map .light-color .opening-hours li {
  border-top-color: var(--border-light);
}
/*======================================
  #Text & Images
======================================*/
.split {
  min-height: min-content;
  display: flex;
  flex-flow: row wrap;
  margin: 0 auto;
  padding-left: var(--grid-gutter);
  padding-right: var(--grid-gutter);
}
.split.split--25 {
  min-height: 25vh;
}
.split.split--30 {
  min-height: 30vh;
}
.split.split--35 {
  min-height: 35vh;
}
.split.split--40 {
  min-height: 40vh;
}
.split.split--45 {
  min-height: 45vh;
}
.split.split--50 {
  min-height: 50vh;
}
.split.split--55 {
  min-height: 55vh;
}
.split.split--60 {
  min-height: 60vh;
}
.split.split--65 {
  min-height: 65vh;
}
.split.split--70 {
  min-height: 70vh;
}
.split.split--75 {
  min-height: 75vh;
}
.split.split--80 {
  min-height: 80vh;
}
.split.split--85 {
  min-height: 85vh;
}
.split.split--90 {
  min-height: 90vh;
}
.split.split--95 {
  min-height: 95vh;
}
.split.split--100 {
  min-height: 100vh;
}
.split--standard {
  max-width: var(--grid-width);
}
.split--small {
  max-width: var(--grid-width-small);
}
.split--big {
  max-width: var(--grid-width-big);
}
.split--full {
  max-width: 100%;
  padding-left: 0;
  padding-right: 0;
}
.split--full .split__text {
  justify-content: center;
}
@media only screen and (max-width: 768px) {
  .split {
    padding-left: 0;
    padding-right: 0;
  }
}
.split.split--text-right .split__text {
  order: 2;
}
.split.split--text-right .split__image {
  border: 5px solid var(--white);
  border-right: 0;
}
@media only screen and (max-width: 768px) {
  .split.split--text-right .split__image {
    border: 5px solid var(--white);
  }
}
.split .split__text {
  width: 50%;
  display: flex;
  align-items: center;
  padding-right: 60px;
}
.split .split__text--v-top {
  align-items: flex-start;
}
.split .split__text--v-center {
  align-items: center;
}
.split .split__text--v-bottom {
  align-items: flex-end;
}
.split .split__text--text-left {
  text-align: left;
}
.split .split__text--text-center {
  text-align: center;
  justify-content: center;
}
.split .split__text--text-right {
  text-align: right;
}
.split .split__text .split__text-inner {
  padding-top: var(--grid-gutter);
  padding-bottom: var(--grid-gutter);
  max-width: 650px;
  flex-grow: 1;
}
.split .split__text--v-center .split__text-inner {
  padding-top: 100px;
  padding-bottom: 100px;
}
.split .split__text p:last-of-type {
  margin-bottom: 0;
}
.split .split__text .button-wrap {
  margin-top: 30px;
}
@media only screen and (max-width: 768px) {
  .split .split__text {
    width: 100%;
    order: 2;
    padding: 0!important;
  }
  .split .split__text .split__text-inner {
    padding: var(--grid-gutter);
  }
}
.split--text-right .split__text {
  padding-right: 0;
  padding-left: 60px;
}
.split--full .split__text {
  padding-left: 60px;
  padding-right: 60px;
}
.split .split__image {
  width: 50%;
  display: flex;
  flex-flow: row wrap;
  border: 5px solid var(--white);
  border-left: 0;
}
.split .split__image .split__image-item {
  flex-grow: 1;
  width: 100%;
  min-height: 100%;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  border: 5px solid var(--white);
}
.split .split__image.split__image--contain .split__image-item {
  background-size: contain;
}
.split .split__image.split__image--no-border,
.split .split__image.split__image--no-border .split__image-item {
  border: 0;
}
.split .split__image.split__image--2 .split__image-item {
  width: 50%;
}
.split .split__image.split__image--3 .split__image-item {
  width: 50%;
  min-height: 50%;
}
.split .split__image.split__image--3 .split__image-item:nth-child(1) {
  width: 100%;
}
.split .split__image.split__image--4 .split__image-item {
  width: 50%;
  min-height: 50%;
}
.split .split__image.split__image--5 .split__image-item:nth-child(1),
.split .split__image.split__image--5 .split__image-item:nth-child(2) {
  width: 50%;
  min-height: 60%;
}
.split .split__image.split__image--5 .split__image-item {
  width: 33.3333333%;
  min-height: 40%;
}
.split .split__image.split__image--6 .split__image-item {
  width: 33.3333333%;
  min-height: 50%;
}
@media only screen and (max-width: 768px) {
  .split .split__image {
    order: 1;
    width: 100%;
    min-height: 400px;
    border: 5px solid var(--white);
  }
}
.theme-bg .split .split__image .split__image-item,
.theme-bg .split .split__image {
  border-color: var(--theme);
}
.theme-alt-bg .split .split__image .split__image-item,
.theme-alt-bg .split .split__image {
  border-color: var(--theme-alt);
}
.gray-bg .split .split__image .split__image-item,
.gray-bg .split .split__image {
  border-color: var(--background-light);
}
.dark-bg .split .split__image .split__image-item,
.dark-bg .split .split__image {
  border-color: var(--background-dark);
}
.browser-explorer .split.split--25 .split__image {
  min-height: 25vh;
}
.browser-explorer .split.split--30 .split__image {
  min-height: 30vh;
}
.browser-explorer .split.split--35 .split__image {
  min-height: 35vh;
}
.browser-explorer .split.split--40 .split__image {
  min-height: 40vh;
}
.browser-explorer .split.split--45 .split__image {
  min-height: 45vh;
}
.browser-explorer .split.split--50 .split__image {
  min-height: 50vh;
}
.browser-explorer .split.split--55 .split__image {
  min-height: 55vh;
}
.browser-explorer .split.split--60 .split__image {
  min-height: 60vh;
}
.browser-explorer .split.split--65 .split__image {
  min-height: 65vh;
}
.browser-explorer .split.split--70 .split__image {
  min-height: 70vh;
}
.browser-explorer .split.split--75 .split__image {
  min-height: 75vh;
}
.browser-explorer .split.split--80 .split__image {
  min-height: 80vh;
}
.browser-explorer .split.split--85 .split__image {
  min-height: 85vh;
}
.browser-explorer .split.split--90 .split__image {
  min-height: 90vh;
}
.browser-explorer .split.split--95 .split__image {
  min-height: 95vh;
}
.browser-explorer .split.split--100 .split__image {
  min-height: 100vh;
}
/*======================================
  #Split animation
======================================*/
.split-wrap.animate {
  overflow: hidden;
}
.split-wrap.animate .split .split__text,
.split-wrap.animate .split .split__image {
  transition: all 0.8s ease;
  opacity: 0;
  visibility: hidden;
}
.split-wrap.animate .split .split__text {
  transform: translateX(-75px);
}
.split-wrap.animate .split .split__image {
  transform: translateX(75px);
}
.split-wrap.animate .split .split__image .split__image-item {
  transition: all 0.8s ease;
  opacity: 0;
  transform: scale(0.95) translateZ(0);
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(15) {
  transition-delay: 2.25s;
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(14) {
  transition-delay: 2.1s;
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(13) {
  transition-delay: 1.95s;
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(12) {
  transition-delay: 1.7999999999999998s;
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(11) {
  transition-delay: 1.65s;
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(10) {
  transition-delay: 1.5s;
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(9) {
  transition-delay: 1.3499999999999999s;
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(8) {
  transition-delay: 1.2s;
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(7) {
  transition-delay: 1.05s;
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(6) {
  transition-delay: 0.8999999999999999s;
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(5) {
  transition-delay: 0.75s;
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(4) {
  transition-delay: 0.6s;
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(3) {
  transition-delay: 0.44999999999999996s;
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(2) {
  transition-delay: 0.3s;
}
.split-wrap.animate .split .split__image .split__image-item:nth-child(1) {
  transition-delay: 0.15s;
}
.split-wrap.animate .split.split--text-right .split__text {
  transform: translateX(75px);
}
.split-wrap.animate .split.split--text-right .split__image {
  transform: translateX(-75px);
}
.split-wrap.animate.in-view .split .split__text,
.split-wrap.animate.in-view .split .split__image {
  opacity: 1;
  visibility: visible;
  transform: translateX(0);
}
.split-wrap.animate.in-view .split .split__text .split__image-item,
.split-wrap.animate.in-view .split .split__image .split__image-item {
  opacity: 1;
  transform: scale(1) translateZ(0);
}
/*======================================
  #Image
======================================*/
.image-block {
  margin: 0 auto;
}
.image-block img {
  display: block;
}
/*======================================
  #Newsletter
======================================*/
.newsletter {
  padding: 80px 0;
  position: relative;
}
@media only screen and (max-width: 768px) {
  .newsletter {
    padding: 40px 0;
  }
}
.newsletter .newsletter__inner {
  max-width: 680px;
  padding: 0 20px;
  margin: 0 auto;
  text-align: center;
}
.newsletter form {
  margin: 30px 0 20px;
  background: var(--white);
  padding: 6px;
  border-radius: 4px;
  box-shadow: 0 8px 20px -6px rgba(0, 0, 0, 0.1);
  border-radius: var(--button-border-radius);
  display: flex;
}
.newsletter form input {
  margin: 0;
  box-shadow: none!important;
  border: 0!important;
  background-color: transparent!important;
  padding-left: 20px;
}
@media only screen and (max-width: 768px) {
  .newsletter form input {
    padding: 15px;
  }
}
.newsletter form button {
  font-size: 1.2rem;
  max-width: 70px;
}
.newsletter p.newsletter__disclaimer {
  margin-bottom: 0;
  font-size: 0.75rem;
  line-height: 1.2em;
  font-weight: var(--font-weight-normal);
}
.newsletter.white-bg form {
  box-shadow: 0 8px 20px -6px rgba(0, 0, 0, 0.05);
  border: 1px solid rgba(0, 0, 0, 0.07);
}
.newsletter.white-bg form input {
  border: 0;
}
.dark-bg.light-color .newsletter__inner form {
  background-color: var(--background-dark-lighter);
  border: 1px solid var(--border-light);
}
/*======================================
  #Newsletter Animate
======================================*/
.newsletter.animate .newsletter__inner,
.newsletter.animate form,
.newsletter.animate form button {
  opacity: 0;
}
.newsletter.animate .newsletter__inner {
  transition: all 0.8s ease;
  transform: scale(0.95) translateZ(0);
}
.newsletter.animate form {
  transition: all 0.8s ease 0.3s;
  transform: scale(1.15) translateZ(0);
}
.newsletter.animate form button {
  transition: all 0.8s ease 0.8s;
  transform: scale(0.95) translateZ(0);
}
.newsletter.animate.in-view .newsletter__inner,
.newsletter.animate.in-view form,
.newsletter.animate.in-view form button {
  opacity: 1;
  transform: scale(1);
}
/*======================================
  #Flickity Slider v2.2.1
======================================*/
.flickity-enabled {
  position: relative;
}
.flickity-enabled:focus {
  outline: none;
}
.flickity-viewport {
  overflow: hidden;
  position: relative;
  height: 100%;
}
.flickity-slider {
  position: absolute;
  width: 100%;
  height: 100%;
}
/* draggable */
.flickity-enabled.is-draggable {
  -webkit-tap-highlight-color: transparent;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.flickity-enabled.is-draggable .flickity-viewport {
  cursor: move;
  cursor: grab;
}
.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down {
  cursor: grabbing;
}
/* ---- flickity-button ---- */
.flickity-button {
  position: absolute;
  background: hsla(0, 0%, 100%, 0.75);
  border: none;
  color: #333;
}
.flickity-button:hover {
  background: var(--white);
  cursor: pointer;
}
.flickity-button:hover .flickity-button-icon {
  fill: #111;
}
.flickity-button:focus {
  outline: none;
  box-shadow: 0 0 0 5px #19F;
}
.flickity-button:active {
  opacity: 0.6;
}
.flickity-button:disabled {
  opacity: 0;
  cursor: auto;
  /* prevent disabled button from capturing pointer up event. #716 */
  pointer-events: none;
}
.flickity-button-icon {
  fill: var(--white);
}
/* ---- previous/next buttons ---- */
.flickity-prev-next-button {
  position: absolute;
  top: 50%;
  width: 44px;
  height: 44px;
  border: none;
  border-radius: 50%;
  background: rgba(0, 0, 0, 0.3);
  cursor: pointer;
  outline: none;
  transition: all 0.3s ease;
  transform: translateY(-50%);
}
@media only screen and (max-width: 768px) {
  .flickity-prev-next-button {
    display: none;
  }
}
.flickity-prev-next-button.previous {
  left: 20px;
}
.flickity-prev-next-button.next {
  right: 20px;
}
/* right to left */
.flickity-rtl .flickity-prev-next-button.previous {
  left: auto;
  right: 20px;
}
.flickity-rtl .flickity-prev-next-button.next {
  right: auto;
  left: 20px;
}
.flickity-prev-next-button .flickity-button-icon {
  position: absolute;
  left: 30%;
  top: 30%;
  width: 40%;
  height: 40%;
}
/* ---- page dots ---- */
.flickity-page-dots {
  position: absolute;
  width: 100%;
  bottom: 25px;
  padding: 0;
  margin: 0;
  list-style: none;
  text-align: center;
  line-height: 1;
}
@media only screen and (max-width: 768px) {
  .flickity-page-dots {
    bottom: 15px;
  }
}
.flickity-rtl .flickity-page-dots {
  direction: rtl;
}
.flickity-page-dots .dot {
  display: inline-block;
  width: 10px;
  height: 10px;
  margin: 0 6px;
  background: #ccc;
  border-radius: 50%;
  transition: all 0.25s linear;
  opacity: 0.25;
  cursor: pointer;
}
@media only screen and (max-width: 768px) {
  .flickity-page-dots .dot {
    margin: 0 4px;
    width: 5px;
    height: 5px;
  }
}
.flickity-page-dots .dot.is-selected {
  opacity: 1;
  transform: scale(1.2);
}
/* flickity-fade */
.flickity-enabled.is-fade .flickity-slider > * {
  pointer-events: none;
  z-index: 0;
}
.flickity-enabled.is-fade .flickity-slider > .is-selected {
  pointer-events: auto;
  z-index: 1;
}
/*======================================
  #Hero slider
======================================*/
.slider .flickity-viewport {
  transition: height 0.5s;
}
.slider .hero {
  width: 100%;
  height: 100%;
}
.slide {
  width: 100%;
  min-width: 100%;
}
/*======================================
  #Tabs
======================================*/
.tabs__nav {
  background-color: var(--white);
  padding-top: var(--grid-gutter);
}
.tabs__nav ul {
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0;
  justify-content: center;
}
.tabs__nav ul li a {
  display: block;
  padding: 1.5em 2em;
  line-height: 1;
  color: var(--text-dark);
  font-weight: var(--font-weight-bold);
  font-size: 1rem;
  border-radius: 4px 4px 0 0;
  white-space: nowrap;
  position: relative;
}
.tabs__nav ul li a:hover,
.tabs__nav ul li a:focus {
  color: var(--heading-dark);
}
.tabs__nav ul li a.active {
  cursor: default;
  color: var(--heading-dark);
}
@media only screen and (max-width: 768px) {
  .tabs__nav ul {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    justify-content: flex-start;
  }
  .tabs__nav ul li {
    min-width: min-content;
  }
  .tabs__nav ul li a {
    padding: 1em 1.5em;
  }
}
.tabs.tabs--pills .tabs__nav {
  padding: var(--grid-gutter) 0 10px;
}
.tabs.tabs--pills .tabs__nav ul {
  flex-wrap: wrap;
}
.tabs.tabs--pills .tabs__nav ul li {
  margin: 5px;
}
.tabs.tabs--pills .tabs__nav ul li a {
  border-radius: 20px;
  font-size: 0.875rem;
  padding: 1em 1.5em;
}
.tabs.tabs--pills .tabs__nav ul li a::after {
  content: "";
  width: 0;
  height: 0;
  position: absolute;
  left: 50%;
  bottom: 0;
  border-left: 7px solid transparent;
  border-right: 7px solid transparent;
  border-top: 7px solid transparent;
  margin-left: -7px;
  transition: all 0.3s ease;
  opacity: 0;
}
.tabs.tabs--pills .tabs__nav ul li a.active::after {
  transform: translateY(100%);
  opacity: 1;
}
@media only screen and (max-width: 768px) {
  .tabs.tabs--pills .tabs__nav ul {
    justify-content: center;
    overflow-x: visible;
  }
}
.tabs__container .tab {
  display: none;
}
.tabs__container .tab.tab--active {
  display: block;
}
.tabs.tabs--white .tabs__nav {
  background-color: var(--background-light);
}
.tabs.tabs--white .tabs__nav .active {
  background-color: var(--white);
  box-shadow: 0 -7px 20px rgba(0, 0, 0, 0.07);
}
.tabs.tabs--white .tabs__container {
  background-color: var(--white);
}
.tabs.tabs--white.tabs--pills .tabs__nav {
  background-color: var(--white);
}
.tabs.tabs--white.tabs--pills .tabs__nav a {
  background-color: var(--background-light);
}
.tabs.tabs--white.tabs--pills .tabs__nav .active {
  background-color: var(--background-dark);
  color: var(--heading-light);
  box-shadow: none;
}
.tabs.tabs--white.tabs--pills .tabs__nav .active::after {
  border-top-color: var(--background-dark);
}
.tabs.tabs--gray {
  border-bottom: 1px solid var(--border-dark);
}
.tabs.tabs--gray .tabs__nav .active,
.tabs.tabs--gray .tabs__container {
  background-color: var(--background-light);
}
.tabs.tabs--gray .tabs__nav a {
  border: 1px solid transparent;
  border-bottom: 0;
}
.tabs.tabs--gray .tabs__nav .active {
  border: 1px solid var(--border-dark);
  border-bottom: 0;
}
.tabs.tabs--gray .tabs__nav .active::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 1px;
  background-color: var(--background-light);
  bottom: -1px;
  left: 0;
}
.tabs.tabs--gray .tabs__nav {
  border-bottom: 1px solid var(--border-dark);
}
.tabs.tabs--gray.tabs--pills {
  border: 0;
}
.tabs.tabs--gray.tabs--pills .tabs__nav a {
  border: 0;
  background-color: rgba(0, 0, 0, 0.03);
}
.tabs.tabs--gray.tabs--pills .tabs__nav {
  background-color: var(--background-light);
  border: 0;
}
.tabs.tabs--gray.tabs--pills .tabs__nav .active {
  background-color: var(--white);
  border: 0;
  box-shadow: 0 7px 13px 0 rgba(0, 0, 0, 0.07);
}
.tabs.tabs--gray.tabs--pills .tabs__nav .active::before {
  display: none;
}
.tabs.tabs--gray.tabs--pills .tabs__nav .active::after {
  border-top-color: var(--white);
}
.tabs.tabs--theme .tabs__nav .active {
  background-color: var(--theme);
  color: var(--theme-contrast);
}
.tabs.tabs--theme .tabs__container {
  background-color: var(--theme);
}
.tabs.tabs--theme.tabs--pills .tabs__nav {
  background-color: var(--theme);
}
.tabs.tabs--theme.tabs--pills .tabs__nav a {
  color: var(--theme-contrast);
  opacity: 0.8;
  background-color: rgba(255, 255, 255, 0.15);
}
.tabs.tabs--theme.tabs--pills .tabs__nav a:hover {
  opacity: 1;
}
.tabs.tabs--theme.tabs--pills .tabs__nav .active {
  background-color: var(--theme-contrast);
  color: var(--theme);
  opacity: 1;
}
.tabs.tabs--theme.tabs--pills .tabs__nav .active::after {
  border-top-color: var(--theme-contrast);
}
.tabs.tabs--theme-alt .tabs__nav .active {
  background-color: var(--theme-alt);
  color: var(--theme-alt-contrast);
}
.tabs.tabs--theme-alt .tabs__container {
  background-color: var(--theme-alt);
}
.tabs.tabs--theme-alt.tabs--pills .tabs__nav {
  background-color: var(--theme-alt);
}
.tabs.tabs--theme-alt.tabs--pills .tabs__nav a {
  color: var(--theme-alt-contrast);
  opacity: 0.8;
  background-color: rgba(255, 255, 255, 0.15);
}
.tabs.tabs--theme-alt.tabs--pills .tabs__nav a:hover {
  opacity: 1;
}
.tabs.tabs--theme-alt.tabs--pills .tabs__nav .active {
  background-color: var(--theme-alt-contrast);
  color: var(--theme-alt);
  opacity: 1;
}
.tabs.tabs--theme-alt.tabs--pills .tabs__nav .active::after {
  border-top-color: var(--theme-alt-contrast);
}
.tabs.tabs--dark .tabs__nav .active {
  background-color: var(--background-dark);
  color: var(--heading-light);
}
.tabs.tabs--dark .tabs__container {
  background-color: var(--background-light);
}
.tabs.tabs--dark.tabs--pills .tabs__nav {
  background-color: var(--background-dark);
}
.tabs.tabs--dark.tabs--pills .tabs__nav a {
  color: var(--text-light);
  opacity: 0.8;
  background-color: var(--background-dark-lighter);
}
.tabs.tabs--dark.tabs--pills .tabs__nav a:hover {
  opacity: 1;
}
.tabs.tabs--dark.tabs--pills .tabs__nav .active {
  background-color: var(--white);
  color: var(--heading-dark);
  opacity: 1;
}
.tabs.tabs--dark.tabs--pills .tabs__nav .active::after {
  border-top-color: var(--white);
}
/*======================================
  #Grid
======================================*/
.grid {
  position: relative;
  padding: 80px 0 calc(80px - var(--grid-gutter));
}
@media only screen and (max-width: 992px) {
  .grid {
    padding: 50px 0 calc(50px - var(--grid-gutter));
  }
}
@media only screen and (max-width: 768px) {
  .grid {
    padding: 30px 0 calc(30px - var(--grid-gutter));
  }
}
.grid.row--flat {
  padding: 80px 0;
}
@media only screen and (max-width: 992px) {
  .grid.row--flat {
    padding: 50px 0;
  }
}
@media only screen and (max-width: 768px) {
  .grid.row--flat {
    padding: 30px 0;
  }
}
.grid.grid--compact {
  padding: var(--grid-gutter) 0 0;
}
.grid.grid--compact.row--flat {
  padding: 0;
}
.grid.grid--compact.row--flat .container-fluid {
  padding: 0;
}
.grid-item {
  margin-bottom: var(--grid-gutter);
}
.grid-item img {
  height: auto !important;
}
.row--flat .grid-item {
  margin-bottom: 0;
}
.grid-item--boxed {
  padding: var(--grid-gutter);
  background: var(--white);
  box-shadow: 0 22px 43px -20px rgba(0, 0, 0, 0.15);
  color: var(--text-dark);
}
.grid-item--boxed h1,
.grid-item--boxed h2,
.grid-item--boxed h3,
.grid-item--boxed h4,
.grid-item--boxed h5,
.grid-item--boxed h6 {
  color: var(--heading-dark) !important;
}
.row.row--v-grow {
  align-items: unset;
}
.row.row--v-grow .grid-item {
  height: 100%;
  margin-bottom: 0;
}
.row.row--v-grow > [class*='col-'] {
  margin-bottom: var(--grid-gutter);
}
.block--open-padding .grid-item--boxed,
.white-bg .grid-item--boxed {
  border: 1px solid rgba(0, 0, 0, 0.04);
  background-color: var(--background-light);
  box-shadow: none;
}
.dark-bg .grid-item--boxed {
  background-color: var(--background-dark-lighter);
  color: var(--text-light);
}
.dark-bg .grid-item--boxed h1,
.dark-bg .grid-item--boxed h2,
.dark-bg .grid-item--boxed h3,
.dark-bg .grid-item--boxed h4,
.dark-bg .grid-item--boxed h5,
.dark-bg .grid-item--boxed h6 {
  color: var(--heading-light) !important;
}
.theme-bg .grid-item--boxed,
.theme-alt-bg .grid-item--boxed {
  background-color: rgba(255, 255, 255, 0.15);
  color: inherit;
}
.theme-bg .grid-item--boxed h1,
.theme-alt-bg .grid-item--boxed h1,
.theme-bg .grid-item--boxed h2,
.theme-alt-bg .grid-item--boxed h2,
.theme-bg .grid-item--boxed h3,
.theme-alt-bg .grid-item--boxed h3,
.theme-bg .grid-item--boxed h4,
.theme-alt-bg .grid-item--boxed h4,
.theme-bg .grid-item--boxed h5,
.theme-alt-bg .grid-item--boxed h5,
.theme-bg .grid-item--boxed h6,
.theme-alt-bg .grid-item--boxed h6 {
  color: inherit !important;
}
/*======================================
  #Grid Animation
======================================*/
.grid.animate .grid-item {
  transition: all 0.8s ease;
  opacity: 0;
  transform: scale(0.95) translateZ(0);
}
.grid.animate .row > [class*='col-']:nth-child(15) .grid-item {
  transition-delay: 2.25s;
}
.grid.animate .row > [class*='col-']:nth-child(14) .grid-item {
  transition-delay: 2.1s;
}
.grid.animate .row > [class*='col-']:nth-child(13) .grid-item {
  transition-delay: 1.95s;
}
.grid.animate .row > [class*='col-']:nth-child(12) .grid-item {
  transition-delay: 1.7999999999999998s;
}
.grid.animate .row > [class*='col-']:nth-child(11) .grid-item {
  transition-delay: 1.65s;
}
.grid.animate .row > [class*='col-']:nth-child(10) .grid-item {
  transition-delay: 1.5s;
}
.grid.animate .row > [class*='col-']:nth-child(9) .grid-item {
  transition-delay: 1.3499999999999999s;
}
.grid.animate .row > [class*='col-']:nth-child(8) .grid-item {
  transition-delay: 1.2s;
}
.grid.animate .row > [class*='col-']:nth-child(7) .grid-item {
  transition-delay: 1.05s;
}
.grid.animate .row > [class*='col-']:nth-child(6) .grid-item {
  transition-delay: 0.8999999999999999s;
}
.grid.animate .row > [class*='col-']:nth-child(5) .grid-item {
  transition-delay: 0.75s;
}
.grid.animate .row > [class*='col-']:nth-child(4) .grid-item {
  transition-delay: 0.6s;
}
.grid.animate .row > [class*='col-']:nth-child(3) .grid-item {
  transition-delay: 0.44999999999999996s;
}
.grid.animate .row > [class*='col-']:nth-child(2) .grid-item {
  transition-delay: 0.3s;
}
.grid.animate .row > [class*='col-']:nth-child(1) .grid-item {
  transition-delay: 0.15s;
}
.grid.animate.in-view .grid-item {
  opacity: 1;
  transform: scale(1);
}
.main-nav__li--big:hover .grid.animate .grid-item,
.main-nav__li--big:focus .grid.animate .grid-item,
.main-nav__li--big.touch-open .grid.animate .grid-item,
.main-nav__ul--big.mobile-open .grid.animate .grid-item {
  opacity: 1;
  transform: scale(1);
}
/*======================================
  #Grid: Header
======================================*/
.grid-item--header .button-wrap {
  margin-top: 30px;
}
.grid-item--header p:last-of-type {
  margin-bottom: 0;
}
/*======================================
  #Grid: Text
======================================*/
.grid-item--text,
.grid-item--text .row {
  height: 100%;
}
.grid-item--text p:last-of-type,
.grid-item--text .row p:last-of-type {
  margin-bottom: 0;
}
/*======================================
  #Grid: Line break
======================================*/
.line-break.line-break--divider,
.footer.footer--light .line-break.line-break--divider {
  position: relative;
}
.line-break.line-break--divider::after,
.footer.footer--light .line-break.line-break--divider::after {
  content: "";
  position: absolute;
  left: 0;
  top: 50%;
  width: 100%;
  height: 1px;
  background-color: var(--border-dark);
}
.light-color .line-break.line-break--divider::after,
.footer .line-break.line-break--divider::after {
  background-color: var(--border-light);
}
/*======================================
  #Grid: Image
======================================*/
.grid-item--image {
  overflow: hidden;
}
.grid-item--image img {
  display: block;
  margin: 0 auto;
}
/*======================================
  #Grid: Video
======================================*/
.grid-item--video video {
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.grid-item--video.video-shadow video,
.grid-item--video.video-shadow iframe,
.grid-item--video.video-shadow embed {
  box-shadow: 0 35px 80px -35px rgba(0, 0, 0, 0.3);
}
/*======================================
  #Grid: Quote
======================================*/
.grid-item--quote blockquote {
  max-width: 100%;
  margin: 2em 0 0;
}
.grid-item--quote blockquote footer {
  margin-top: 0.8em;
  font-weight: var(--font-weight-bold);
  font-size: 0.875rem;
  display: flex;
  align-items: center;
  justify-content: center;
}
.grid-item--quote blockquote footer img {
  margin-right: 1em;
  max-width: 45px;
  max-height: 45px;
  border-radius: 50%;
}
.grid-item--quote blockquote footer img + div {
  text-align: left;
}
.grid-item--quote blockquote footer div div {
  font-weight: var(--font-weight-normal);
  font-size: 0.75rem;
}
.light-color .grid-item--quote blockquote footer {
  color: rgba(255, 255, 255, 0.6);
  color: var(--text-light);
}
/*======================================
  #Grid: Card
======================================*/
.card {
  position: relative;
  overflow: hidden;
}
.card.dark-color {
  color: var(--text-dark);
}
.card.dark-color .act-heading {
  color: var(--heading-dark);
}
.card.light-color {
  color: var(--text-light);
}
.card.light-color .act-heading {
  color: var(--heading-light);
}
.card span {
  display: block;
  width: 100%;
}
.card .card__text {
  display: block;
  height: 100%;
  width: 100%;
  z-index: 5;
  padding: var(--grid-gutter);
  display: flex;
  color: inherit;
  position: relative;
  transition: none;
}
.card .card__text.v-align-top {
  align-items: flex-start;
}
.card .card__text.v-align-center {
  align-items: center;
}
.card .card__text.v-align-bottom {
  align-items: flex-end;
}
.card .card__text.text-left {
  justify-content: flex-start;
}
.card .card__text.text-center {
  justify-content: center;
}
.card .card__text.text-right {
  justify-content: flex-end;
}
.card .card__text .card__text-inner {
  max-width: 700px;
}
.card .card__text .card__header {
  font-size: 1.5rem;
  line-height: 1.2;
  margin-bottom: 0.3em;
}
.card .card__text.card__text--small {
  font-size: 0.875rem;
}
.card .card__text.card__text--small .card__header {
  font-size: 1.125rem;
}
.card .card__text.card__text--big {
  font-size: 1.25rem;
}
.card .card__text.card__text--big .card__header {
  font-size: 2.375rem;
}
.card .card__text.card__text--xl {
  font-size: 1.25rem;
}
.card .card__text.card__text--xl .card__header {
  font-size: 4.25rem;
}
@media only screen and (max-width: 768px) {
  .card .card__text.card__text--big .card__header {
    font-size: 2rem;
  }
  .card .card__text.card__text--xl .card__header {
    font-size: 2.5rem;
  }
}
.card .card__text .card__button {
  margin-top: 1rem;
  display: inline-flex;
  flex-flow: row wrap;
  align-items: center;
}
.card .card__text .card__button .button {
  margin: 5px 10px 5px 0;
}
.card .card__text.text-center .card__button {
  justify-content: center;
}
.card .card__text.text-center .card__button .button {
  margin: 5px;
}
.card .card__text.text-right .card__button {
  justify-content: flex-end;
}
.card .card__text.text-right .card__button .button {
  margin: 5px 0 5px 10px;
}
.card .card__bg,
.card .card__overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}
.card .card__overlay {
  z-index: 3;
  background-color: var(--white);
}
.card.light-color .card__overlay {
  background-color: var(--black);
}
.card .card__bg {
  z-index: 1;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  transition: transform 1s ease;
  transform: translateZ(0);
}
.card a:hover + .card__bg,
.card a:focus + .card__bg {
  transform: scale(1.05);
}
.card a:focus .card__header {
  text-decoration: underline;
}
.row--flat .card.card--25 .card__text {
  min-height: 25vh;
}
.row--flat .card.card--30 .card__text {
  min-height: 30vh;
}
.row--flat .card.card--35 .card__text {
  min-height: 35vh;
}
.row--flat .card.card--40 .card__text {
  min-height: 40vh;
}
.row--flat .card.card--45 .card__text {
  min-height: 45vh;
}
.row--flat .card.card--50 .card__text {
  min-height: 50vh;
}
.row--flat .card.card--55 .card__text {
  min-height: 55vh;
}
.row--flat .card.card--60 .card__text {
  min-height: 60vh;
}
.row--flat .card.card--65 .card__text {
  min-height: 65vh;
}
.row--flat .card.card--70 .card__text {
  min-height: 70vh;
}
.row--flat .card.card--75 .card__text {
  min-height: 75vh;
}
.row--flat .card.card--80 .card__text {
  min-height: 80vh;
}
.row--flat .card.card--85 .card__text {
  min-height: 85vh;
}
.row--flat .card.card--90 .card__text {
  min-height: 90vh;
}
.row--flat .card.card--95 .card__text {
  min-height: 95vh;
}
.row--flat .card.card--100 .card__text {
  min-height: 100vh;
}
.card.card--25 .card__text {
  min-height: calc(25vh - var(--grid-gutter));
}
.card.card--30 .card__text {
  min-height: calc(30vh - var(--grid-gutter));
}
.card.card--35 .card__text {
  min-height: calc(35vh - var(--grid-gutter));
}
.card.card--40 .card__text {
  min-height: calc(40vh - var(--grid-gutter));
}
.card.card--45 .card__text {
  min-height: calc(45vh - var(--grid-gutter));
}
.card.card--50 .card__text {
  min-height: calc(50vh - var(--grid-gutter));
}
.card.card--55 .card__text {
  min-height: calc(55vh - var(--grid-gutter));
}
.card.card--60 .card__text {
  min-height: calc(60vh - var(--grid-gutter));
}
.card.card--65 .card__text {
  min-height: calc(65vh - var(--grid-gutter));
}
.card.card--70 .card__text {
  min-height: calc(70vh - var(--grid-gutter));
}
.card.card--75 .card__text {
  min-height: calc(75vh - var(--grid-gutter));
}
.card.card--80 .card__text {
  min-height: calc(80vh - var(--grid-gutter));
}
.card.card--85 .card__text {
  min-height: calc(85vh - var(--grid-gutter));
}
.card.card--90 .card__text {
  min-height: calc(90vh - var(--grid-gutter));
}
.card.card--95 .card__text {
  min-height: calc(95vh - var(--grid-gutter));
}
.card.card--100 .card__text {
  min-height: calc(100vh - var(--grid-gutter));
}
/*======================================
  #Grid: Pod
======================================*/
.pod .pod__image {
  overflow: hidden;
}
.pod .pod__image img {
  display: block;
}
.pod .pod__image i {
  font-size: 3rem;
  line-height: 1;
}
.pod.text-center .pod__image img {
  margin: 0 auto;
}
.pod .pod__text {
  margin-top: 1em;
  font-size: 1rem;
}
.pod .pod__text p {
  margin-bottom: 1.5em;
}
.pod .pod__text p:last-of-type {
  margin-bottom: 0!important;
}
.pod .button-wrap {
  margin-top: 1em;
}
.pod.grid-item--boxed {
  padding: 0;
}
.pod.grid-item--boxed .pod__text {
  margin: 0;
  padding: var(--grid-gutter);
}
.pod.grid-item--boxed .pod__image i {
  margin-top: var(--grid-gutter);
  padding: 0 var(--grid-gutter);
}
.pod.pod--compact {
  position: relative;
  padding-left: 3.75em;
}
.pod.pod--compact.text-center {
  padding: 0;
  display: flex;
  justify-content: center;
}
.pod.pod--compact.text-center article {
  position: relative;
  text-align: left;
  padding-left: 3.75em;
}
.pod.pod--compact.text-center article p {
  margin-bottom: 0.7em;
}
.pod.pod--compact .pod__text {
  margin-top: 0;
  font-size: 0.875rem;
}
.pod.pod--compact .pod__text h5,
.pod.pod--compact .pod__text .h5 {
  font-size: 1rem;
  margin-bottom: 0;
}
.pod.pod--compact .button-wrap {
  margin-top: 0.5em;
}
.pod.pod--compact .pod__image {
  position: absolute;
  top: 0;
  left: 0;
  width: 50px;
  text-align: center;
}
.pod.pod--compact .pod__image i {
  font-size: 1.875rem;
  margin: 0;
  padding: 0;
}
.pod.pod--compact.grid-item--boxed .pod__image {
  top: var(--grid-gutter);
  left: var(--grid-gutter);
}
/*======================================
  #Grid: Accordion
======================================*/
.acc {
  transition: all 0.3s ease;
  border-bottom: 1px solid var(--border-dark);
  font-size: 1rem;
}
.acc:first-child {
  border-top: 1px solid var(--border-dark);
}
.acc .acc__head {
  padding: 1.25em 2.185em 1.25em 1.25em;
  cursor: pointer;
  font-weight: var(--font-weight-bold);
  position: relative;
  width: 100%;
  text-align: left;
}
.acc .acc__head i {
  position: absolute;
  right: 1.66em;
  top: 50%;
  transform: translateY(-50%);
  font-size: 0.75em;
  opacity: 0.5;
  transition: all 0.3s ease;
}
.acc .acc__head:hover i {
  opacity: 1;
}
.acc .acc__head:focus {
  text-decoration: underline;
  outline: none;
}
.acc .acc__head:focus i {
  opacity: 1;
}
.acc .acc__body {
  display: none;
  padding: 0 1.25em 1.25em;
}
.acc .acc__body p:last-of-type {
  margin-bottom: 0;
}
.acc.acc--open .acc__head i {
  transform: rotate(180deg) translateY(50%);
}
.acc.acc--open .acc__body {
  display: block;
}
.grid-item--acc.grid-item--boxed {
  padding: 0;
  background: transparent!important;
  box-shadow: none;
  border: 0;
}
.grid-item--acc.grid-item--boxed .acc {
  margin-bottom: 1em;
  background: var(--white);
  box-shadow: 0 15px 32px -20px rgba(0, 0, 0, 0.15);
  border: 0;
}
.grid-item--acc.grid-item--boxed .acc:hover {
  box-shadow: 0 10px 24px -15px rgba(0, 0, 0, 0.15);
}
.grid-item--boxed .acc {
  color: var(--text-dark);
}
.grid-item--boxed .acc h1,
.grid-item--boxed .acc h2,
.grid-item--boxed .acc h3,
.grid-item--boxed .acc h4,
.grid-item--boxed .acc h5,
.grid-item--boxed .acc h6 {
  color: var(--heading-dark) !important;
}
.white-bg .grid-item--acc.grid-item--boxed .acc {
  border: 1px solid rgba(0, 0, 0, 0.04);
  background-color: var(--background-light);
  box-shadow: none;
}
.light-color .acc {
  border-color: var(--border-light);
}
.dark-bg .grid-item--boxed .acc {
  background-color: var(--background-dark-lighter);
  color: var(--text-light);
}
.dark-bg .grid-item--boxed .acc h1,
.dark-bg .grid-item--boxed .acc h2,
.dark-bg .grid-item--boxed .acc h3,
.dark-bg .grid-item--boxed .acc h4,
.dark-bg .grid-item--boxed .acc h5,
.dark-bg .grid-item--boxed .acc h6 {
  color: var(--heading-light) !important;
}
.theme-bg .grid-item--boxed .acc,
.theme-alt-bg .grid-item--boxed .acc {
  background-color: rgba(255, 255, 255, 0.15);
  color: inherit;
}
.theme-bg .grid-item--boxed .acc h1,
.theme-alt-bg .grid-item--boxed .acc h1,
.theme-bg .grid-item--boxed .acc h2,
.theme-alt-bg .grid-item--boxed .acc h2,
.theme-bg .grid-item--boxed .acc h3,
.theme-alt-bg .grid-item--boxed .acc h3,
.theme-bg .grid-item--boxed .acc h4,
.theme-alt-bg .grid-item--boxed .acc h4,
.theme-bg .grid-item--boxed .acc h5,
.theme-alt-bg .grid-item--boxed .acc h5,
.theme-bg .grid-item--boxed .acc h6,
.theme-alt-bg .grid-item--boxed .acc h6 {
  color: inherit !important;
}
/*======================================
  #Grid: Price list
======================================*/
.grid-item--price-list legend {
  margin-bottom: 0;
}
.grid-item--price-list article {
  border-bottom: 1px solid var(--border-dark);
  padding: 1.2em 0.9em;
}
.grid-item--price-list article:last-child {
  border: 0;
}
.grid-item--price-list article .menu-info h5 {
  margin-bottom: 0;
}
.grid-item--price-list article .menu-info p {
  font-size: 0.875rem;
  margin-bottom: 0;
}
.grid-item--price-list article .menu-price {
  text-align: right;
  font-weight: var(--font-weight-bold);
}
@media only screen and (max-width: 768px) {
  .grid-item--price-list {
    padding: 0;
  }
}
.light-color .grid-item--price-list article {
  border-color: var(--border-light);
}
.light-color .grid-item--price-list article .menu-info p {
  color: var(--text-light);
}
/*======================================
  #Grid: Price table
======================================*/
.grid-item--price-table {
  padding: var(--grid-gutter);
}
.price-table__image {
  margin-bottom: 1.25em;
}
.price-table__image img {
  display: block;
}
.price-table__heading {
  font-size: 1rem;
  margin-bottom: 0;
}
.price-table__price {
  font-size: 3.5rem;
  font-weight: var(--font-weight-bolder);
}
.price-table__price span {
  font-size: 0.25em;
  opacity: 0.5;
}
.price-table__features {
  margin-bottom: 1.25em;
  font-size: 1rem;
}
.price-table__features ul {
  list-style: none;
  padding: 0;
  margin: 0;
}
.price-table__features ul li {
  position: relative;
  padding-left: 1.7em;
}
.price-table__features ul li > i {
  position: absolute;
  left: 0;
  top: 0.3em;
}
.price-table__disclaimer {
  opacity: 0.5;
  font-size: 0.75rem;
  margin-top: 1em;
  font-weight: var(--font-weight-bold);
}
.text-center.price-table .price-table__features ul li {
  padding-left: 0;
}
.text-center.price-table .price-table__features ul li > i {
  position: static;
  padding-right: 0.2em;
}
/*======================================
  #Grid: Navigation
======================================*/
.navigation-link-heading a {
  color: inherit;
}
.navigation-link-heading a:hover {
  text-decoration: underline;
}
.navigation {
  text-align: left;
}
.navigation ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}
.navigation ul li > div {
  display: flex;
  align-items: center;
}
.navigation ul li a {
  flex-grow: 1;
  display: block;
  font-size: 0.875rem;
  padding: 10px 0;
  line-height: 1.1em;
  font-weight: var(--font-weight-bold);
  color: inherit;
  position: relative;
}
.navigation ul li a:focus,
.navigation ul li a:hover {
  outline: none;
  text-decoration: underline;
}
.navigation ul li button {
  margin-right: 10px;
  width: 20px;
  min-width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.05);
  position: relative;
  transition: all 0.25s ease;
}
.navigation ul li button::before,
.navigation ul li button::after {
  content: "";
  width: 10px;
  height: 2px;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transition: all 0.25s ease;
}
.navigation ul li button::before {
  transform: translate(-50%, -50%) rotate(90deg);
}
.navigation ul li button.open {
  transform: rotate(180deg);
}
.navigation ul li button.open::before {
  opacity: 0;
}
.navigation ul li button:focus,
.navigation ul li button:hover {
  background: var(--background-dark);
  outline: none;
}
.navigation ul li button:focus::before,
.navigation ul li button:hover::before,
.navigation ul li button:focus::after,
.navigation ul li button:hover::after {
  background-color: var(--white);
}
.navigation ul ul {
  display: none;
  padding-left: 13px;
  border-left: 2px solid rgba(0, 0, 0, 0.05);
}
.navigation li.open > ul {
  display: block;
}
.navigation li.selected > div a {
  color: var(--theme);
}
.navigation button::before,
.navigation button::after {
  background-color: var(--background-dark);
}
.theme-bg .navigation li.selected > div a {
  color: var(--theme-contrast);
}
.theme-alt-bg .navigation li.selected > div a {
  color: var(--theme-alt-contrast);
}
.light-color .navigation button {
  background-color: var(--border-light);
}
.light-color .navigation button::before,
.light-color .navigation button::after {
  background-color: var(--white);
}
.light-color .navigation button:focus,
.light-color .navigation button:hover {
  background: var(--white);
}
.light-color .navigation button:focus::before,
.light-color .navigation button:hover::before,
.light-color .navigation button:focus::after,
.light-color .navigation button:hover::after {
  background-color: var(--background-dark);
}
.light-color .navigation ul ul {
  border-left: 2px solid var(--border-light);
}
/*======================================
  #Textblock
======================================*/
.block-text.block-text--sidebar .row {
  justify-content: space-between;
}
.block-text img {
  height: auto!important;
}
/*======================================
  #Textblock Sidebar
======================================*/
.block-text__aside {
  font-size: 0.875rem;
}
@media only screen and (max-width: 768px) {
  .block-text__aside {
    margin-top: 2em;
    padding-top: 2em;
  }
}
.block-text__aside .block-text__aside-item {
  margin-bottom: var(--grid-gutter);
}
.block-text__aside .block-text__aside-item p:last-of-type,
.block-text__aside .block-text__aside-item ul.last-of-type {
  margin-bottom: 0;
}
.block-text__aside .block-text__aside-item.block-text__aside-item--boxed {
  padding: var(--grid-gutter);
  background-color: var(--background-light);
  border: 1px solid rgba(0, 0, 0, 0.04);
}
.block-text__aside-inner--sticky {
  position: sticky;
  top: calc(var(--header-height) + var(--grid-gutter));
}
.gray-bg .block-text__aside .block-text__aside-item--boxed {
  background-color: var(--white);
  border: 0;
  box-shadow: 0 22px 43px -20px rgba(0, 0, 0, 0.15);
}
.dark-bg .block-text__aside .block-text__aside-item--boxed {
  background-color: var(--background-dark-lighter);
  border: 0;
}
.theme-bg .block-text__aside .block-text__aside-item--boxed,
theme-alt-bg .block-text__aside .block-text__aside-item--boxed {
  background-color: rgba(255, 255, 255, 0.15);
  border: 0;
}
/*======================================
  #Logos
======================================*/
.logos {
  text-align: center;
}
.logos .block__header + .block__body {
  margin-top: 20px;
}
ul.logos {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: row wrap;
}
ul.logos.black-and-white img {
  filter: grayscale(100%);
}
ul.logos.black-and-white a img {
  transition: all 0.3s ease;
}
ul.logos.black-and-white a:hover img {
  filter: grayscale(0%);
}
ul.logos li {
  padding: 20px;
}
ul.logos li img {
  width: 100%;
}
@media only screen and (max-width: 768px) {
  ul.logos {
    margin: -10px 0 0;
  }
  ul.logos li {
    padding: 10px;
  }
}
/*======================================
  #Breadcrumbs
======================================*/
ul.breadcrumbs {
  list-style: none;
  padding: 0;
  margin: 0 0 0.6em;
  font-size: 0.875rem;
  font-weight: bold;
  display: flex;
  flex-wrap: wrap;
}
ul.breadcrumbs--center {
  justify-content: center;
}
ul.breadcrumbs li {
  font-size: 0.75rem;
}
ul.breadcrumbs li::before {
  content: "/";
  padding: 0 0.7em;
  opacity: 0.4;
}
ul.breadcrumbs li:first-child::before {
  display: none;
}
ul.breadcrumbs li a {
  color: inherit;
  transition: none;
}
ul.breadcrumbs li a:hover,
ul.breadcrumbs li a:focus {
  text-decoration: underline;
}
.breadcrumbs-block {
  padding: 15px 0;
}
.breadcrumbs-block ul.breadcrumbs {
  margin-bottom: 0;
}
/*======================================
  #Account Form
======================================*/
.account-form {
  min-height: 100vh;
  display: flex;
}
.account-form .account-form__inner {
  min-width: 40%;
  flex-grow: 1;
  align-items: center;
  padding: 100px 5%;
  display: flex;
  justify-content: center;
}
.account-form .account-form__content {
  width: 100%;
  max-width: 450px;
}
.account-form .account-form__media {
  flex-grow: 1;
  width: 60%;
  background-position: center;
  background-size: cover;
}
.password-input {
  position: relative;
}
.password-input .password-input__hide,
.password-input .password-input__show {
  cursor: pointer;
  font-size: 0.75rem;
  font-weight: bold;
  position: absolute;
  right: 0;
  top: 0;
  opacity: 0.7;
}
.password-input .password-input__hide:hover,
.password-input .password-input__show:hover {
  opacity: 1;
}
.people-wrap .person {
  margin-bottom: 0;
  height: 100%;
}
.people-wrap > [class*='col-'] {
  margin-bottom: var(--grid-gutter);
}
.grid-item .person {
  margin-bottom: 0;
}
.person {
  font-size: 1rem;
  margin-bottom: var(--grid-gutter);
}
.person__image img {
  display: block;
}
.person__image--circle {
  padding: var(--grid-gutter);
  padding-bottom: 0;
}
.person__image--circle img {
  border-radius: 50%;
}
.person--boxed .person__image--circle {
  padding-bottom: 0;
}
.person__text {
  padding-top: 1em;
}
.person p {
  margin-bottom: 0.7em;
}
.person .section-head {
  margin: 0.5em 0 1em;
}
.person .social-nav {
  display: inline-flex;
}
.person .contact-list {
  margin-bottom: 1em;
}
.person .contact-list li {
  margin-bottom: 0;
}
.person .contact-list li a {
  color: inherit;
  font-weight: bold;
}
.person .contact-list li a:hover {
  color: var(--theme);
}
.person--boxed {
  box-shadow: 0 22px 43px -20px rgba(0, 0, 0, 0.15);
}
.person--boxed .person__text {
  padding: var(--grid-gutter);
}
.white-bg .person--boxed {
  border: 1px solid rgba(0, 0, 0, 0.04);
  box-shadow: none;
  background-color: var(--background-light);
}
.gray-bg .person--boxed {
  background: var(--white);
}
.dark-bg .person--boxed {
  background-color: var(--background-dark-lighter);
}
.theme-bg .person--boxed,
.theme-alt-bg .person--boxed {
  background-color: rgba(255, 255, 255, 0.15);
}
/*======================================
  #Section Nav
======================================*/
.white-bg + .section-nav--white,
.white-bg + .section-nav--gray,
.white-bg + .section-nav--theme,
.white-bg + .section-nav--theme-alt {
  border-top: 1px solid var(--border-dark);
}
.section-nav {
  position: relative;
  border-bottom: 1px solid var(--border-dark);
  --grid-gutter-double: calc(var(--grid-gutter) * 2);
}
.section-nav--standard ul {
  max-width: calc(var(--grid-width) - var(--grid-gutter-double));
}
.section-nav--small ul {
  max-width: calc(var(--grid-width-small) - var(--grid-gutter-double));
}
.section-nav--big ul {
  max-width: calc(var(--grid-width-big) - var(--grid-gutter-double));
}
.section-nav ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  margin: 0 auto;
}
.section-nav ul li {
  flex: 1 1 0;
}
.section-nav ul a {
  display: block;
  text-align: center;
  padding: 20px 10px;
  border-right: 1px solid var(--border-dark);
  font-size: 0.875rem;
  line-height: 1.3;
  font-weight: bold;
  position: relative;
  color: var(--heading-dark);
  height: 100%;
  min-height: 92px;
  transition: none;
}
@media only screen and (max-width: 992px) {
  .section-nav ul a {
    line-height: 1.1;
    font-size: 0.75rem;
    min-height: 50px;
  }
}
.section-nav ul a i {
  display: block;
  font-size: 1.4rem;
  margin-bottom: 0.3em;
}
.section-nav ul a:hover {
  background-color: rgba(0, 0, 0, 0.02);
}
.section-nav ul a.active i {
  color: var(--theme);
}
.section-nav ul a.active::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: -1px;
  height: 1px;
  width: 100%;
}
@media only screen and (max-width: 768px) {
  .section-nav ul {
    overflow-x: auto;
    overflow-y: hidden;
    justify-content: flex-start;
  }
  .section-nav ul li {
    min-width: auto;
    width: auto;
  }
  .section-nav ul a {
    padding: 15px 20px;
    min-width: 100px;
  }
}
.section-nav ul li:first-child a {
  border-left: 1px solid var(--border-dark);
}
.section-nav--white {
  background-color: var(--background-light);
}
.section-nav--white a.active {
  background-color: white;
}
.section-nav--white a.active::after,
.section-nav--white a.active:hover {
  background-color: white;
}
.section-nav--gray {
  background-color: white;
}
.section-nav--gray a.active {
  background-color: var(--background-light);
}
.section-nav--gray a.active::after,
.section-nav--gray a.active:hover {
  background-color: var(--background-light);
}
.section-nav--dark {
  background-color: var(--background-dark-lighter);
  border-bottom-color: var(--border-light);
}
.section-nav--dark ul a {
  color: rgba(255, 255, 255, 0.7);
  border-right-color: var(--border-light);
}
.section-nav--dark ul a:hover {
  background-color: rgba(255, 255, 255, 0.01);
}
.section-nav--dark a.active {
  background-color: var(--background-dark);
  color: var(--text-light);
}
.section-nav--dark a.active::after,
.section-nav--dark a.active:hover {
  background-color: var(--background-dark);
}
.section-nav--dark ul li:first-child a {
  border-left-color: var(--border-light);
}
.section-nav--theme a.active {
  background-color: var(--theme);
  color: var(--theme-contrast);
}
.section-nav--theme a.active i {
  color: var(--theme-contrast) !important;
}
.section-nav--theme a.active::after,
.section-nav--theme a.active:hover {
  background-color: var(--theme);
}
.section-nav--theme-alt a.active {
  background-color: var(--theme-alt);
  color: var(--theme-alt-contrast);
}
.section-nav--theme-alt a.active i {
  color: var(--theme-alt-contrast) !important;
}
.section-nav--theme-alt a.active::after,
.section-nav--theme-alt a.active:hover {
  background-color: var(--theme-alt);
}
/*======================================
  #Search
======================================*/
.search {
  height: var(--header-height);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background-color: var(--white);
  z-index: 999;
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s ease;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.05);
}
.pre-top-visible .search {
  top: 30px;
}
@media only screen and (max-width: 992px) {
  .pre-top-visible .search {
    top: 0;
  }
}
.pre-top-visible.scroll .search {
  top: 0;
}
.search__close {
  position: absolute;
  top: 50%;
  right: 30px;
  width: 2.5em;
  height: 2.5em;
  margin-top: -1.25em;
  border-radius: 100%;
  background-color: rgba(0, 0, 0, 0.05);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.25rem;
  transition: all 0.3s ease;
  opacity: 0;
  visibility: hidden;
  transform: scale(0.8) rotate(90deg);
  z-index: 10;
}
@media only screen and (max-width: 992px) {
  .search__close {
    font-size: 1.1rem;
    right: 20px;
  }
}
.search__stage {
  max-width: 600px;
  margin: 0 auto;
}
.search__form {
  display: flex;
  transition: all 0.3s ease;
  opacity: 0;
  transform: scale(0.9) translateX(50px);
  position: relative;
}
.search__form > .fa-search {
  position: absolute;
  top: 50%;
  left: 23px;
  opacity: 0.3;
  font-size: 1.125rem;
  line-height: 1;
  z-index: 1;
  transform: translateY(-50%);
}
.search__form .search__input {
  height: var(--header-height);
  margin-bottom: 0;
  font-size: 1.125rem;
  padding-left: 55px;
  box-shadow: none!important;
  border: 0!important;
  background-color: transparent!important;
}
.search__form .search__input:required:valid {
  box-shadow: none!important;
}
@media only screen and (max-width: 992px) {
  .search__form .search__input {
    font-size: 16px;
  }
}
.search__form .search__button {
  position: absolute;
  top: 10px;
  right: 10px;
  bottom: 10px;
  padding: 0;
  width: 60px;
  border-radius: 4px;
  overflow: hidden;
  transition: all 0.3s ease;
  color: var(--theme);
}
.search__form .search__button:hover {
  color: var(--theme-contrast);
  background-color: var(--theme);
}
.search__form .search__button[disabled] {
  width: 0;
}
.search__form .search__loader {
  position: absolute!important;
  right: 15px;
  top: 0;
  height: 100%;
  width: 40px;
}
@media only screen and (max-width: 768px) {
  .search__form .search__loader {
    right: 60px;
    transform: scale(0.7);
  }
}
.search-overlay {
  background-color: var(--black);
  opacity: 0;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 998;
  transition: all 0.3s ease;
  cursor: pointer;
  visibility: hidden;
}
@media only screen and (max-width: 992px) {
  .search-visible {
    overflow: hidden;
  }
}
.search-visible .search {
  visibility: visible;
  opacity: 1;
}
.search-visible .search__close {
  opacity: 1;
  visibility: visible;
  transform: scale(1) rotate(0);
  transition-delay: 0.5s;
}
.search-visible .search__form {
  opacity: 1;
  transition-delay: 0.3s;
  transform: scale(1) translateX(0);
}
.search-visible .search-overlay {
  opacity: 0.3;
  visibility: visible;
  transition-duration: 0.6s;
}
/*======================================
  #Search Autocomplete
======================================*/
.search__suggest {
  list-style: none;
  margin: 0;
  padding: 0;
}
.search__suggest li a {
  padding: 10px;
  border-top: 1px solid rgba(0, 0, 0, 0.05);
  display: flex;
}
.search__suggest li a .search__suggest-desc {
  flex-grow: 1;
  font-size: 0.75rem;
  display: block;
  color: #444;
}
.search__suggest li a .search__suggest-title {
  font-size: 0.875rem;
  display: block;
  font-weight: var(--font-weight-bold);
}
.search__suggest li a:hover {
  background-color: rgba(0, 0, 0, 0.03);
}
.search__suggest li:first-child a {
  border-top: 0;
}
.search__autocomplete {
  position: absolute;
  top: 100%;
  background-color: var(--white);
  padding: 15px;
  border-radius: 0 0 4px 4px;
  width: 100%;
  max-width: 600px;
  transition: all 0.3s ease;
  opacity: 0;
  transform: translateY(20px);
  box-shadow: 0 10px 24px rgba(0, 0, 0, 0.15);
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}
.search__autocomplete > .button {
  margin-top: 15px;
}
.search-visible .search__autocomplete {
  opacity: 1;
  transition-delay: 0.3s;
  transform: translateY(0);
}
.search__no-results {
  font-weight: var(--font-weight-bold);
  opacity: 0.4;
  text-align: center;
  margin: 20px 0 10px;
}
/*======================================
  #Search Block
======================================*/
.search-block {
  overflow: hidden;
  position: relative;
  padding: 60px 0 50px!important;
}
.search-result-info {
  padding: 0 2em;
  text-align: center;
  font-size: 0.875rem;
  margin-top: 1.7em;
}
.search-block .search__form {
  visibility: visible;
  opacity: 1;
  transform: none;
  position: relative;
  z-index: 2;
  background-color: white;
}
.search-block .search__form input {
  box-shadow: 0 8px 20px -6px rgba(0, 0, 0, 0.1) !important;
}
/*======================================
  #Search Results
======================================*/
.search-result {
  background-color: var(--white);
  padding: 40px;
  box-shadow: 0 22px 43px -20px rgba(0, 0, 0, 0.1);
  transition: box-shadow 0.3s ease;
  margin-bottom: 10px;
}
.search-result:hover {
  box-shadow: 0 12px 23px -15px rgba(0, 0, 0, 0.1);
}
.search-result p:last-of-type {
  margin-bottom: 0;
}
@media only screen and (max-width: 768px) {
  .search-result {
    padding: 20px;
  }
}
/*======================================
  #Search - No Results
======================================*/
.search-empty {
  width: 100%;
  padding: 2em 20px;
  text-align: center;
  opacity: 0.4;
}
.search-empty > i {
  font-size: 3.75rem;
  display: block;
  line-height: 1;
  margin-bottom: 20px;
}
/*======================================
  #Cookie Concent
======================================*/
.cookie-consent {
  position: fixed;
  z-index: 4000;
  padding: 25px;
  width: 380px;
  background-color: var(--white);
  font-size: 0.95rem;
  border-radius: 4px;
}
.cookie-consent .cookie-consent__text {
  margin-bottom: 15px;
}
.cookie-consent .cookie-consent__link {
  margin-top: 5px;
  display: block;
  font-weight: var(--font-weight-bold);
}
.cookie-consent .cookie-consent__link a {
  color: inherit;
  text-decoration: underline;
}
.cookie-consent.cookie-consent--float-left {
  left: 20px;
}
.cookie-consent.cookie-consent--float-right {
  right: 20px;
}
.cookie-consent.cookie-consent--float-right,
.cookie-consent.cookie-consent--float-left {
  bottom: 20px;
}
.cookie-consent.cookie-consent--float-right .button,
.cookie-consent.cookie-consent--float-left .button {
  width: 100%;
  text-align: center;
}
.cookie-consent.cookie-consent--banner-bottom {
  left: 0;
  bottom: 0;
  width: 100%;
  padding: 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-radius: 0;
}
.cookie-consent.cookie-consent--banner-bottom .cookie-consent__text {
  margin: 0;
  padding-right: 20px;
}
.cookie-consent.cookie-consent--banner-bottom .cookie-consent__link {
  display: inline;
}
.cookie-consent.cookie-consent--banner-bottom .button {
  white-space: nowrap;
}
.cookie-consent--white {
  box-shadow: 0 22px 43px -20px rgba(0, 0, 0, 0.15);
}
.cookie-consent--dark {
  background-color: var(--background-dark);
  color: var(--text-light);
}
@media only screen and (max-width: 768px) {
  .cookie-consent {
    font-size: 1rem;
    padding: 15px !important;
    width: 100%!important;
    left: 0!important;
    right: auto!important;
    bottom: 0!important;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-radius: 0;
  }
  .cookie-consent .cookie-consent__text {
    margin: 0;
    padding-right: 20px;
  }
  .cookie-consent .cookie-consent__link {
    display: inline;
  }
  .cookie-consent .button {
    white-space: nowrap;
    width: auto!important;
  }
}
]]></Content>
      <Properties />
    </Stylesheet>
    <Stylesheet>
      <Name>font-awesome</Name>
      <FileName>lib/font-awesome.css</FileName>
      <Content><![CDATA[@font-face {
  font-family: 'FontAwesome';
  font-display: swap;
  src: url('/ig-assets/fonts/fontawesome-webfont.eot?v=4.7.0');
  src: url('/ig-assets/fonts/fontawesome-webfont.eot?#iefix&v=4.7.0') format('embedded-opentype'),
  url('/ig-assets/fonts/fontawesome-webfont.woff2?v=4.7.0') format('woff2'),
  url('/ig-assets/fonts/fontawesome-webfont.woff?v=4.7.0') format('woff'),
  url('/ig-assets/fonts/fontawesome-webfont.ttf?v=4.7.0') format('truetype'),
  url('/ig-assets/fonts/fontawesome-webfont.svg?v=4.7.0#fontawesomeregular') format('svg');
  font-weight: normal;
  font-style: normal;
}
.fa {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
/* makes the font 33% larger relative to the icon container */
.fa-lg {
  font-size: 1.33333333em;
  line-height: 0.75em;
  vertical-align: -15%;
}
.fa-2x {
  font-size: 2em;
}
.fa-3x {
  font-size: 3em;
}
.fa-4x {
  font-size: 4em;
}
.fa-5x {
  font-size: 5em;
}
.fa-fw {
  width: 1.28571429em;
  text-align: center;
}
.fa-ul {
  padding-left: 0;
  margin-left: 2.14285714em;
  list-style-type: none;
}
.fa-ul > li {
  position: relative;
}
.fa-li {
  position: absolute;
  left: -2.14285714em;
  width: 2.14285714em;
  top: 0.14285714em;
  text-align: center;
}
.fa-li.fa-lg {
  left: -1.85714286em;
}
.fa-border {
  padding: .2em .25em .15em;
  border: solid 0.08em #eeeeee;
  border-radius: .1em;
}
.fa-pull-left {
  float: left;
}
.fa-pull-right {
  float: right;
}
.fa.fa-pull-left {
  margin-right: .3em;
}
.fa.fa-pull-right {
  margin-left: .3em;
}
/* Deprecated as of 4.4.0 */
.pull-right {
  float: right;
}
.pull-left {
  float: left;
}
.fa.pull-left {
  margin-right: .3em;
}
.fa.pull-right {
  margin-left: .3em;
}
.fa-spin {
  -webkit-animation: fa-spin 2s infinite linear;
  animation: fa-spin 2s infinite linear;
}
.fa-pulse {
  -webkit-animation: fa-spin 1s infinite steps(8);
  animation: fa-spin 1s infinite steps(8);
}
@-webkit-keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}
@keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}
.fa-rotate-90 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
}
.fa-rotate-180 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}
.fa-rotate-270 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";
  -webkit-transform: rotate(270deg);
  -ms-transform: rotate(270deg);
  transform: rotate(270deg);
}
.fa-flip-horizontal {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";
  -webkit-transform: scale(-1, 1);
  -ms-transform: scale(-1, 1);
  transform: scale(-1, 1);
}
.fa-flip-vertical {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";
  -webkit-transform: scale(1, -1);
  -ms-transform: scale(1, -1);
  transform: scale(1, -1);
}
:root .fa-rotate-90,
:root .fa-rotate-180,
:root .fa-rotate-270,
:root .fa-flip-horizontal,
:root .fa-flip-vertical {
  filter: none;
}
.fa-stack {
  position: relative;
  display: inline-block;
  width: 2em;
  height: 2em;
  line-height: 2em;
  vertical-align: middle;
}
.fa-stack-1x,
.fa-stack-2x {
  position: absolute;
  left: 0;
  width: 100%;
  text-align: center;
}
.fa-stack-1x {
  line-height: inherit;
}
.fa-stack-2x {
  font-size: 2em;
}
.fa-inverse {
  color: #ffffff;
}
/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen
   readers do not read off random characters that represent icons */
.fa-glass:before {
  content: "\f000";
}
.fa-music:before {
  content: "\f001";
}
.fa-search:before {
  content: "\f002";
}
.fa-envelope-o:before {
  content: "\f003";
}
.fa-heart:before {
  content: "\f004";
}
.fa-star:before {
  content: "\f005";
}
.fa-star-o:before {
  content: "\f006";
}
.fa-user:before {
  content: "\f007";
}
.fa-film:before {
  content: "\f008";
}
.fa-th-large:before {
  content: "\f009";
}
.fa-th:before {
  content: "\f00a";
}
.fa-th-list:before {
  content: "\f00b";
}
.fa-check:before {
  content: "\f00c";
}
.fa-remove:before,
.fa-close:before,
.fa-times:before {
  content: "\f00d";
}
.fa-search-plus:before {
  content: "\f00e";
}
.fa-search-minus:before {
  content: "\f010";
}
.fa-power-off:before {
  content: "\f011";
}
.fa-signal:before {
  content: "\f012";
}
.fa-gear:before,
.fa-cog:before {
  content: "\f013";
}
.fa-trash-o:before {
  content: "\f014";
}
.fa-home:before {
  content: "\f015";
}
.fa-file-o:before {
  content: "\f016";
}
.fa-clock-o:before {
  content: "\f017";
}
.fa-road:before {
  content: "\f018";
}
.fa-download:before {
  content: "\f019";
}
.fa-arrow-circle-o-down:before {
  content: "\f01a";
}
.fa-arrow-circle-o-up:before {
  content: "\f01b";
}
.fa-inbox:before {
  content: "\f01c";
}
.fa-play-circle-o:before {
  content: "\f01d";
}
.fa-rotate-right:before,
.fa-repeat:before {
  content: "\f01e";
}
.fa-refresh:before {
  content: "\f021";
}
.fa-list-alt:before {
  content: "\f022";
}
.fa-lock:before {
  content: "\f023";
}
.fa-flag:before {
  content: "\f024";
}
.fa-headphones:before {
  content: "\f025";
}
.fa-volume-off:before {
  content: "\f026";
}
.fa-volume-down:before {
  content: "\f027";
}
.fa-volume-up:before {
  content: "\f028";
}
.fa-qrcode:before {
  content: "\f029";
}
.fa-barcode:before {
  content: "\f02a";
}
.fa-tag:before {
  content: "\f02b";
}
.fa-tags:before {
  content: "\f02c";
}
.fa-book:before {
  content: "\f02d";
}
.fa-bookmark:before {
  content: "\f02e";
}
.fa-print:before {
  content: "\f02f";
}
.fa-camera:before {
  content: "\f030";
}
.fa-font:before {
  content: "\f031";
}
.fa-bold:before {
  content: "\f032";
}
.fa-italic:before {
  content: "\f033";
}
.fa-text-height:before {
  content: "\f034";
}
.fa-text-width:before {
  content: "\f035";
}
.fa-align-left:before {
  content: "\f036";
}
.fa-align-center:before {
  content: "\f037";
}
.fa-align-right:before {
  content: "\f038";
}
.fa-align-justify:before {
  content: "\f039";
}
.fa-list:before {
  content: "\f03a";
}
.fa-dedent:before,
.fa-outdent:before {
  content: "\f03b";
}
.fa-indent:before {
  content: "\f03c";
}
.fa-video-camera:before {
  content: "\f03d";
}
.fa-photo:before,
.fa-image:before,
.fa-picture-o:before {
  content: "\f03e";
}
.fa-pencil:before {
  content: "\f040";
}
.fa-map-marker:before {
  content: "\f041";
}
.fa-adjust:before {
  content: "\f042";
}
.fa-tint:before {
  content: "\f043";
}
.fa-edit:before,
.fa-pencil-square-o:before {
  content: "\f044";
}
.fa-share-square-o:before {
  content: "\f045";
}
.fa-check-square-o:before {
  content: "\f046";
}
.fa-arrows:before {
  content: "\f047";
}
.fa-step-backward:before {
  content: "\f048";
}
.fa-fast-backward:before {
  content: "\f049";
}
.fa-backward:before {
  content: "\f04a";
}
.fa-play:before {
  content: "\f04b";
}
.fa-pause:before {
  content: "\f04c";
}
.fa-stop:before {
  content: "\f04d";
}
.fa-forward:before {
  content: "\f04e";
}
.fa-fast-forward:before {
  content: "\f050";
}
.fa-step-forward:before {
  content: "\f051";
}
.fa-eject:before {
  content: "\f052";
}
.fa-chevron-left:before {
  content: "\f053";
}
.fa-chevron-right:before {
  content: "\f054";
}
.fa-plus-circle:before {
  content: "\f055";
}
.fa-minus-circle:before {
  content: "\f056";
}
.fa-times-circle:before {
  content: "\f057";
}
.fa-check-circle:before {
  content: "\f058";
}
.fa-question-circle:before {
  content: "\f059";
}
.fa-info-circle:before {
  content: "\f05a";
}
.fa-crosshairs:before {
  content: "\f05b";
}
.fa-times-circle-o:before {
  content: "\f05c";
}
.fa-check-circle-o:before {
  content: "\f05d";
}
.fa-ban:before {
  content: "\f05e";
}
.fa-arrow-left:before {
  content: "\f060";
}
.fa-arrow-right:before {
  content: "\f061";
}
.fa-arrow-up:before {
  content: "\f062";
}
.fa-arrow-down:before {
  content: "\f063";
}
.fa-mail-forward:before,
.fa-share:before {
  content: "\f064";
}
.fa-expand:before {
  content: "\f065";
}
.fa-compress:before {
  content: "\f066";
}
.fa-plus:before {
  content: "\f067";
}
.fa-minus:before {
  content: "\f068";
}
.fa-asterisk:before {
  content: "\f069";
}
.fa-exclamation-circle:before {
  content: "\f06a";
}
.fa-gift:before {
  content: "\f06b";
}
.fa-leaf:before {
  content: "\f06c";
}
.fa-fire:before {
  content: "\f06d";
}
.fa-eye:before {
  content: "\f06e";
}
.fa-eye-slash:before {
  content: "\f070";
}
.fa-warning:before,
.fa-exclamation-triangle:before {
  content: "\f071";
}
.fa-plane:before {
  content: "\f072";
}
.fa-calendar:before {
  content: "\f073";
}
.fa-random:before {
  content: "\f074";
}
.fa-comment:before {
  content: "\f075";
}
.fa-magnet:before {
  content: "\f076";
}
.fa-chevron-up:before {
  content: "\f077";
}
.fa-chevron-down:before {
  content: "\f078";
}
.fa-retweet:before {
  content: "\f079";
}
.fa-shopping-cart:before {
  content: "\f07a";
}
.fa-folder:before {
  content: "\f07b";
}
.fa-folder-open:before {
  content: "\f07c";
}
.fa-arrows-v:before {
  content: "\f07d";
}
.fa-arrows-h:before {
  content: "\f07e";
}
.fa-bar-chart-o:before,
.fa-bar-chart:before {
  content: "\f080";
}
.fa-twitter-square:before {
  content: "\f081";
}
.fa-facebook-square:before {
  content: "\f082";
}
.fa-camera-retro:before {
  content: "\f083";
}
.fa-key:before {
  content: "\f084";
}
.fa-gears:before,
.fa-cogs:before {
  content: "\f085";
}
.fa-comments:before {
  content: "\f086";
}
.fa-thumbs-o-up:before {
  content: "\f087";
}
.fa-thumbs-o-down:before {
  content: "\f088";
}
.fa-star-half:before {
  content: "\f089";
}
.fa-heart-o:before {
  content: "\f08a";
}
.fa-sign-out:before {
  content: "\f08b";
}
.fa-linkedin-square:before {
  content: "\f08c";
}
.fa-thumb-tack:before {
  content: "\f08d";
}
.fa-external-link:before {
  content: "\f08e";
}
.fa-sign-in:before {
  content: "\f090";
}
.fa-trophy:before {
  content: "\f091";
}
.fa-github-square:before {
  content: "\f092";
}
.fa-upload:before {
  content: "\f093";
}
.fa-lemon-o:before {
  content: "\f094";
}
.fa-phone:before {
  content: "\f095";
}
.fa-square-o:before {
  content: "\f096";
}
.fa-bookmark-o:before {
  content: "\f097";
}
.fa-phone-square:before {
  content: "\f098";
}
.fa-twitter:before {
  content: "\f099";
}
.fa-facebook-f:before,
.fa-facebook:before {
  content: "\f09a";
}
.fa-github:before {
  content: "\f09b";
}
.fa-unlock:before {
  content: "\f09c";
}
.fa-credit-card:before {
  content: "\f09d";
}
.fa-feed:before,
.fa-rss:before {
  content: "\f09e";
}
.fa-hdd-o:before {
  content: "\f0a0";
}
.fa-bullhorn:before {
  content: "\f0a1";
}
.fa-bell:before {
  content: "\f0f3";
}
.fa-certificate:before {
  content: "\f0a3";
}
.fa-hand-o-right:before {
  content: "\f0a4";
}
.fa-hand-o-left:before {
  content: "\f0a5";
}
.fa-hand-o-up:before {
  content: "\f0a6";
}
.fa-hand-o-down:before {
  content: "\f0a7";
}
.fa-arrow-circle-left:before {
  content: "\f0a8";
}
.fa-arrow-circle-right:before {
  content: "\f0a9";
}
.fa-arrow-circle-up:before {
  content: "\f0aa";
}
.fa-arrow-circle-down:before {
  content: "\f0ab";
}
.fa-globe:before {
  content: "\f0ac";
}
.fa-wrench:before {
  content: "\f0ad";
}
.fa-tasks:before {
  content: "\f0ae";
}
.fa-filter:before {
  content: "\f0b0";
}
.fa-briefcase:before {
  content: "\f0b1";
}
.fa-arrows-alt:before {
  content: "\f0b2";
}
.fa-group:before,
.fa-users:before {
  content: "\f0c0";
}
.fa-chain:before,
.fa-link:before {
  content: "\f0c1";
}
.fa-cloud:before {
  content: "\f0c2";
}
.fa-flask:before {
  content: "\f0c3";
}
.fa-cut:before,
.fa-scissors:before {
  content: "\f0c4";
}
.fa-copy:before,
.fa-files-o:before {
  content: "\f0c5";
}
.fa-paperclip:before {
  content: "\f0c6";
}
.fa-save:before,
.fa-floppy-o:before {
  content: "\f0c7";
}
.fa-square:before {
  content: "\f0c8";
}
.fa-navicon:before,
.fa-reorder:before,
.fa-bars:before {
  content: "\f0c9";
}
.fa-list-ul:before {
  content: "\f0ca";
}
.fa-list-ol:before {
  content: "\f0cb";
}
.fa-strikethrough:before {
  content: "\f0cc";
}
.fa-underline:before {
  content: "\f0cd";
}
.fa-table:before {
  content: "\f0ce";
}
.fa-magic:before {
  content: "\f0d0";
}
.fa-truck:before {
  content: "\f0d1";
}
.fa-pinterest:before {
  content: "\f0d2";
}
.fa-pinterest-square:before {
  content: "\f0d3";
}
.fa-google-plus-square:before {
  content: "\f0d4";
}
.fa-google-plus:before {
  content: "\f0d5";
}
.fa-money:before {
  content: "\f0d6";
}
.fa-caret-down:before {
  content: "\f0d7";
}
.fa-caret-up:before {
  content: "\f0d8";
}
.fa-caret-left:before {
  content: "\f0d9";
}
.fa-caret-right:before {
  content: "\f0da";
}
.fa-columns:before {
  content: "\f0db";
}
.fa-unsorted:before,
.fa-sort:before {
  content: "\f0dc";
}
.fa-sort-down:before,
.fa-sort-desc:before {
  content: "\f0dd";
}
.fa-sort-up:before,
.fa-sort-asc:before {
  content: "\f0de";
}
.fa-envelope:before {
  content: "\f0e0";
}
.fa-linkedin:before {
  content: "\f0e1";
}
.fa-rotate-left:before,
.fa-undo:before {
  content: "\f0e2";
}
.fa-legal:before,
.fa-gavel:before {
  content: "\f0e3";
}
.fa-dashboard:before,
.fa-tachometer:before {
  content: "\f0e4";
}
.fa-comment-o:before {
  content: "\f0e5";
}
.fa-comments-o:before {
  content: "\f0e6";
}
.fa-flash:before,
.fa-bolt:before {
  content: "\f0e7";
}
.fa-sitemap:before {
  content: "\f0e8";
}
.fa-umbrella:before {
  content: "\f0e9";
}
.fa-paste:before,
.fa-clipboard:before {
  content: "\f0ea";
}
.fa-lightbulb-o:before {
  content: "\f0eb";
}
.fa-exchange:before {
  content: "\f0ec";
}
.fa-cloud-download:before {
  content: "\f0ed";
}
.fa-cloud-upload:before {
  content: "\f0ee";
}
.fa-user-md:before {
  content: "\f0f0";
}
.fa-stethoscope:before {
  content: "\f0f1";
}
.fa-suitcase:before {
  content: "\f0f2";
}
.fa-bell-o:before {
  content: "\f0a2";
}
.fa-coffee:before {
  content: "\f0f4";
}
.fa-cutlery:before {
  content: "\f0f5";
}
.fa-file-text-o:before {
  content: "\f0f6";
}
.fa-building-o:before {
  content: "\f0f7";
}
.fa-hospital-o:before {
  content: "\f0f8";
}
.fa-ambulance:before {
  content: "\f0f9";
}
.fa-medkit:before {
  content: "\f0fa";
}
.fa-fighter-jet:before {
  content: "\f0fb";
}
.fa-beer:before {
  content: "\f0fc";
}
.fa-h-square:before {
  content: "\f0fd";
}
.fa-plus-square:before {
  content: "\f0fe";
}
.fa-angle-double-left:before {
  content: "\f100";
}
.fa-angle-double-right:before {
  content: "\f101";
}
.fa-angle-double-up:before {
  content: "\f102";
}
.fa-angle-double-down:before {
  content: "\f103";
}
.fa-angle-left:before {
  content: "\f104";
}
.fa-angle-right:before {
  content: "\f105";
}
.fa-angle-up:before {
  content: "\f106";
}
.fa-angle-down:before {
  content: "\f107";
}
.fa-desktop:before {
  content: "\f108";
}
.fa-laptop:before {
  content: "\f109";
}
.fa-tablet:before {
  content: "\f10a";
}
.fa-mobile-phone:before,
.fa-mobile:before {
  content: "\f10b";
}
.fa-circle-o:before {
  content: "\f10c";
}
.fa-quote-left:before {
  content: "\f10d";
}
.fa-quote-right:before {
  content: "\f10e";
}
.fa-spinner:before {
  content: "\f110";
}
.fa-circle:before {
  content: "\f111";
}
.fa-mail-reply:before,
.fa-reply:before {
  content: "\f112";
}
.fa-github-alt:before {
  content: "\f113";
}
.fa-folder-o:before {
  content: "\f114";
}
.fa-folder-open-o:before {
  content: "\f115";
}
.fa-smile-o:before {
  content: "\f118";
}
.fa-frown-o:before {
  content: "\f119";
}
.fa-meh-o:before {
  content: "\f11a";
}
.fa-gamepad:before {
  content: "\f11b";
}
.fa-keyboard-o:before {
  content: "\f11c";
}
.fa-flag-o:before {
  content: "\f11d";
}
.fa-flag-checkered:before {
  content: "\f11e";
}
.fa-terminal:before {
  content: "\f120";
}
.fa-code:before {
  content: "\f121";
}
.fa-mail-reply-all:before,
.fa-reply-all:before {
  content: "\f122";
}
.fa-star-half-empty:before,
.fa-star-half-full:before,
.fa-star-half-o:before {
  content: "\f123";
}
.fa-location-arrow:before {
  content: "\f124";
}
.fa-crop:before {
  content: "\f125";
}
.fa-code-fork:before {
  content: "\f126";
}
.fa-unlink:before,
.fa-chain-broken:before {
  content: "\f127";
}
.fa-question:before {
  content: "\f128";
}
.fa-info:before {
  content: "\f129";
}
.fa-exclamation:before {
  content: "\f12a";
}
.fa-superscript:before {
  content: "\f12b";
}
.fa-subscript:before {
  content: "\f12c";
}
.fa-eraser:before {
  content: "\f12d";
}
.fa-puzzle-piece:before {
  content: "\f12e";
}
.fa-microphone:before {
  content: "\f130";
}
.fa-microphone-slash:before {
  content: "\f131";
}
.fa-shield:before {
  content: "\f132";
}
.fa-calendar-o:before {
  content: "\f133";
}
.fa-fire-extinguisher:before {
  content: "\f134";
}
.fa-rocket:before {
  content: "\f135";
}
.fa-maxcdn:before {
  content: "\f136";
}
.fa-chevron-circle-left:before {
  content: "\f137";
}
.fa-chevron-circle-right:before {
  content: "\f138";
}
.fa-chevron-circle-up:before {
  content: "\f139";
}
.fa-chevron-circle-down:before {
  content: "\f13a";
}
.fa-html5:before {
  content: "\f13b";
}
.fa-css3:before {
  content: "\f13c";
}
.fa-anchor:before {
  content: "\f13d";
}
.fa-unlock-alt:before {
  content: "\f13e";
}
.fa-bullseye:before {
  content: "\f140";
}
.fa-ellipsis-h:before {
  content: "\f141";
}
.fa-ellipsis-v:before {
  content: "\f142";
}
.fa-rss-square:before {
  content: "\f143";
}
.fa-play-circle:before {
  content: "\f144";
}
.fa-ticket:before {
  content: "\f145";
}
.fa-minus-square:before {
  content: "\f146";
}
.fa-minus-square-o:before {
  content: "\f147";
}
.fa-level-up:before {
  content: "\f148";
}
.fa-level-down:before {
  content: "\f149";
}
.fa-check-square:before {
  content: "\f14a";
}
.fa-pencil-square:before {
  content: "\f14b";
}
.fa-external-link-square:before {
  content: "\f14c";
}
.fa-share-square:before {
  content: "\f14d";
}
.fa-compass:before {
  content: "\f14e";
}
.fa-toggle-down:before,
.fa-caret-square-o-down:before {
  content: "\f150";
}
.fa-toggle-up:before,
.fa-caret-square-o-up:before {
  content: "\f151";
}
.fa-toggle-right:before,
.fa-caret-square-o-right:before {
  content: "\f152";
}
.fa-euro:before,
.fa-eur:before {
  content: "\f153";
}
.fa-gbp:before {
  content: "\f154";
}
.fa-dollar:before,
.fa-usd:before {
  content: "\f155";
}
.fa-rupee:before,
.fa-inr:before {
  content: "\f156";
}
.fa-cny:before,
.fa-rmb:before,
.fa-yen:before,
.fa-jpy:before {
  content: "\f157";
}
.fa-ruble:before,
.fa-rouble:before,
.fa-rub:before {
  content: "\f158";
}
.fa-won:before,
.fa-krw:before {
  content: "\f159";
}
.fa-bitcoin:before,
.fa-btc:before {
  content: "\f15a";
}
.fa-file:before {
  content: "\f15b";
}
.fa-file-text:before {
  content: "\f15c";
}
.fa-sort-alpha-asc:before {
  content: "\f15d";
}
.fa-sort-alpha-desc:before {
  content: "\f15e";
}
.fa-sort-amount-asc:before {
  content: "\f160";
}
.fa-sort-amount-desc:before {
  content: "\f161";
}
.fa-sort-numeric-asc:before {
  content: "\f162";
}
.fa-sort-numeric-desc:before {
  content: "\f163";
}
.fa-thumbs-up:before {
  content: "\f164";
}
.fa-thumbs-down:before {
  content: "\f165";
}
.fa-youtube-square:before {
  content: "\f166";
}
.fa-youtube:before {
  content: "\f167";
}
.fa-xing:before {
  content: "\f168";
}
.fa-xing-square:before {
  content: "\f169";
}
.fa-youtube-play:before {
  content: "\f16a";
}
.fa-dropbox:before {
  content: "\f16b";
}
.fa-stack-overflow:before {
  content: "\f16c";
}
.fa-instagram:before {
  content: "\f16d";
}
.fa-flickr:before {
  content: "\f16e";
}
.fa-adn:before {
  content: "\f170";
}
.fa-bitbucket:before {
  content: "\f171";
}
.fa-bitbucket-square:before {
  content: "\f172";
}
.fa-tumblr:before {
  content: "\f173";
}
.fa-tumblr-square:before {
  content: "\f174";
}
.fa-long-arrow-down:before {
  content: "\f175";
}
.fa-long-arrow-up:before {
  content: "\f176";
}
.fa-long-arrow-left:before {
  content: "\f177";
}
.fa-long-arrow-right:before {
  content: "\f178";
}
.fa-apple:before {
  content: "\f179";
}
.fa-windows:before {
  content: "\f17a";
}
.fa-android:before {
  content: "\f17b";
}
.fa-linux:before {
  content: "\f17c";
}
.fa-dribbble:before {
  content: "\f17d";
}
.fa-skype:before {
  content: "\f17e";
}
.fa-foursquare:before {
  content: "\f180";
}
.fa-trello:before {
  content: "\f181";
}
.fa-female:before {
  content: "\f182";
}
.fa-male:before {
  content: "\f183";
}
.fa-gittip:before,
.fa-gratipay:before {
  content: "\f184";
}
.fa-sun-o:before {
  content: "\f185";
}
.fa-moon-o:before {
  content: "\f186";
}
.fa-archive:before {
  content: "\f187";
}
.fa-bug:before {
  content: "\f188";
}
.fa-vk:before {
  content: "\f189";
}
.fa-weibo:before {
  content: "\f18a";
}
.fa-renren:before {
  content: "\f18b";
}
.fa-pagelines:before {
  content: "\f18c";
}
.fa-stack-exchange:before {
  content: "\f18d";
}
.fa-arrow-circle-o-right:before {
  content: "\f18e";
}
.fa-arrow-circle-o-left:before {
  content: "\f190";
}
.fa-toggle-left:before,
.fa-caret-square-o-left:before {
  content: "\f191";
}
.fa-dot-circle-o:before {
  content: "\f192";
}
.fa-wheelchair:before {
  content: "\f193";
}
.fa-vimeo-square:before {
  content: "\f194";
}
.fa-turkish-lira:before,
.fa-try:before {
  content: "\f195";
}
.fa-plus-square-o:before {
  content: "\f196";
}
.fa-space-shuttle:before {
  content: "\f197";
}
.fa-slack:before {
  content: "\f198";
}
.fa-envelope-square:before {
  content: "\f199";
}
.fa-wordpress:before {
  content: "\f19a";
}
.fa-openid:before {
  content: "\f19b";
}
.fa-institution:before,
.fa-bank:before,
.fa-university:before {
  content: "\f19c";
}
.fa-mortar-board:before,
.fa-graduation-cap:before {
  content: "\f19d";
}
.fa-yahoo:before {
  content: "\f19e";
}
.fa-google:before {
  content: "\f1a0";
}
.fa-reddit:before {
  content: "\f1a1";
}
.fa-reddit-square:before {
  content: "\f1a2";
}
.fa-stumbleupon-circle:before {
  content: "\f1a3";
}
.fa-stumbleupon:before {
  content: "\f1a4";
}
.fa-delicious:before {
  content: "\f1a5";
}
.fa-digg:before {
  content: "\f1a6";
}
.fa-pied-piper-pp:before {
  content: "\f1a7";
}
.fa-pied-piper-alt:before {
  content: "\f1a8";
}
.fa-drupal:before {
  content: "\f1a9";
}
.fa-joomla:before {
  content: "\f1aa";
}
.fa-language:before {
  content: "\f1ab";
}
.fa-fax:before {
  content: "\f1ac";
}
.fa-building:before {
  content: "\f1ad";
}
.fa-child:before {
  content: "\f1ae";
}
.fa-paw:before {
  content: "\f1b0";
}
.fa-spoon:before {
  content: "\f1b1";
}
.fa-cube:before {
  content: "\f1b2";
}
.fa-cubes:before {
  content: "\f1b3";
}
.fa-behance:before {
  content: "\f1b4";
}
.fa-behance-square:before {
  content: "\f1b5";
}
.fa-steam:before {
  content: "\f1b6";
}
.fa-steam-square:before {
  content: "\f1b7";
}
.fa-recycle:before {
  content: "\f1b8";
}
.fa-automobile:before,
.fa-car:before {
  content: "\f1b9";
}
.fa-cab:before,
.fa-taxi:before {
  content: "\f1ba";
}
.fa-tree:before {
  content: "\f1bb";
}
.fa-spotify:before {
  content: "\f1bc";
}
.fa-deviantart:before {
  content: "\f1bd";
}
.fa-soundcloud:before {
  content: "\f1be";
}
.fa-database:before {
  content: "\f1c0";
}
.fa-file-pdf-o:before {
  content: "\f1c1";
}
.fa-file-word-o:before {
  content: "\f1c2";
}
.fa-file-excel-o:before {
  content: "\f1c3";
}
.fa-file-powerpoint-o:before {
  content: "\f1c4";
}
.fa-file-photo-o:before,
.fa-file-picture-o:before,
.fa-file-image-o:before {
  content: "\f1c5";
}
.fa-file-zip-o:before,
.fa-file-archive-o:before {
  content: "\f1c6";
}
.fa-file-sound-o:before,
.fa-file-audio-o:before {
  content: "\f1c7";
}
.fa-file-movie-o:before,
.fa-file-video-o:before {
  content: "\f1c8";
}
.fa-file-code-o:before {
  content: "\f1c9";
}
.fa-vine:before {
  content: "\f1ca";
}
.fa-codepen:before {
  content: "\f1cb";
}
.fa-jsfiddle:before {
  content: "\f1cc";
}
.fa-life-bouy:before,
.fa-life-buoy:before,
.fa-life-saver:before,
.fa-support:before,
.fa-life-ring:before {
  content: "\f1cd";
}
.fa-circle-o-notch:before {
  content: "\f1ce";
}
.fa-ra:before,
.fa-resistance:before,
.fa-rebel:before {
  content: "\f1d0";
}
.fa-ge:before,
.fa-empire:before {
  content: "\f1d1";
}
.fa-git-square:before {
  content: "\f1d2";
}
.fa-git:before {
  content: "\f1d3";
}
.fa-y-combinator-square:before,
.fa-yc-square:before,
.fa-hacker-news:before {
  content: "\f1d4";
}
.fa-tencent-weibo:before {
  content: "\f1d5";
}
.fa-qq:before {
  content: "\f1d6";
}
.fa-wechat:before,
.fa-weixin:before {
  content: "\f1d7";
}
.fa-send:before,
.fa-paper-plane:before {
  content: "\f1d8";
}
.fa-send-o:before,
.fa-paper-plane-o:before {
  content: "\f1d9";
}
.fa-history:before {
  content: "\f1da";
}
.fa-circle-thin:before {
  content: "\f1db";
}
.fa-header:before {
  content: "\f1dc";
}
.fa-paragraph:before {
  content: "\f1dd";
}
.fa-sliders:before {
  content: "\f1de";
}
.fa-share-alt:before {
  content: "\f1e0";
}
.fa-share-alt-square:before {
  content: "\f1e1";
}
.fa-bomb:before {
  content: "\f1e2";
}
.fa-soccer-ball-o:before,
.fa-futbol-o:before {
  content: "\f1e3";
}
.fa-tty:before {
  content: "\f1e4";
}
.fa-binoculars:before {
  content: "\f1e5";
}
.fa-plug:before {
  content: "\f1e6";
}
.fa-slideshare:before {
  content: "\f1e7";
}
.fa-twitch:before {
  content: "\f1e8";
}
.fa-yelp:before {
  content: "\f1e9";
}
.fa-newspaper-o:before {
  content: "\f1ea";
}
.fa-wifi:before {
  content: "\f1eb";
}
.fa-calculator:before {
  content: "\f1ec";
}
.fa-paypal:before {
  content: "\f1ed";
}
.fa-google-wallet:before {
  content: "\f1ee";
}
.fa-cc-visa:before {
  content: "\f1f0";
}
.fa-cc-mastercard:before {
  content: "\f1f1";
}
.fa-cc-discover:before {
  content: "\f1f2";
}
.fa-cc-amex:before {
  content: "\f1f3";
}
.fa-cc-paypal:before {
  content: "\f1f4";
}
.fa-cc-stripe:before {
  content: "\f1f5";
}
.fa-bell-slash:before {
  content: "\f1f6";
}
.fa-bell-slash-o:before {
  content: "\f1f7";
}
.fa-trash:before {
  content: "\f1f8";
}
.fa-copyright:before {
  content: "\f1f9";
}
.fa-at:before {
  content: "\f1fa";
}
.fa-eyedropper:before {
  content: "\f1fb";
}
.fa-paint-brush:before {
  content: "\f1fc";
}
.fa-birthday-cake:before {
  content: "\f1fd";
}
.fa-area-chart:before {
  content: "\f1fe";
}
.fa-pie-chart:before {
  content: "\f200";
}
.fa-line-chart:before {
  content: "\f201";
}
.fa-lastfm:before {
  content: "\f202";
}
.fa-lastfm-square:before {
  content: "\f203";
}
.fa-toggle-off:before {
  content: "\f204";
}
.fa-toggle-on:before {
  content: "\f205";
}
.fa-bicycle:before {
  content: "\f206";
}
.fa-bus:before {
  content: "\f207";
}
.fa-ioxhost:before {
  content: "\f208";
}
.fa-angellist:before {
  content: "\f209";
}
.fa-cc:before {
  content: "\f20a";
}
.fa-shekel:before,
.fa-sheqel:before,
.fa-ils:before {
  content: "\f20b";
}
.fa-meanpath:before {
  content: "\f20c";
}
.fa-buysellads:before {
  content: "\f20d";
}
.fa-connectdevelop:before {
  content: "\f20e";
}
.fa-dashcube:before {
  content: "\f210";
}
.fa-forumbee:before {
  content: "\f211";
}
.fa-leanpub:before {
  content: "\f212";
}
.fa-sellsy:before {
  content: "\f213";
}
.fa-shirtsinbulk:before {
  content: "\f214";
}
.fa-simplybuilt:before {
  content: "\f215";
}
.fa-skyatlas:before {
  content: "\f216";
}
.fa-cart-plus:before {
  content: "\f217";
}
.fa-cart-arrow-down:before {
  content: "\f218";
}
.fa-diamond:before {
  content: "\f219";
}
.fa-ship:before {
  content: "\f21a";
}
.fa-user-secret:before {
  content: "\f21b";
}
.fa-motorcycle:before {
  content: "\f21c";
}
.fa-street-view:before {
  content: "\f21d";
}
.fa-heartbeat:before {
  content: "\f21e";
}
.fa-venus:before {
  content: "\f221";
}
.fa-mars:before {
  content: "\f222";
}
.fa-mercury:before {
  content: "\f223";
}
.fa-intersex:before,
.fa-transgender:before {
  content: "\f224";
}
.fa-transgender-alt:before {
  content: "\f225";
}
.fa-venus-double:before {
  content: "\f226";
}
.fa-mars-double:before {
  content: "\f227";
}
.fa-venus-mars:before {
  content: "\f228";
}
.fa-mars-stroke:before {
  content: "\f229";
}
.fa-mars-stroke-v:before {
  content: "\f22a";
}
.fa-mars-stroke-h:before {
  content: "\f22b";
}
.fa-neuter:before {
  content: "\f22c";
}
.fa-genderless:before {
  content: "\f22d";
}
.fa-facebook-official:before {
  content: "\f230";
}
.fa-pinterest-p:before {
  content: "\f231";
}
.fa-whatsapp:before {
  content: "\f232";
}
.fa-server:before {
  content: "\f233";
}
.fa-user-plus:before {
  content: "\f234";
}
.fa-user-times:before {
  content: "\f235";
}
.fa-hotel:before,
.fa-bed:before {
  content: "\f236";
}
.fa-viacoin:before {
  content: "\f237";
}
.fa-train:before {
  content: "\f238";
}
.fa-subway:before {
  content: "\f239";
}
.fa-medium:before {
  content: "\f23a";
}
.fa-yc:before,
.fa-y-combinator:before {
  content: "\f23b";
}
.fa-optin-monster:before {
  content: "\f23c";
}
.fa-opencart:before {
  content: "\f23d";
}
.fa-expeditedssl:before {
  content: "\f23e";
}
.fa-battery-4:before,
.fa-battery:before,
.fa-battery-full:before {
  content: "\f240";
}
.fa-battery-3:before,
.fa-battery-three-quarters:before {
  content: "\f241";
}
.fa-battery-2:before,
.fa-battery-half:before {
  content: "\f242";
}
.fa-battery-1:before,
.fa-battery-quarter:before {
  content: "\f243";
}
.fa-battery-0:before,
.fa-battery-empty:before {
  content: "\f244";
}
.fa-mouse-pointer:before {
  content: "\f245";
}
.fa-i-cursor:before {
  content: "\f246";
}
.fa-object-group:before {
  content: "\f247";
}
.fa-object-ungroup:before {
  content: "\f248";
}
.fa-sticky-note:before {
  content: "\f249";
}
.fa-sticky-note-o:before {
  content: "\f24a";
}
.fa-cc-jcb:before {
  content: "\f24b";
}
.fa-cc-diners-club:before {
  content: "\f24c";
}
.fa-clone:before {
  content: "\f24d";
}
.fa-balance-scale:before {
  content: "\f24e";
}
.fa-hourglass-o:before {
  content: "\f250";
}
.fa-hourglass-1:before,
.fa-hourglass-start:before {
  content: "\f251";
}
.fa-hourglass-2:before,
.fa-hourglass-half:before {
  content: "\f252";
}
.fa-hourglass-3:before,
.fa-hourglass-end:before {
  content: "\f253";
}
.fa-hourglass:before {
  content: "\f254";
}
.fa-hand-grab-o:before,
.fa-hand-rock-o:before {
  content: "\f255";
}
.fa-hand-stop-o:before,
.fa-hand-paper-o:before {
  content: "\f256";
}
.fa-hand-scissors-o:before {
  content: "\f257";
}
.fa-hand-lizard-o:before {
  content: "\f258";
}
.fa-hand-spock-o:before {
  content: "\f259";
}
.fa-hand-pointer-o:before {
  content: "\f25a";
}
.fa-hand-peace-o:before {
  content: "\f25b";
}
.fa-trademark:before {
  content: "\f25c";
}
.fa-registered:before {
  content: "\f25d";
}
.fa-creative-commons:before {
  content: "\f25e";
}
.fa-gg:before {
  content: "\f260";
}
.fa-gg-circle:before {
  content: "\f261";
}
.fa-tripadvisor:before {
  content: "\f262";
}
.fa-odnoklassniki:before {
  content: "\f263";
}
.fa-odnoklassniki-square:before {
  content: "\f264";
}
.fa-get-pocket:before {
  content: "\f265";
}
.fa-wikipedia-w:before {
  content: "\f266";
}
.fa-safari:before {
  content: "\f267";
}
.fa-chrome:before {
  content: "\f268";
}
.fa-firefox:before {
  content: "\f269";
}
.fa-opera:before {
  content: "\f26a";
}
.fa-internet-explorer:before {
  content: "\f26b";
}
.fa-tv:before,
.fa-television:before {
  content: "\f26c";
}
.fa-contao:before {
  content: "\f26d";
}
.fa-500px:before {
  content: "\f26e";
}
.fa-amazon:before {
  content: "\f270";
}
.fa-calendar-plus-o:before {
  content: "\f271";
}
.fa-calendar-minus-o:before {
  content: "\f272";
}
.fa-calendar-times-o:before {
  content: "\f273";
}
.fa-calendar-check-o:before {
  content: "\f274";
}
.fa-industry:before {
  content: "\f275";
}
.fa-map-pin:before {
  content: "\f276";
}
.fa-map-signs:before {
  content: "\f277";
}
.fa-map-o:before {
  content: "\f278";
}
.fa-map:before {
  content: "\f279";
}
.fa-commenting:before {
  content: "\f27a";
}
.fa-commenting-o:before {
  content: "\f27b";
}
.fa-houzz:before {
  content: "\f27c";
}
.fa-vimeo:before {
  content: "\f27d";
}
.fa-black-tie:before {
  content: "\f27e";
}
.fa-fonticons:before {
  content: "\f280";
}
.fa-reddit-alien:before {
  content: "\f281";
}
.fa-edge:before {
  content: "\f282";
}
.fa-credit-card-alt:before {
  content: "\f283";
}
.fa-codiepie:before {
  content: "\f284";
}
.fa-modx:before {
  content: "\f285";
}
.fa-fort-awesome:before {
  content: "\f286";
}
.fa-usb:before {
  content: "\f287";
}
.fa-product-hunt:before {
  content: "\f288";
}
.fa-mixcloud:before {
  content: "\f289";
}
.fa-scribd:before {
  content: "\f28a";
}
.fa-pause-circle:before {
  content: "\f28b";
}
.fa-pause-circle-o:before {
  content: "\f28c";
}
.fa-stop-circle:before {
  content: "\f28d";
}
.fa-stop-circle-o:before {
  content: "\f28e";
}
.fa-shopping-bag:before {
  content: "\f290";
}
.fa-shopping-basket:before {
  content: "\f291";
}
.fa-hashtag:before {
  content: "\f292";
}
.fa-bluetooth:before {
  content: "\f293";
}
.fa-bluetooth-b:before {
  content: "\f294";
}
.fa-percent:before {
  content: "\f295";
}
.fa-gitlab:before {
  content: "\f296";
}
.fa-wpbeginner:before {
  content: "\f297";
}
.fa-wpforms:before {
  content: "\f298";
}
.fa-envira:before {
  content: "\f299";
}
.fa-universal-access:before {
  content: "\f29a";
}
.fa-wheelchair-alt:before {
  content: "\f29b";
}
.fa-question-circle-o:before {
  content: "\f29c";
}
.fa-blind:before {
  content: "\f29d";
}
.fa-audio-description:before {
  content: "\f29e";
}
.fa-volume-control-phone:before {
  content: "\f2a0";
}
.fa-braille:before {
  content: "\f2a1";
}
.fa-assistive-listening-systems:before {
  content: "\f2a2";
}
.fa-asl-interpreting:before,
.fa-american-sign-language-interpreting:before {
  content: "\f2a3";
}
.fa-deafness:before,
.fa-hard-of-hearing:before,
.fa-deaf:before {
  content: "\f2a4";
}
.fa-glide:before {
  content: "\f2a5";
}
.fa-glide-g:before {
  content: "\f2a6";
}
.fa-signing:before,
.fa-sign-language:before {
  content: "\f2a7";
}
.fa-low-vision:before {
  content: "\f2a8";
}
.fa-viadeo:before {
  content: "\f2a9";
}
.fa-viadeo-square:before {
  content: "\f2aa";
}
.fa-snapchat:before {
  content: "\f2ab";
}
.fa-snapchat-ghost:before {
  content: "\f2ac";
}
.fa-snapchat-square:before {
  content: "\f2ad";
}
.fa-pied-piper:before {
  content: "\f2ae";
}
.fa-first-order:before {
  content: "\f2b0";
}
.fa-yoast:before {
  content: "\f2b1";
}
.fa-themeisle:before {
  content: "\f2b2";
}
.fa-google-plus-circle:before,
.fa-google-plus-official:before {
  content: "\f2b3";
}
.fa-fa:before,
.fa-font-awesome:before {
  content: "\f2b4";
}
.fa-handshake-o:before {
  content: "\f2b5";
}
.fa-envelope-open:before {
  content: "\f2b6";
}
.fa-envelope-open-o:before {
  content: "\f2b7";
}
.fa-linode:before {
  content: "\f2b8";
}
.fa-address-book:before {
  content: "\f2b9";
}
.fa-address-book-o:before {
  content: "\f2ba";
}
.fa-vcard:before,
.fa-address-card:before {
  content: "\f2bb";
}
.fa-vcard-o:before,
.fa-address-card-o:before {
  content: "\f2bc";
}
.fa-user-circle:before {
  content: "\f2bd";
}
.fa-user-circle-o:before {
  content: "\f2be";
}
.fa-user-o:before {
  content: "\f2c0";
}
.fa-id-badge:before {
  content: "\f2c1";
}
.fa-drivers-license:before,
.fa-id-card:before {
  content: "\f2c2";
}
.fa-drivers-license-o:before,
.fa-id-card-o:before {
  content: "\f2c3";
}
.fa-quora:before {
  content: "\f2c4";
}
.fa-free-code-camp:before {
  content: "\f2c5";
}
.fa-telegram:before {
  content: "\f2c6";
}
.fa-thermometer-4:before,
.fa-thermometer:before,
.fa-thermometer-full:before {
  content: "\f2c7";
}
.fa-thermometer-3:before,
.fa-thermometer-three-quarters:before {
  content: "\f2c8";
}
.fa-thermometer-2:before,
.fa-thermometer-half:before {
  content: "\f2c9";
}
.fa-thermometer-1:before,
.fa-thermometer-quarter:before {
  content: "\f2ca";
}
.fa-thermometer-0:before,
.fa-thermometer-empty:before {
  content: "\f2cb";
}
.fa-shower:before {
  content: "\f2cc";
}
.fa-bathtub:before,
.fa-s15:before,
.fa-bath:before {
  content: "\f2cd";
}
.fa-podcast:before {
  content: "\f2ce";
}
.fa-window-maximize:before {
  content: "\f2d0";
}
.fa-window-minimize:before {
  content: "\f2d1";
}
.fa-window-restore:before {
  content: "\f2d2";
}
.fa-times-rectangle:before,
.fa-window-close:before {
  content: "\f2d3";
}
.fa-times-rectangle-o:before,
.fa-window-close-o:before {
  content: "\f2d4";
}
.fa-bandcamp:before {
  content: "\f2d5";
}
.fa-grav:before {
  content: "\f2d6";
}
.fa-etsy:before {
  content: "\f2d7";
}
.fa-imdb:before {
  content: "\f2d8";
}
.fa-ravelry:before {
  content: "\f2d9";
}
.fa-eercast:before {
  content: "\f2da";
}
.fa-microchip:before {
  content: "\f2db";
}
.fa-snowflake-o:before {
  content: "\f2dc";
}
.fa-superpowers:before {
  content: "\f2dd";
}
.fa-wpexplorer:before {
  content: "\f2de";
}
.fa-meetup:before {
  content: "\f2e0";
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}
.sr-only-focusable:active,
.sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto;
}
]]></Content>
      <Properties />
    </Stylesheet>
    <Stylesheet>
      <Name>photoswipe</Name>
      <FileName>lib/photoswipe.css</FileName>
      <Content><![CDATA[.pswp {
  display: none;
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  overflow: hidden;
  -ms-touch-action: none;
  touch-action: none;
  z-index: 1500;
  -webkit-text-size-adjust: 100%;
  /* create separate layer, to avoid paint on window.onscroll in webkit/blink */
  -webkit-backface-visibility: hidden;
  outline: none; }
  .pswp * {
    -webkit-box-sizing: border-box;
            box-sizing: border-box; }
  .pswp img {
    max-width: none; }

/* style is added when JS option showHideOpacity is set to true */
.pswp--animate_opacity {
  /* 0.001, because opacity:0 doesn't trigger Paint action, which causes lag at start of transition */
  opacity: 0.001;
  will-change: opacity;
  /* for open/close transition */
  -webkit-transition: opacity 333ms cubic-bezier(0.4, 0, 0.22, 1);
          transition: opacity 333ms cubic-bezier(0.4, 0, 0.22, 1); }

.pswp--open {
  display: block; }

.pswp--zoom-allowed .pswp__img {
  /* autoprefixer: off */
  cursor: -webkit-zoom-in;
  cursor: -moz-zoom-in;
  cursor: zoom-in; }

.pswp--zoomed-in .pswp__img {
  /* autoprefixer: off */
  cursor: -webkit-grab;
  cursor: -moz-grab;
  cursor: grab; }

.pswp--dragging .pswp__img {
  /* autoprefixer: off */
  cursor: -webkit-grabbing;
  cursor: -moz-grabbing;
  cursor: grabbing; }

/*
	Background is added as a separate element.
	As animating opacity is much faster than animating rgba() background-color.
*/
.pswp__bg {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: var(--black);
  opacity: 0;
  -webkit-transform: translateZ(0);
          transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  will-change: opacity; }

.pswp__scroll-wrap {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden; }

.pswp__container,
.pswp__zoom-wrap {
  -ms-touch-action: none;
  touch-action: none;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0; }

/* Prevent selection and tap highlights */
.pswp__container,
.pswp__img {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
      user-select: none;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none; }

.pswp__zoom-wrap {
  position: absolute;
  width: 100%;
  -webkit-transform-origin: left top;
  -ms-transform-origin: left top;
  transform-origin: left top;
  /* for open/close transition */
  -webkit-transition: -webkit-transform 333ms cubic-bezier(0.4, 0, 0.22, 1);
          transition: transform 333ms cubic-bezier(0.4, 0, 0.22, 1); }

.pswp__bg {
  will-change: opacity;
  /* for open/close transition */
  -webkit-transition: opacity 333ms cubic-bezier(0.4, 0, 0.22, 1);
          transition: opacity 333ms cubic-bezier(0.4, 0, 0.22, 1); }

.pswp--animated-in .pswp__bg,
.pswp--animated-in .pswp__zoom-wrap {
  -webkit-transition: none;
  transition: none; }

.pswp__container,
.pswp__zoom-wrap {
  -webkit-backface-visibility: hidden; }

.pswp__item {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  overflow: hidden; }

.pswp__img {
  position: absolute;
  width: auto;
  height: auto;
  top: 0;
  left: 0; }

/*
	stretched thumbnail or div placeholder element (see below)
	style is added to avoid flickering in webkit/blink when layers overlap
*/
.pswp__img--placeholder {
  -webkit-backface-visibility: hidden; }

/*
	div element that matches size of large image
	large image loads on top of it
*/
.pswp__img--placeholder--blank {
  background: #222; }

.pswp--ie .pswp__img {
  width: 100% !important;
  height: auto !important;
  left: 0;
  top: 0; }

/*
	Error message appears when image is not loaded
	(JS option errorMsg controls markup)
*/
.pswp__error-msg {
  position: absolute;
  left: 0;
  top: 50%;
  width: 100%;
  text-align: center;
  font-size: 14px;
  line-height: 16px;
  margin-top: -8px;
  color: #CCC; }

.pswp__error-msg a {
  color: #CCC;
  text-decoration: underline; }


/*

  Contents:

  1. Buttons
  2. Share modal and links
  3. Index indicator ("1 of X" counter)
  4. Caption
  5. Loading indicator
  6. Additional styles (root element, top bar, idle state, hidden state, etc.)

*/
/*

  1. Buttons

 */
/* <button> css reset */
.pswp__button {
  width: 44px;
  height: 44px;
  position: relative;
  background: none;
  cursor: pointer;
  overflow: visible;
  -webkit-appearance: none;
  display: block;
  border: 0;
  padding: 0;
  margin: 0;
  float: right;
  opacity: 0.75;
  -webkit-transition: opacity 0.2s;
          transition: opacity 0.2s;
  -webkit-box-shadow: none;
          box-shadow: none; }
  .pswp__button:focus, .pswp__button:hover {
    opacity: 1; }
  .pswp__button:active {
    outline: none;
    opacity: 0.9; }
  .pswp__button::-moz-focus-inner {
    padding: 0;
    border: 0; }

/* pswp__ui--over-close class it added when mouse is over element that should close gallery */
.pswp__ui--over-close .pswp__button--close {
  opacity: 1; }

.pswp__button,
.pswp__button--arrow--left:before,
.pswp__button--arrow--right:before {
  background: url(/ig-assets/photoswipe/default-skin.png) 0 0 no-repeat;
  background-size: 264px 88px;
  width: 44px;
  height: 44px; }

@media (-webkit-min-device-pixel-ratio: 1.1), (-webkit-min-device-pixel-ratio: 1.09375), (min-resolution: 105dpi), (min-resolution: 1.1dppx) {
  /* Serve SVG sprite if browser supports SVG and resolution is more than 105dpi */
  .pswp--svg .pswp__button,
  .pswp--svg .pswp__button--arrow--left:before,
  .pswp--svg .pswp__button--arrow--right:before {
    background-image: url(/ig-assets/photoswipe/default-skin.svg); }
  .pswp--svg .pswp__button--arrow--left,
  .pswp--svg .pswp__button--arrow--right {
    background: none; } }

.pswp__button--close {
  background-position: 0 -44px; }

.pswp__button--share {
  background-position: -44px -44px; }

.pswp__button--fs {
  display: none; }

.pswp--supports-fs .pswp__button--fs {
  display: block; }

.pswp--fs .pswp__button--fs {
  background-position: -44px 0; }

.pswp__button--zoom {
  display: none;
  background-position: -88px 0; }

.pswp--zoom-allowed .pswp__button--zoom {
  display: block; }

.pswp--zoomed-in .pswp__button--zoom {
  background-position: -132px 0; }

/* no arrows on touch screens */
.pswp--touch .pswp__button--arrow--left,
.pswp--touch .pswp__button--arrow--right {
  visibility: hidden; }

/*
  Arrow buttons hit area
  (icon is added to :before pseudo-element)
*/
.pswp__button--arrow--left,
.pswp__button--arrow--right {
  background: none;
  top: 50%;
  margin-top: -50px;
  width: 70px;
  height: 100px;
  position: absolute; }

.pswp__button--arrow--left {
  left: 0; }

.pswp__button--arrow--right {
  right: 0; }

.pswp__button--arrow--left:before,
.pswp__button--arrow--right:before {
  content: '';
  top: 35px;
  background-color: rgba(0, 0, 0, 0.3);
  height: 30px;
  width: 32px;
  position: absolute; }

.pswp__button--arrow--left:before {
  left: 6px;
  background-position: -138px -44px; }

.pswp__button--arrow--right:before {
  right: 6px;
  background-position: -94px -44px; }

/*

  2. Share modal/popup and links

 */
.pswp__counter,
.pswp__share-modal {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
      user-select: none; }

.pswp__share-modal {
  display: block;
  background: rgba(0, 0, 0, 0.5);
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  padding: 10px;
  position: absolute;
  z-index: 1600;
  opacity: 0;
  -webkit-transition: opacity 0.25s ease-out;
          transition: opacity 0.25s ease-out;
  -webkit-backface-visibility: hidden;
  will-change: opacity; }

.pswp__share-modal--hidden {
  display: none; }

.pswp__share-tooltip {
  z-index: 1620;
  position: absolute;
  background: #FFF;
  top: 56px;
  border-radius: 2px;
  display: block;
  width: auto;
  right: 44px;
  -webkit-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25);
          box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25);
  -webkit-transform: translateY(6px);
      -ms-transform: translateY(6px);
          transform: translateY(6px);
  -webkit-transition: -webkit-transform 0.25s;
          transition: transform 0.25s;
  -webkit-backface-visibility: hidden;
  will-change: transform; }
  .pswp__share-tooltip a {
    display: block;
    padding: 8px 12px;
    color: var(--black);
    text-decoration: none;
    font-size: 14px;
    line-height: 18px; }
    .pswp__share-tooltip a:hover {
      text-decoration: none;
      color: var(--black); }
    .pswp__share-tooltip a:first-child {
      /* round corners on the first/last list item */
      border-radius: 2px 2px 0 0; }
    .pswp__share-tooltip a:last-child {
      border-radius: 0 0 2px 2px; }

.pswp__share-modal--fade-in {
  opacity: 1; }
  .pswp__share-modal--fade-in .pswp__share-tooltip {
    -webkit-transform: translateY(0);
        -ms-transform: translateY(0);
            transform: translateY(0); }

/* increase size of share links on touch devices */
.pswp--touch .pswp__share-tooltip a {
  padding: 16px 12px; }

a.pswp__share--facebook:before {
  content: '';
  display: block;
  width: 0;
  height: 0;
  position: absolute;
  top: -12px;
  right: 15px;
  border: 6px solid transparent;
  border-bottom-color: #FFF;
  -webkit-pointer-events: none;
  -moz-pointer-events: none;
  pointer-events: none; }

a.pswp__share--facebook:hover {
  background: #3E5C9A;
  color: #FFF; }
  a.pswp__share--facebook:hover:before {
    border-bottom-color: #3E5C9A; }

a.pswp__share--twitter:hover {
  background: #55ACEE;
  color: #FFF; }

a.pswp__share--pinterest:hover {
  background: #CCC;
  color: #CE272D; }

a.pswp__share--download:hover {
  background: #DDD; }

/*

  3. Index indicator ("1 of X" counter)

 */
.pswp__counter {
  position: absolute;
  left: 0;
  top: 0;
  height: 44px;
  font-size: 13px;
  line-height: 44px;
  color: #FFF;
  opacity: 0.75;
  padding: 0 10px; }

/*

  4. Caption

 */
.pswp__caption {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  min-height: 44px; }
  .pswp__caption small {
    font-size: 11px;
    color: #BBB; }

.pswp__caption__center {
  text-align: left;
  max-width: 420px;
  margin: 0 auto;
  font-size: 13px;
  padding: 10px;
  line-height: 20px;
  color: #CCC; }

.pswp__caption--empty {
  display: none; }

/* Fake caption element, used to calculate height of next/prev image */
.pswp__caption--fake {
  visibility: hidden; }

/*

  5. Loading indicator (preloader)

  You can play with it here - http://codepen.io/dimsemenov/pen/yyBWoR

 */
.pswp__preloader {
  width: 44px;
  height: 44px;
  position: absolute;
  top: 0;
  left: 50%;
  margin-left: -22px;
  opacity: 0;
  -webkit-transition: opacity 0.25s ease-out;
          transition: opacity 0.25s ease-out;
  will-change: opacity;
  direction: ltr; }

.pswp__preloader__icn {
  width: 20px;
  height: 20px;
  margin: 12px; }

.pswp__preloader--active {
  opacity: 1; }
  .pswp__preloader--active .pswp__preloader__icn {
    /* We use .gif in browsers that don't support CSS animation */
    background: url(/ig-assets/photoswipe/preloader.gif) 0 0 no-repeat; }

.pswp--css_animation .pswp__preloader--active {
  opacity: 1; }
  .pswp--css_animation .pswp__preloader--active .pswp__preloader__icn {
    -webkit-animation: clockwise 500ms linear infinite;
            animation: clockwise 500ms linear infinite; }
  .pswp--css_animation .pswp__preloader--active .pswp__preloader__donut {
    -webkit-animation: donut-rotate 1000ms cubic-bezier(0.4, 0, 0.22, 1) infinite;
            animation: donut-rotate 1000ms cubic-bezier(0.4, 0, 0.22, 1) infinite; }

.pswp--css_animation .pswp__preloader__icn {
  background: none;
  opacity: 0.75;
  width: 14px;
  height: 14px;
  position: absolute;
  left: 15px;
  top: 15px;
  margin: 0; }

.pswp--css_animation .pswp__preloader__cut {
  /*
      The idea of animating inner circle is based on Polymer ("material") loading indicator
       by Keanu Lee https://blog.keanulee.com/2014/10/20/the-tale-of-three-spinners.html
    */
  position: relative;
  width: 7px;
  height: 14px;
  overflow: hidden; }

.pswp--css_animation .pswp__preloader__donut {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: 14px;
  height: 14px;
  border: 2px solid #FFF;
  border-radius: 50%;
  border-left-color: transparent;
  border-bottom-color: transparent;
  position: absolute;
  top: 0;
  left: 0;
  background: none;
  margin: 0; }

@media screen and (max-width: 1024px) {
  .pswp__preloader {
    position: relative;
    left: auto;
    top: auto;
    margin: 0;
    float: right; } }

@-webkit-keyframes clockwise {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@keyframes clockwise {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@-webkit-keyframes donut-rotate {
  0% {
    -webkit-transform: rotate(0);
            transform: rotate(0); }
  50% {
    -webkit-transform: rotate(-140deg);
            transform: rotate(-140deg); }
  100% {
    -webkit-transform: rotate(0);
            transform: rotate(0); } }

@keyframes donut-rotate {
  0% {
    -webkit-transform: rotate(0);
            transform: rotate(0); }
  50% {
    -webkit-transform: rotate(-140deg);
            transform: rotate(-140deg); }
  100% {
    -webkit-transform: rotate(0);
            transform: rotate(0); } }

/*

  6. Additional styles

 */
/* root element of UI */
.pswp__ui {
  -webkit-font-smoothing: auto;
  visibility: visible;
  opacity: 1;
  z-index: 1550; }

/* top black bar with buttons and "1 of X" indicator */
.pswp__top-bar {
  position: absolute;
  left: 0;
  top: 0;
  height: 44px;
  width: 100%; }

.pswp__caption,
.pswp__top-bar,
.pswp--has_mouse .pswp__button--arrow--left,
.pswp--has_mouse .pswp__button--arrow--right {
  -webkit-backface-visibility: hidden;
  will-change: opacity;
  -webkit-transition: opacity 333ms cubic-bezier(0.4, 0, 0.22, 1);
          transition: opacity 333ms cubic-bezier(0.4, 0, 0.22, 1); }

/* pswp--has_mouse class is added only when two subsequent mousemove events occur */
.pswp--has_mouse .pswp__button--arrow--left,
.pswp--has_mouse .pswp__button--arrow--right {
  visibility: visible; }

.pswp__top-bar,
.pswp__caption {
  background-color: rgba(0, 0, 0, 0.5); }

/* pswp__ui--fit class is added when main image "fits" between top bar and bottom bar (caption) */
.pswp__ui--fit .pswp__top-bar,
.pswp__ui--fit .pswp__caption {
  background-color: rgba(0, 0, 0, 0.3); }

/* pswp__ui--idle class is added when mouse isn't moving for several seconds (JS option timeToIdle) */
.pswp__ui--idle .pswp__top-bar {
  opacity: 0; }

.pswp__ui--idle .pswp__button--arrow--left,
.pswp__ui--idle .pswp__button--arrow--right {
  opacity: 0; }

/*
  pswp__ui--hidden class is added when controls are hidden
  e.g. when user taps to toggle visibility of controls
*/
.pswp__ui--hidden .pswp__top-bar,
.pswp__ui--hidden .pswp__caption,
.pswp__ui--hidden .pswp__button--arrow--left,
.pswp__ui--hidden .pswp__button--arrow--right {
  /* Force paint & create composition layer for controls. */
  opacity: 0.001; }

/* pswp__ui--one-slide class is added when there is just one item in gallery */
.pswp__ui--one-slide .pswp__button--arrow--left,
.pswp__ui--one-slide .pswp__button--arrow--right,
.pswp__ui--one-slide .pswp__counter {
  display: none; }

.pswp__element--disabled {
  display: none !important; }

.pswp--minimal--dark .pswp__top-bar {
  background: none; }
]]></Content>
      <Properties />
    </Stylesheet>
    <Stylesheet>
      <Name>theme-explorer</Name>
      <FileName>lib/theme-explorer.css</FileName>
      <Content><![CDATA[@font-face{font-family:'Lato';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/lato/v17/S6uyw4BMUTPHvxk.ttf) format('truetype')}@font-face{font-family:'Lato';font-style:normal;font-weight:700;font-display:swap;src:url(https://fonts.gstatic.com/s/lato/v17/S6u9w4BMUTPHh6UVew8.ttf) format('truetype')}.theme-explorer-visible .theme-explorer{transform:translateX(0px);box-shadow:-10px 0 20px rgba(0,0,0,0.15)}.theme-explorer-visible .theme-explorer__toggle{color:#1b264f;animation:none}.theme-explorer-visible .theme-explorer__toggle .fa-paint-brush{display:none}.theme-explorer-visible .theme-explorer__toggle .fa-chevron-right{display:block}.theme-explorer{font-family:"Lato",Helvetica,Arial,sans-serif;box-shadow:0 0 0 rgba(0,0,0,0);position:fixed;width:420px;right:0;bottom:0;top:0;z-index:999;transition:all 0.25s ease;transform:translateX(420px);display:flex;flex-direction:column}@media (max-width:460px){.theme-explorer{width:320px;transform:translateX(320px)}}.theme-explorer__inner{position:relative;flex-grow:1;overflow-y:auto;background-color:#f6f4f4;padding:15px}.theme-explorer__save{padding:15px;background-color:white;z-index:3;border-top:1px solid #e9e9eb}.theme-explorer__save .button{background-color:#2bc37c;border-color:#2bc37c;color:white!important;border-radius:3px;padding:8px 16px;font-size:0.9375rem}.theme-explorer__save .button:hover{background-color:#35d289;border-color:#35d289}.theme-explorer__save .button--close{background-color:transparent;border-color:transparent;color:black!important;font-weight:normal;letter-spacing:0;outline:none}.theme-explorer__save .button--close:hover{text-decoration:underline!important;background-color:transparent;border-color:transparent}.theme-explorer__toggle{position:absolute;left:-39px;top:200px;width:40px;height:40px;background-color:white;border-radius:7px 0 0 7px;color:var(--theme);transition:all 0.25s ease;box-shadow:-5px 0 10px rgba(0,0,0,0.05)}.theme-explorer__toggle:focus{outline:none}.theme-explorer__toggle:hover{width:45px;transform:translateX(-5px)}.theme-explorer__toggle .fa-chevron-right{display:none}@media (max-width:768px){.theme-explorer__toggle{left:-35px;width:35px;height:35px}.theme-explorer__toggle:hover{width:40px}}.theme-explorer__nav{display:flex;width:100%;background-color:white;z-index:3;border-bottom:1px solid #e9e9eb}.theme-explorer__nav button{flex-grow:1;flex-basis:0;font-size:0.75rem;font-weight:normal;color:#1b264f;border-left:1px solid #e9e9eb;padding:15px 0 7px;position:relative}.theme-explorer__nav button i{display:block;font-size:1rem;margin-bottom:0.3em}.theme-explorer__nav button:focus,.theme-explorer__nav button:hover{outline:none;color:#2152a3}.theme-explorer__nav button.active{color:#2152a3}.theme-explorer__nav button.active:after{content:"";position:absolute;left:8px;right:8px;height:4px;bottom:0;background-color:#f5c1bc;border-radius:3px 3px 0 0}.theme-explorer__nav button:first-child{border-left:0}.theme-explorer__section{display:none;background-color:white;border-radius:3px;box-shadow:0 1px 1px 0 rgba(0,0,0,0.16);padding:20px;-ms-grid-columns:1fr 1fr;grid-template-columns:1fr 1fr}.theme-explorer__section.active{display:-ms-grid;display:grid;grid-gap:20px}.theme-explorer__item--full{-ms-grid-column-span:2;grid-column-end:span 2}.theme-explorer__input-wrap{display:flex}.theme-explorer__input-wrap input{border-radius:5px 0 0 5px}.theme-explorer__input-unit{background-color:#e9e9eb;min-width:30px;display:flex;align-items:center;justify-content:center;font-weight:bold;font-size:0.75rem;color:#1b264f;border-radius:0 5px 5px 0}.theme-explorer__heading{-ms-grid-column-span:2;grid-column-end:span 2;background:#f6f4f4;font-size:0.75rem;text-align:center;font-weight:bold;padding:2px 0;color:#1b264f}.theme-explorer .cb-wrap{margin-bottom:0}.theme-explorer .cb-wrap span{font-weight:normal;opacity:0.8}.theme-explorer label{font-size:0.875rem;letter-spacing:0;margin-bottom:0.5em;color:#000}.theme-explorer__input{width:100%;border:1px solid rgba(0,0,0,0.1);font-size:0.9375rem;color:black;padding:8px 15px;border-radius:5px;transition:box-shadow 0.3s ease}.theme-explorer__input:focus,.theme-explorer__input:hover{border-color:rgba(0,0,0,0.1)!important;outline:none;box-shadow:none!important}.theme-explorer .theme-explorer__input--text{background-color:rgba(255,255,255,0.1);border-color:rgba(0,0,0,0.1);color:black;font-size:0.9375rem;padding:8px 15px;margin-bottom:0;text-align:left}.theme-explorer select{background-color:white;border-color:rgba(0,0,0,0.1);color:black;padding:8px 15px;margin-bottom:0;height:38px;background-position:calc(100% - 10px) 12px}.theme-explorer select option{color:black}.theme-explorer select:focus{box-shadow:none}]]></Content>
      <Properties />
    </Stylesheet>
    <Stylesheet>
      <Name>reset</Name>
      <FileName>lib/reset.css</FileName>
      <Content><![CDATA[html, body, div, span, applet, object, iframe,h1, h2, h3, h4, h5, h6, p, blockquote, pre,a, abbr, acronym, address, big, cite, code,del, dfn, em, img, ins, kbd, q, s, samp,small, strike, strong, sub, sup, tt, var,b, u, i, center,dl, dt, dd, ol, ul, li,fieldset, form, label, legend,table, caption, tbody, tfoot, thead, tr, th, td,article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary,time, mark, audio, video {	margin: 0;	padding: 0;	border: 0;	font-size: 100%;	font: inherit;	vertical-align: baseline;}/* HTML5 display-role reset for older browsers */article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {	display: block;}body {	line-height: 1;}ol, ul {	list-style: none;}blockquote, q {	quotes: none;}blockquote:before, blockquote:after,q:before, q:after {	content: '';	content: none;}table {	border-collapse: collapse;	border-spacing: 0;}
]]></Content>
      <Properties />
    </Stylesheet>
    <Stylesheet>
      <Name>rte-formats</Name>
      <FileName>rte-formats.css</FileName>
      <Content><![CDATA[#tinymce{font-family: Arial; font-size: 16px; line-height:1.4em; padding-left: 10px!important;padding-right: 10px!important}
h1,h2,h3,h4,h5,h6{margin-top:0}
hr{
	border: none;
    height: 1px;
    background: #ccc;
    margin: 20px 0;
}

/**umb_name:h1*/
h1 {
}

/**umb_name:h2*/
h2 {
}

/**umb_name:h3*/
h3 {
}

/**umb_name:h4*/
h4 {
}

/**umb_name:h5*/
h5 {
}

/**umb_name:h6*/
h6 {
}

/**umb_name:Pre Header*/
h6.pre-head {
	text-transform: uppercase;
	font-size: 13px;
	letter-spacing: .4em;
	margin: 0;
	;
}

/**umb_name:Text*/
p {
	font-size:16px;
}

/**umb_name:Text Big*/
.text-big {
	font-size:20px;
}

/**umb_name:Text Small*/
.text-small {
	font-size:13px;
}

/**umb_name:Quote*/
blockquote {
	font-family:georgia;
	font-style: italic;
	font-size: 18px;
	line-height:1.25em;
	margin:0;
	border-left: 3px solid #ccc;
	padding: 20px;
	;
}

/**umb_name:Image Left*/
.image-left {
	float: left;
	margin: 0 10px 10px 0;
	display:block;
	;
}

/**umb_name:Image Right*/
.image-right {
	float: right;
	margin: 0 0 10px 10px;
	display:block;
	;
}
]]></Content>
      <Properties>
        <Property>
          <Name>h1</Name>
          <Alias>h1</Alias>
          <Value></Value>
        </Property>
        <Property>
          <Name>h2</Name>
          <Alias>h2</Alias>
          <Value></Value>
        </Property>
        <Property>
          <Name>h3</Name>
          <Alias>h3</Alias>
          <Value></Value>
        </Property>
        <Property>
          <Name>h4</Name>
          <Alias>h4</Alias>
          <Value></Value>
        </Property>
        <Property>
          <Name>h5</Name>
          <Alias>h5</Alias>
          <Value></Value>
        </Property>
        <Property>
          <Name>h6</Name>
          <Alias>h6</Alias>
          <Value></Value>
        </Property>
        <Property>
          <Name>Pre Header</Name>
          <Alias>h6.pre-head</Alias>
          <Value>text-transform: uppercase;
font-size: 13px;
letter-spacing: .4em;
margin: 0;
;</Value>
        </Property>
        <Property>
          <Name>Text</Name>
          <Alias>p</Alias>
          <Value>font-size:16px;</Value>
        </Property>
        <Property>
          <Name>Text Big</Name>
          <Alias>.text-big</Alias>
          <Value>font-size:20px;</Value>
        </Property>
        <Property>
          <Name>Text Small</Name>
          <Alias>.text-small</Alias>
          <Value>font-size:13px;</Value>
        </Property>
        <Property>
          <Name>Quote</Name>
          <Alias>blockquote</Alias>
          <Value>font-family:georgia;
font-style: italic;
font-size: 18px;
line-height:1.25em;
margin:0;
border-left: 3px solid #ccc;
padding: 20px;
;</Value>
        </Property>
        <Property>
          <Name>Image Left</Name>
          <Alias>.image-left</Alias>
          <Value>float: left;
margin: 0 10px 10px 0;
display:block;
;</Value>
        </Property>
        <Property>
          <Name>Image Right</Name>
          <Alias>.image-right</Alias>
          <Value>float: right;
margin: 0 0 10px 10px;
display:block;
;</Value>
        </Property>
      </Properties>
    </Stylesheet>
  </Stylesheets>
  <Scripts>
    <Script path="custom.js"><![CDATA[]]></Script>
    <Script path="ig-app.js"><![CDATA[// Igloo Theme 4 //
var body = document.body;
var IglooApp = function () {
    /*======================================
      #Set browser class
    ======================================*/
    try {
        navigator.browserSpecs = (function () {
            var ua = navigator.userAgent, tem, M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
            if (/trident/i.test(M[1])) {
                tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
                return { name: 'IE', version: (tem[1] || '') };
            }
            if (M[1] === 'Chrome') {
                tem = ua.match(/\b(OPR|Edge)\/(\d+)/);
                if (tem != null)
                    return { name: tem[1].replace('OPR', 'Opera'), version: tem[2] };
            }
            M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
            if ((tem = ua.match(/version\/(\d+)/i)) != null)
                M.splice(1, 1, tem[1]);
            return { name: M[0], version: M[1] };
        })();
        (function () {
            var OSName = "os";
            if (navigator.appVersion.indexOf("Win") != -1)
                OSName = "windows";
            else if (navigator.appVersion.indexOf("Mac") != -1)
                OSName = "macos";
            else if (navigator.appVersion.indexOf("X11") != -1)
                OSName = "unix";
            else if (navigator.appVersion.indexOf("Linux") != -1)
                OSName = "linux";
            body.classList.add(OSName);
            if ((navigator.userAgent.indexOf("Opera") || navigator.userAgent.indexOf('OPR')) != -1) {
                body.classList.add('browser-opera');
            }
            else if (navigator.userAgent.indexOf("Chrome") != -1) {
                body.classList.add('browser-chrome');
            }
            else if (navigator.userAgent.indexOf("Safari") != -1) {
                body.classList.add('browser-safari');
            }
            else if (navigator.userAgent.indexOf("Firefox") != -1) {
                body.classList.add('browser-firefox');
            }
            else if ((navigator.userAgent.indexOf("MSIE") != -1) || (!!document.documentMode == true)) {
                body.classList.add('browser-explorer');
            }
            else if (navigator.userAgent.indexOf("Edge") != -1) {
                body.classList.add('browser-edge');
            }
            if (navigator.browserSpecs.version) {
                body.classList.add('browser-version-' + navigator.browserSpecs.version);
            }
            var el = document.createElement('div');
            el.setAttribute('ongesturestart', 'return;');
            if (typeof el.ongesturestart == "function") {
                body.classList.add("touch");
            }
            else {
                body.classList.add("no-touch");
            }
        })();
    }
    catch (err) {
        console.error(err);
    }
    /*======================================
      #Set .scroll class on scroll
    ======================================*/
    //Add the .scroll class to body when passing the io-hook placed over the header
    var ioHook = document.querySelector(".io-hook");
    if (ioHook) {
        var observer = new IntersectionObserver(function (entries) {
            if (entries[0].boundingClientRect.y < 0) {
                body.classList.add('scroll');
            }
            else {
                body.classList.remove('scroll');
            }
        });
        observer.observe(ioHook);
    }
    /*======================================
      #Toggle mobile nav
    ======================================*/
    (function () {
        //Toggle mobile navigation
        var hamburger = document.querySelector(".hamburger");
        if (hamburger) {
            hamburger.addEventListener("click", function (e) {
                e.preventDefault();
                body.classList.toggle("mobile-nav-visible");
            });
        }
        // Toggle second level mobile navigation
        var expand = document.querySelectorAll(".main-nav ul li a .expand");
        expand.forEach(function (item) {
            item.addEventListener("click", function (e) {
                e.preventDefault();
                var ul = item.closest("li").querySelector("ul");
                item.classList.toggle("open");
                ul.classList.toggle("mobile-open");
                if (ul.style.display == 'block') {
                    ul.style.display = 'none';
                }
                else {
                    ul.style.display = 'block';
                }
            });
        });
    })();
    /*======================================
      #Adjust offscreen navigation
    ======================================*/
    window.addEventListener('load', function () {
        var navItems = document.querySelectorAll(".main-nav .main-nav__ul .main-nav__ul");
        var screenWidth = window.outerWidth;
        navItems.forEach(function (item) {
            var rightEdge = item.getBoundingClientRect().right;
            // Change position of dropdown if it is positioned outside viewport
            if (rightEdge > screenWidth) {
                item.classList.add("go-right");
            }
        });
    });
    /*======================================
      #Navigation touch support
    ======================================*/
    (function () {
        var items = document.querySelectorAll(".main-nav ul li .main-nav__a, .pre-top__list li a");
        var navAllLi = document.querySelectorAll(".main-nav__li, .pre-top__list li");
        items.forEach(function (item) {
            item.addEventListener("focus", handler, { passive: true });
            item.addEventListener("touchstart", handler, { passive: true });
        });
        function handler(e) {
            var navLi = e.target.parentElement;
            var dropExist = navLi.querySelector("ul");
            if (!navLi.classList.contains('touch-open') && dropExist && !body.classList.contains("mobile-nav-visible")) {
                e.preventDefault();
                var parentLis_1 = getParents(navLi, ".touch-open");
                navAllLi.forEach(function (liEl) {
                    if (parentLis_1[0] != liEl && parentLis_1[1] != liEl) {
                        liEl.classList.remove('touch-open');
                    }
                });
                navLi.classList.add('touch-open');
            }
            else if (dropExist) {
                navAllLi.forEach(function (liEl) {
                    liEl.classList.remove('touch-open');
                });
            }
        }
    })();
    /*======================================
      #Responsive video
    ======================================*/
    fluidvids.init({
        selector: ['iframe', 'object'],
        players: ['www.youtube.com', 'player.vimeo.com']
    });
    /*======================================
      #Googlemap
    ======================================*/
    (function () {
        var maps = document.querySelectorAll(".map .map__canvas");
        maps.forEach(function (map) {
            var mapCanvas = map, lat = map.dataset.lat, long = map.dataset.long, pin = map.dataset.pin, zoom = parseInt(map.dataset.zoom);
            var mapOptions = {
                center: new google.maps.LatLng(lat, long),
                zoom: zoom,
                scrollwheel: false
            };
            var mapobj = new google.maps.Map(mapCanvas, mapOptions);
            if (pin == "no") {
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(lat, long),
                    map: mapobj
                });
            }
            else {
                var image = {
                    url: pin,
                    scaledSize: new google.maps.Size(50, 50)
                };
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(lat, long),
                    map: mapobj,
                    optimized: false,
                    icon: image
                });
            }
        });
    })();
    /*======================================
      #Instagram
    ======================================*/
    (function () {
        var instagramFeeds = document.querySelectorAll("#instafeed");
        instagramFeeds.forEach(function (instafeed) {
            var count = instafeed.dataset.count, link = instafeed.dataset.link, icon = instafeed.dataset.icon, token = instafeed.dataset.token, username = instafeed.dataset.username, template = "", linkstart = "", linkend = "", iconlink = "";
            if (link == "1") {
                linkstart = '<a href="{{link}}" class="instagram-image-link" rel="noopener" target="_blank">';
                linkend = '</a>';
            }
            if (icon == "1") {
                iconlink = '<a target="_blank" rel="noopener" class="instagram-user-link" title="Instagram: @' + username + '" href="https://www.instagram.com/' + username + '"><i class="fa fa-instagram" aria-hidden="true"></a></i>';
            }
            template = '<div class="gallery__item"><figure>' + iconlink + '' + linkstart + '<img src="{{image}}" alt="{{caption}}">' + linkend + '</figure></div>';
            // Get images
            var feed = new Instafeed({
                accessToken: token,
                limit: parseInt(count),
                template: template
            });
            feed.run();
        });
    })();
    /*======================================
      #PhotoSwipe gallery
    ======================================*/
    (function () {
        var gallery = document.querySelectorAll(".gallery, .pswp-gallery");
        var pswp = document.querySelector(".pswp");
        gallery.forEach(function (pic) {
            var getItems = function () {
                var items = [];
                var aItems = pic.querySelectorAll(".gallery__link");
                aItems.forEach(function (aItem) {
                    var href = aItem.getAttribute("href");
                    var size = aItem.getAttribute("data-size").split('x');
                    var width = size[0];
                    var height = size[1];
                    var item = {
                        src: href,
                        w: width,
                        h: height
                    };
                    items.push(item);
                });
                return items;
            };
            var items = getItems();
            var figures = pic.querySelectorAll("figure");
            figures.forEach(function (figure, index) {
                figure.addEventListener("click", function (e) {
                    e.preventDefault();
                    var options = {
                        index: index,
                        bgOpacity: 0.9,
                        showHideOpacity: true,
                        shareEl: false,
                        getThumbBoundsFn: function (index) {
                            var thumbnail = pic.querySelectorAll('.gallery__link img')[index];
                            var pageYScroll = window.pageYOffset || document.documentElement.scrollTop;
                            var rect = thumbnail.getBoundingClientRect();
                            return { x: rect.left, y: rect.top + pageYScroll, w: rect.width };
                        }
                    };
                    // Initialize PhotoSwipe
                    var lightBox = new PhotoSwipe(pswp, PhotoSwipeUI_Default, items, options);
                    lightBox.init();
                });
            });
        });
    })();
    /*======================================
      #Accordion
    ======================================*/
    (function () {
        var accItems = document.querySelectorAll(".acc__head");
        accItems.forEach(function (acc) {
            acc.addEventListener("click", function (e) {
                e.preventDefault();
                acc.closest(".acc").classList.toggle("acc--open");
            });
        });
    })();
    /*======================================
      #Share modals
    ======================================*/
    (function () {
        var shareButtons = document.querySelectorAll(".share-list a[data-width]");
        shareButtons.forEach(function (item) {
            item.addEventListener("click", function (e) {
                if (window.outerWidth > 768) {
                    e.preventDefault();
                    var targetUrl = item.getAttribute("href");
                    var winWidth = item.dataset.width;
                    var winHeight = item.dataset.height;
                    PopupCenter(targetUrl, 'sharer', winWidth, winHeight);
                }
            });
        });
        function PopupCenter(url, title, w, h) {
            var dualScreenLeft = window.screenLeft;
            var dualScreenTop = window.screenTop;
            var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
            var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;
            var left = ((width / 2) - (w / 2)) + dualScreenLeft;
            var top = ((height / 2) - (h / 2)) + dualScreenTop;
            var newWindow = window.open(url, title, 'scrollbars=yes, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);
            if (window.focus) {
                newWindow.focus();
            }
        }
    })();
    /*======================================
      #Contact Form
    ======================================*/
    (function () {
        var contactForms = document.querySelectorAll("#contact-form");
        contactForms.forEach(function (item) {
            item.addEventListener("submit", function (e) {
                e.preventDefault();
                var form = this;
                if (form.checkValidity()) {
                    form.querySelector(".button").classList.add("button--loading");
                    var formData = new FormData(form);
                    var url = form.getAttribute("action");
                    var object = {};
                    formData.forEach(function (value, key) { object[key] = value; });
                    axios({
                        url: url,
                        method: "POST",
                        data: object
                    }).then(function (response) {
                        if (response.data.success) {
                            form.innerHTML = '<svg aria-hidden="true" class="checkmark-svg" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52"><circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none"/><path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8"/></svg><h4 class="success-color text-center">' + form.dataset.thankyoumessage + '</h4>';
                        }
                        else {
                            form.innerHTML = form.innerHTML + '<div class="col-100 text-center"><p><strong class="error-color">' + response.data.message + '</strong></p></div>';
                        }
                    })["catch"](function (error) {
                        console.log(error);
                    });
                }
            });
        });
    })();
    /*======================================
      #Newsletter
    ======================================*/
    (function () {
        var newsletterForms = document.querySelectorAll(".newsletter form");
        newsletterForms.forEach(function (item) {
            item.addEventListener("submit", function (e) {
                e.preventDefault();
                var form = this;
                if (form.checkValidity()) {
                    form.querySelector(".button").classList.add("button--loading");
                    var formData = new FormData(form);
                    var url = form.getAttribute("action");
                    var object = {};
                    formData.forEach(function (value, key) { object[key] = value; });
                    axios({
                        url: url,
                        method: "POST",
                        contentType: "application/json; charset=utf-8",
                        dataType: "JSON",
                        data: object
                    }).then(function (response) {
                        if (response.data.success) {
                            form.parentElement.innerHTML = '<svg aria-hidden="true" class="checkmark-svg" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52"><circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none"/><path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8"/></svg><h4 class="success-color text-center">' + form.dataset.thankyoumessage + '</h4>';
                        }
                        else {
                            form.parentElement.innerHTML = form.parentElement.innerHTML + '<div class="col-100 text-center"><p><strong class="error-color">' + response.data.message + '</strong></p></div>';
                        }
                    });
                }
            });
        });
    })();
    /*======================================
      #Search Header
    ======================================*/
    (function () {
        var toggleSearchButtons = document.querySelectorAll(".toggle-search a, .show-search, .search__close, .search-overlay");
        var searchInput = document.querySelector(".search__stage .search__input");
        var autocomplete = document.querySelector(".search__autocomplete");
        var loader = document.querySelector(".search__loader");
        // Toogle search modal
        toggleSearchButtons.forEach(function (toggleSearchButton) {
            toggleSearchButton.addEventListener("click", function (e) {
                e.preventDefault();
                body.classList.toggle("search-visible");
                //Set focus to search field
                if (body.classList.contains("search-visible")) {
                    setTimeout(function () {
                        searchInput.focus();
                    }, 400);
                }
            });
        });
        // Close search model on ESC
        document.addEventListener("keyup", function (e) {
            if (e.keyCode == 27) {
                body.classList.remove("search-visible");
            }
        });
        // Autocomplete Header
        var searchTimeout = null;
        if (searchInput) {
            searchInput.addEventListener("input", function (e) {
                var query = searchInput.value;
                // Show/hide search results
                if (query.length > 2) {
                    autocomplete.style.display = "block";
                }
                else {
                    autocomplete.style.display = "none";
                }
                // Show loader
                loader.classList.add("loading");
                if (searchTimeout != null) {
                    clearTimeout(searchTimeout);
                }
                // Do the search!
                searchTimeout = setTimeout(function () {
                    doSearch(query);
                }, 300);
            });
        }
    })();
    function doSearch(query) {
        var searchTimeout = null;
        var loader = document.querySelector(".search__loader");
        var noResults = document.querySelector(".search__no-results");
        var button = document.querySelector(".search__autocomplete .button");
        var suggest = document.querySelector(".search__suggest");
        var resultCount = document.querySelector(".search__result-count");
        axios({
            url: "/Umbraco/Api/IglooSearch/Search?Query=" + query + "&Amount=6&Page=1&SiteId=" + body.dataset.siteid + "&Culture=" + body.dataset.culture,
            method: "GET"
        }).then(function (response) {
            // Clear suggest list
            suggest.innerHTML = "";
            if (response.data.result.length == 0) {
                button.style.display = "none";
                suggest.style.display = "none";
                noResults.style.display = "block";
            }
            else {
                button.style.display = "block";
                suggest.style.display = "block";
                noResults.style.display = "none";
                for (var i = 0; i < response.data.result.length; i++) {
                    suggest.innerHTML += '<li><a href="' + response.data.result[i].url + '"><span class="search__suggest-info"><span class="search__suggest-title">' + response.data.result[i].title + '</span><span class="search__suggest-desc">' + response.data.result[i].description + '</span></span></a></li>';
                }
            }
            // Hide loader
            loader.classList.remove("loading");
            // Update result count
            resultCount.innerHTML = ("(" + response.data.resultCount + ")");
        })["catch"](function () {
            loader.classList.remove("loading");
        });
    }
    /*======================================
      #Full Search
    ======================================*/
    (function () {
        var searchInput = document.querySelector(".search-block .search__form .search__input");
        var pager = document.querySelector(".search-pagination-container button");
        if (searchInput) {
            //Preform search on page load
            doFullSearch(searchInput.value, 1);
            //Preform search on input change
            searchInput.addEventListener("input", function (e) {
                doFullSearch(searchInput.value, 1);
                document.querySelector(".query").innerHTML = '"' + searchInput.value + '"';
            });
            //pager
            pager.addEventListener("click", function (e) {
                pager.dataset.currentPage = (pager.dataset.currentPage ? parseInt(pager.dataset.currentPage) + 1 : 2).toString();
                doFullSearch(searchInput.value, parseInt(pager.dataset.currentPage));
            });
        }
    })();
    function doFullSearch(query, page) {
        var resultLabelSingle = document.querySelector(".search-results-count-label.single");
        var resultLabelMultible = document.querySelector(".search-results-count-label.multi");
        var resultLabelCount = document.querySelector(".search-results-count");
        var resultLabelQuery = document.querySelector(".search-result-info strong.query");
        var searchEmpty = document.querySelector(".search-empty");
        var pager = document.querySelector(".search-pagination-container");
        var amountPerPageElement = document.querySelector(".search-pagination-amount");
        var amountPerPage = parseInt(amountPerPageElement.value);
        axios({
            url: "/Umbraco/Api/IglooSearch/Search?Query=" + query + "&Amount=" + amountPerPage + "&Page=" + page + "&SiteId=" + body.dataset.siteid + "&Culture=" + body.dataset.culture + "&ExtendedModel=true",
            method: "GET"
        }).then(function (response) {
            if (response.data.resultCount == 1) {
                resultLabelSingle.style.display = 'inline-block';
                resultLabelMultible.style.display = 'none';
            }
            else {
                resultLabelMultible.style.display = 'inline-block';
                resultLabelSingle.style.display = 'none';
            }
            resultLabelCount.textContent = '"' + query + '"';
            resultLabelCount.textContent = response.data.resultCount;
            // No results
            if (response.data.resultCount == 0) {
                searchEmpty.style.display = 'block';
                document.querySelectorAll('.search-result, .search-result-container').forEach(function (e) { return e.remove(); });
                pager.style.display = 'none';
            }
            else {
                searchEmpty.style.display = 'none';
                if (page == 1) {
                    document.querySelectorAll('.search-result, .search-result-container').forEach(function (e) { return e.remove(); });
                }
                var template = document.querySelector(".search-results template");
                for (var i = 0; i < response.data.result.length; i++) {
                    var clone = template.content.cloneNode(true);
                    if (response.data.result[i].imageUrl && clone.querySelector("img")) {
                        clone.querySelector("img").setAttribute("data-src", response.data.result[i].imageUrl + "?anchor=center&amp;mode=crop&amp;width=500&amp;height=350&amp;rnd=132154250515800000");
                    }
                    clone.querySelectorAll("a").forEach(function (e) { return e.setAttribute("href", response.data.result[i].url); });
                    clone.querySelector("h3 a").textContent = response.data.result[i].title;
                    clone.querySelector("p").textContent = response.data.result[i].description;
                    template.parentElement.appendChild(clone);
                }
                if (document.querySelectorAll(".search-result, .search-result-container").length < response.data.resultCount) {
                    pager.style.display = 'block';
                }
                else {
                    pager.style.display = 'none';
                }
            }
            resultLabelCount.innerHTML = response.data.resultCount;
        })["catch"](function () {
        });
    }
    /*======================================
      #Cookie Consent
    ======================================*/
    (function () {
        var cookieConsent = document.querySelector(".cookie-consent");
        if (cookieConsent) {
            var cookieConsentButton = cookieConsent.querySelector(".button");
            if (cookieConsentButton) {
                // Add a cookie for 365days when clicking dismiss button
                cookieConsentButton.addEventListener("click", function (e) {
                    e.preventDefault();
                    cookieConsent.remove();
                    setCookie("cookie-consent", "true", 365);
                });
            }
            // Show cookie modal if there is no cookie
            if (getCookie("cookie-consent") == "") {
                cookieConsent.classList.remove("hide--important");
            }
        }
    })();
    /*======================================
      #Tabs
    ======================================*/
    (function () {
        function setTab(hash, scroll) {
            // Get the current tab nav that matches hash
            var item = document.querySelector(".tabs__nav a[href='" + hash + "']");
            if (item) {
                // Hit the road if current tab is already active
                if (item.classList.contains("acitve")) {
                    return;
                }
                // Get widget scope
                var widget_1 = item.closest(".tabs");
                // Remove active class from all nav items
                var navs = item.closest("ul").querySelectorAll("a");
                navs.forEach(function (nav) {
                    nav.classList.remove("active");
                });
                // Set active class to selected nav item
                item.classList.add("active");
                // Hide all tabs
                var tabs = widget_1.querySelectorAll(".tab");
                tabs.forEach(function (tab) {
                    tab.classList.remove("tab--active");
                });
                // Show selected tab
                var target = item.getAttribute("href");
                var targetTab = widget_1.querySelector(target);
                targetTab.classList.add("tab--active");
                //Scroll to widget
                if (scroll) {
                    var header_1 = document.querySelector(".top");
                    setTimeout(function () {
                        window.scrollTo({ 'behavior': 'smooth', 'left': 0, 'top': (widget_1.offsetTop - header_1.offsetHeight) });
                    }, 100);
                }
            }
        }
        //Change tab on tab-nav click
        var tabNavigationItems = document.querySelectorAll(".tabs__nav a");
        tabNavigationItems.forEach(function (item) {
            item.addEventListener("click", function (e) {
                e.preventDefault();
                history.pushState("", "", item.getAttribute("href"));
                setTab(item.getAttribute("href"), false);
            });
        });
        //Check if hash exist and contains "tab--"
        if (window.location.hash && window.location.hash.indexOf("tab--") !== -1) {
            //Set active tab and enable scroll
            setTab(window.location.hash, true);
        }
        //Check onpopstate contains "tab--"
        window.onpopstate = function (e) {
            if (window.location.hash.indexOf("tab--") !== -1) {
                setTab(window.location.hash, false);
            }
        };
    })();
    /*======================================
      #Scroll Animate Observer
    ======================================*/
    var scrollSections = document.querySelectorAll('section, .grid:not(.grid--nav), .animate-item');
    var scrollObserverSettings = {
        threshold: 0,
        rootMargin: '-5% 0% -25% 0%'
    };
    var scrollObserver = new IntersectionObserver(function (entries) {
        entries.forEach(function (entry) {
            if (entry.isIntersecting) {
                entry.target.classList.add('in-view');
                setTimeout(function () {
                    entry.target.classList.remove("animate");
                    scrollObserver.unobserve(entry.target);
                }, 1500);
            }
        });
    }, scrollObserverSettings);
    scrollSections.forEach(function (section) {
        scrollObserver.observe(section);
    });
    /*======================================
      #Navigation Toggle
    ======================================*/
    (function () {
        var navigationButtons = document.querySelectorAll(".navigation button");
        if (navigationButtons) {
            navigationButtons.forEach(function (item) {
                item.addEventListener("click", function (e) {
                    e.preventDefault();
                    // Toggle open class to button and li
                    item.classList.toggle("open");
                    item.closest("li").classList.toggle("open");
                    // Toggle aria-expanded on button
                    if (item.classList.contains("open")) {
                        item.setAttribute("aria-expanded", "true");
                    }
                    else {
                        item.setAttribute("aria-expanded", "false");
                    }
                });
            });
        }
        var selectedNavigationItems = document.querySelectorAll(".navigation[data-expand='true'] .selected");
        selectedNavigationItems.forEach(function (item) {
            var parentsLi = getParents(item, "li");
            parentsLi.forEach(function (li) {
                // Expand all parents to selected item
                li.classList.add("open");
                var btn = li.querySelector("button");
                if (btn) {
                    btn.classList.add("open");
                    btn.setAttribute("aria-expanded", "true");
                }
            });
            // Open child to selected item
            item.classList.add("open");
            var btn = item.querySelector("button");
            if (btn) {
                btn.classList.add("open");
                btn.setAttribute("aria-expanded", "true");
            }
        });
    })();
    /*======================================
      # Toggle Password visibility
    ======================================*/
    var togglePasswordButtons = document.querySelectorAll(".password-input__show, .password-input__hide");
    togglePasswordButtons.forEach(function (button) {
        button.addEventListener("click", function (e) {
            e.preventDefault();
            var wrap = button.closest(".password-input");
            var input = wrap.querySelector("input");
            var showButton = wrap.querySelector(".password-input__show");
            var hideButton = wrap.querySelector(".password-input__hide");
            if (input.type === "password") {
                input.type = "text";
                showButton.style.display = "none";
                hideButton.style.display = "block";
            }
            else {
                input.type = "password";
                showButton.style.display = "block";
                hideButton.style.display = "none";
            }
        });
    });
    /*======================================
      #Page loaded
    ======================================*/
    window.addEventListener('load', function () {
        document.body.classList.remove("page-loading");
        document.body.classList.add("page-loaded");
    });
    /*======================================
      #Helpers
    ======================================*/
    //Creates cookie
    function setCookie(cname, cvalue, exdays) {
        var d = new Date();
        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
        var expires = "expires=" + d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }
    ;
    //Returns cookie
    function getCookie(cname) {
        var name = cname + "=";
        var decodedCookie = decodeURIComponent(document.cookie);
        var ca = decodedCookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return "";
    }
    ;
    // Returns all matching parents to elm by selector
    function getParents(elem, selector) {
        // Element.matches() polyfill
        if (!Element.prototype.matches) {
            Element.prototype.matches =
                Element.prototype.matchesSelector ||
                    Element.prototype.mozMatchesSelector ||
                    Element.prototype.msMatchesSelector ||
                    Element.prototype.oMatchesSelector ||
                    Element.prototype.webkitMatchesSelector ||
                    function (s) {
                        var matches = (this.document || this.ownerDocument).querySelectorAll(s), i = matches.length;
                        while (--i >= 0 && matches.item(i) !== this) { }
                        return i > -1;
                    };
        }
        // Set up a parent array
        var parents = [];
        // Push each parent element to the array
        for (; elem && elem !== document; elem = elem.parentNode) {
            if (selector) {
                if (elem.matches(selector)) {
                    parents.push(elem);
                }
                continue;
            }
            parents.push(elem);
        }
        // Return our parent array
        return parents;
    }
    ;
};
IglooApp();
]]></Script>
    <Script path="lib/axios.min.js"><![CDATA[!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.axios=t():e.axios=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return e[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){e.exports=n(1)},function(e,t,n){"use strict";function r(e){var t=new s(e),n=i(s.prototype.request,t);return o.extend(n,s.prototype,t),o.extend(n,t),n}var o=n(2),i=n(3),s=n(4),a=n(22),u=n(10),c=r(u);c.Axios=s,c.create=function(e){return r(a(c.defaults,e))},c.Cancel=n(23),c.CancelToken=n(24),c.isCancel=n(9),c.all=function(e){return Promise.all(e)},c.spread=n(25),e.exports=c,e.exports.default=c},function(e,t,n){"use strict";function r(e){return"[object Array]"===j.call(e)}function o(e){return"undefined"==typeof e}function i(e){return null!==e&&!o(e)&&null!==e.constructor&&!o(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}function s(e){return"[object ArrayBuffer]"===j.call(e)}function a(e){return"undefined"!=typeof FormData&&e instanceof FormData}function u(e){var t;return t="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer}function c(e){return"string"==typeof e}function f(e){return"number"==typeof e}function p(e){return null!==e&&"object"==typeof e}function d(e){return"[object Date]"===j.call(e)}function l(e){return"[object File]"===j.call(e)}function h(e){return"[object Blob]"===j.call(e)}function m(e){return"[object Function]"===j.call(e)}function y(e){return p(e)&&m(e.pipe)}function g(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams}function v(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}function x(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)}function w(e,t){if(null!==e&&"undefined"!=typeof e)if("object"!=typeof e&&(e=[e]),r(e))for(var n=0,o=e.length;n<o;n++)t.call(null,e[n],n,e);else for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.call(null,e[i],i,e)}function b(){function e(e,n){"object"==typeof t[n]&&"object"==typeof e?t[n]=b(t[n],e):t[n]=e}for(var t={},n=0,r=arguments.length;n<r;n++)w(arguments[n],e);return t}function E(){function e(e,n){"object"==typeof t[n]&&"object"==typeof e?t[n]=E(t[n],e):"object"==typeof e?t[n]=E({},e):t[n]=e}for(var t={},n=0,r=arguments.length;n<r;n++)w(arguments[n],e);return t}function S(e,t,n){return w(t,function(t,r){n&&"function"==typeof t?e[r]=C(t,n):e[r]=t}),e}var C=n(3),j=Object.prototype.toString;e.exports={isArray:r,isArrayBuffer:s,isBuffer:i,isFormData:a,isArrayBufferView:u,isString:c,isNumber:f,isObject:p,isUndefined:o,isDate:d,isFile:l,isBlob:h,isFunction:m,isStream:y,isURLSearchParams:g,isStandardBrowserEnv:x,forEach:w,merge:b,deepMerge:E,extend:S,trim:v}},function(e,t){"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},function(e,t,n){"use strict";function r(e){this.defaults=e,this.interceptors={request:new s,response:new s}}var o=n(2),i=n(5),s=n(6),a=n(7),u=n(22);r.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{},e.url=arguments[0]):e=e||{},e=u(this.defaults,e),e.method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=[a,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){t.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){t.push(e.fulfilled,e.rejected)});t.length;)n=n.then(t.shift(),t.shift());return n},r.prototype.getUri=function(e){return e=u(this.defaults,e),i(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},o.forEach(["delete","get","head","options"],function(e){r.prototype[e]=function(t,n){return this.request(o.merge(n||{},{method:e,url:t}))}}),o.forEach(["post","put","patch"],function(e){r.prototype[e]=function(t,n,r){return this.request(o.merge(r||{},{method:e,url:t,data:n}))}}),e.exports=r},function(e,t,n){"use strict";function r(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var o=n(2);e.exports=function(e,t,n){if(!t)return e;var i;if(n)i=n(t);else if(o.isURLSearchParams(t))i=t.toString();else{var s=[];o.forEach(t,function(e,t){null!==e&&"undefined"!=typeof e&&(o.isArray(e)?t+="[]":e=[e],o.forEach(e,function(e){o.isDate(e)?e=e.toISOString():o.isObject(e)&&(e=JSON.stringify(e)),s.push(r(t)+"="+r(e))}))}),i=s.join("&")}if(i){var a=e.indexOf("#");a!==-1&&(e=e.slice(0,a)),e+=(e.indexOf("?")===-1?"?":"&")+i}return e}},function(e,t,n){"use strict";function r(){this.handlers=[]}var o=n(2);r.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},r.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},r.prototype.forEach=function(e){o.forEach(this.handlers,function(t){null!==t&&e(t)})},e.exports=r},function(e,t,n){"use strict";function r(e){e.cancelToken&&e.cancelToken.throwIfRequested()}var o=n(2),i=n(8),s=n(9),a=n(10);e.exports=function(e){r(e),e.headers=e.headers||{},e.data=i(e.data,e.headers,e.transformRequest),e.headers=o.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),o.forEach(["delete","get","head","post","put","patch","common"],function(t){delete e.headers[t]});var t=e.adapter||a.adapter;return t(e).then(function(t){return r(e),t.data=i(t.data,t.headers,e.transformResponse),t},function(t){return s(t)||(r(e),t&&t.response&&(t.response.data=i(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)})}},function(e,t,n){"use strict";var r=n(2);e.exports=function(e,t,n){return r.forEach(n,function(n){e=n(e,t)}),e}},function(e,t){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t,n){"use strict";function r(e,t){!i.isUndefined(e)&&i.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}function o(){var e;return"undefined"!=typeof XMLHttpRequest?e=n(12):"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process)&&(e=n(12)),e}var i=n(2),s=n(11),a={"Content-Type":"application/x-www-form-urlencoded"},u={adapter:o(),transformRequest:[function(e,t){return s(t,"Accept"),s(t,"Content-Type"),i.isFormData(e)||i.isArrayBuffer(e)||i.isBuffer(e)||i.isStream(e)||i.isFile(e)||i.isBlob(e)?e:i.isArrayBufferView(e)?e.buffer:i.isURLSearchParams(e)?(r(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):i.isObject(e)?(r(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};u.headers={common:{Accept:"application/json, text/plain, */*"}},i.forEach(["delete","get","head"],function(e){u.headers[e]={}}),i.forEach(["post","put","patch"],function(e){u.headers[e]=i.merge(a)}),e.exports=u},function(e,t,n){"use strict";var r=n(2);e.exports=function(e,t){r.forEach(e,function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])})}},function(e,t,n){"use strict";var r=n(2),o=n(13),i=n(5),s=n(16),a=n(19),u=n(20),c=n(14);e.exports=function(e){return new Promise(function(t,f){var p=e.data,d=e.headers;r.isFormData(p)&&delete d["Content-Type"];var l=new XMLHttpRequest;if(e.auth){var h=e.auth.username||"",m=e.auth.password||"";d.Authorization="Basic "+btoa(h+":"+m)}var y=s(e.baseURL,e.url);if(l.open(e.method.toUpperCase(),i(y,e.params,e.paramsSerializer),!0),l.timeout=e.timeout,l.onreadystatechange=function(){if(l&&4===l.readyState&&(0!==l.status||l.responseURL&&0===l.responseURL.indexOf("file:"))){var n="getAllResponseHeaders"in l?a(l.getAllResponseHeaders()):null,r=e.responseType&&"text"!==e.responseType?l.response:l.responseText,i={data:r,status:l.status,statusText:l.statusText,headers:n,config:e,request:l};o(t,f,i),l=null}},l.onabort=function(){l&&(f(c("Request aborted",e,"ECONNABORTED",l)),l=null)},l.onerror=function(){f(c("Network Error",e,null,l)),l=null},l.ontimeout=function(){var t="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),f(c(t,e,"ECONNABORTED",l)),l=null},r.isStandardBrowserEnv()){var g=n(21),v=(e.withCredentials||u(y))&&e.xsrfCookieName?g.read(e.xsrfCookieName):void 0;v&&(d[e.xsrfHeaderName]=v)}if("setRequestHeader"in l&&r.forEach(d,function(e,t){"undefined"==typeof p&&"content-type"===t.toLowerCase()?delete d[t]:l.setRequestHeader(t,e)}),r.isUndefined(e.withCredentials)||(l.withCredentials=!!e.withCredentials),e.responseType)try{l.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&l.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&l.upload&&l.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then(function(e){l&&(l.abort(),f(e),l=null)}),void 0===p&&(p=null),l.send(p)})}},function(e,t,n){"use strict";var r=n(14);e.exports=function(e,t,n){var o=n.config.validateStatus;!o||o(n.status)?e(n):t(r("Request failed with status code "+n.status,n.config,null,n.request,n))}},function(e,t,n){"use strict";var r=n(15);e.exports=function(e,t,n,o,i){var s=new Error(e);return r(s,t,n,o,i)}},function(e,t){"use strict";e.exports=function(e,t,n,r,o){return e.config=t,n&&(e.code=n),e.request=r,e.response=o,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},function(e,t,n){"use strict";var r=n(17),o=n(18);e.exports=function(e,t){return e&&!r(t)?o(e,t):t}},function(e,t){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t,n){"use strict";var r=n(2),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,i,s={};return e?(r.forEach(e.split("\n"),function(e){if(i=e.indexOf(":"),t=r.trim(e.substr(0,i)).toLowerCase(),n=r.trim(e.substr(i+1)),t){if(s[t]&&o.indexOf(t)>=0)return;"set-cookie"===t?s[t]=(s[t]?s[t]:[]).concat([n]):s[t]=s[t]?s[t]+", "+n:n}}),s):s}},function(e,t,n){"use strict";var r=n(2);e.exports=r.isStandardBrowserEnv()?function(){function e(e){var t=e;return n&&(o.setAttribute("href",t),t=o.href),o.setAttribute("href",t),{href:o.href,protocol:o.protocol?o.protocol.replace(/:$/,""):"",host:o.host,search:o.search?o.search.replace(/^\?/,""):"",hash:o.hash?o.hash.replace(/^#/,""):"",hostname:o.hostname,port:o.port,pathname:"/"===o.pathname.charAt(0)?o.pathname:"/"+o.pathname}}var t,n=/(msie|trident)/i.test(navigator.userAgent),o=document.createElement("a");return t=e(window.location.href),function(n){var o=r.isString(n)?e(n):n;return o.protocol===t.protocol&&o.host===t.host}}():function(){return function(){return!0}}()},function(e,t,n){"use strict";var r=n(2);e.exports=r.isStandardBrowserEnv()?function(){return{write:function(e,t,n,o,i,s){var a=[];a.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&a.push("expires="+new Date(n).toGMTString()),r.isString(o)&&a.push("path="+o),r.isString(i)&&a.push("domain="+i),s===!0&&a.push("secure"),document.cookie=a.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}()},function(e,t,n){"use strict";var r=n(2);e.exports=function(e,t){t=t||{};var n={},o=["url","method","params","data"],i=["headers","auth","proxy"],s=["baseURL","url","transformRequest","transformResponse","paramsSerializer","timeout","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","maxContentLength","validateStatus","maxRedirects","httpAgent","httpsAgent","cancelToken","socketPath"];r.forEach(o,function(e){"undefined"!=typeof t[e]&&(n[e]=t[e])}),r.forEach(i,function(o){r.isObject(t[o])?n[o]=r.deepMerge(e[o],t[o]):"undefined"!=typeof t[o]?n[o]=t[o]:r.isObject(e[o])?n[o]=r.deepMerge(e[o]):"undefined"!=typeof e[o]&&(n[o]=e[o])}),r.forEach(s,function(r){"undefined"!=typeof t[r]?n[r]=t[r]:"undefined"!=typeof e[r]&&(n[r]=e[r])});var a=o.concat(i).concat(s),u=Object.keys(t).filter(function(e){return a.indexOf(e)===-1});return r.forEach(u,function(r){"undefined"!=typeof t[r]?n[r]=t[r]:"undefined"!=typeof e[r]&&(n[r]=e[r])}),n}},function(e,t){"use strict";function n(e){this.message=e}n.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},n.prototype.__CANCEL__=!0,e.exports=n},function(e,t,n){"use strict";function r(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise(function(e){t=e});var n=this;e(function(e){n.reason||(n.reason=new o(e),t(n.reason))})}var o=n(23);r.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},r.source=function(){var e,t=new r(function(t){e=t});return{token:t,cancel:e}},e.exports=r},function(e,t){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}}])})
]]></Script>
    <Script path="lib/flickity.pkgd.min.js"><![CDATA[/*!
 * Flickity PACKAGED v2.2.1
 * Touch, responsive, flickable carousels
 *
 * Licensed GPLv3 for open source use
 * or Flickity Commercial License for commercial use
 *
 * https://flickity.metafizzy.co
 * Copyright 2015-2019 Metafizzy
 */

!function(e,i){"function"==typeof define&&define.amd?define("jquery-bridget/jquery-bridget",["jquery"],function(t){return i(e,t)}):"object"==typeof module&&module.exports?module.exports=i(e,require("jquery")):e.jQueryBridget=i(e,e.jQuery)}(window,function(t,e){"use strict";var i=Array.prototype.slice,n=t.console,d=void 0===n?function(){}:function(t){n.error(t)};function s(h,s,c){(c=c||e||t.jQuery)&&(s.prototype.option||(s.prototype.option=function(t){c.isPlainObject(t)&&(this.options=c.extend(!0,this.options,t))}),c.fn[h]=function(t){return"string"==typeof t?function(t,o,r){var a,l="$()."+h+'("'+o+'")';return t.each(function(t,e){var i=c.data(e,h);if(i){var n=i[o];if(n&&"_"!=o.charAt(0)){var s=n.apply(i,r);a=void 0===a?s:a}else d(l+" is not a valid method")}else d(h+" not initialized. Cannot call methods, i.e. "+l)}),void 0!==a?a:t}(this,t,i.call(arguments,1)):(function(t,n){t.each(function(t,e){var i=c.data(e,h);i?(i.option(n),i._init()):(i=new s(e,n),c.data(e,h,i))})}(this,t),this)},o(c))}function o(t){!t||t&&t.bridget||(t.bridget=s)}return o(e||t.jQuery),s}),function(t,e){"function"==typeof define&&define.amd?define("ev-emitter/ev-emitter",e):"object"==typeof module&&module.exports?module.exports=e():t.EvEmitter=e()}("undefined"!=typeof window?window:this,function(){function t(){}var e=t.prototype;return e.on=function(t,e){if(t&&e){var i=this._events=this._events||{},n=i[t]=i[t]||[];return-1==n.indexOf(e)&&n.push(e),this}},e.once=function(t,e){if(t&&e){this.on(t,e);var i=this._onceEvents=this._onceEvents||{};return(i[t]=i[t]||{})[e]=!0,this}},e.off=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){var n=i.indexOf(e);return-1!=n&&i.splice(n,1),this}},e.emitEvent=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){i=i.slice(0),e=e||[];for(var n=this._onceEvents&&this._onceEvents[t],s=0;s<i.length;s++){var o=i[s];n&&n[o]&&(this.off(t,o),delete n[o]),o.apply(this,e)}return this}},e.allOff=function(){delete this._events,delete this._onceEvents},t}),function(t,e){"function"==typeof define&&define.amd?define("get-size/get-size",e):"object"==typeof module&&module.exports?module.exports=e():t.getSize=e()}(window,function(){"use strict";function m(t){var e=parseFloat(t);return-1==t.indexOf("%")&&!isNaN(e)&&e}var i="undefined"==typeof console?function(){}:function(t){console.error(t)},y=["paddingLeft","paddingRight","paddingTop","paddingBottom","marginLeft","marginRight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth"],b=y.length;function E(t){var e=getComputedStyle(t);return e||i("Style returned "+e+". Are you running this code in a hidden iframe on Firefox? See https://bit.ly/getsizebug1"),e}var S,C=!1;function x(t){if(function(){if(!C){C=!0;var t=document.createElement("div");t.style.width="200px",t.style.padding="1px 2px 3px 4px",t.style.borderStyle="solid",t.style.borderWidth="1px 2px 3px 4px",t.style.boxSizing="border-box";var e=document.body||document.documentElement;e.appendChild(t);var i=E(t);S=200==Math.round(m(i.width)),x.isBoxSizeOuter=S,e.removeChild(t)}}(),"string"==typeof t&&(t=document.querySelector(t)),t&&"object"==typeof t&&t.nodeType){var e=E(t);if("none"==e.display)return function(){for(var t={width:0,height:0,innerWidth:0,innerHeight:0,outerWidth:0,outerHeight:0},e=0;e<b;e++){t[y[e]]=0}return t}();var i={};i.width=t.offsetWidth,i.height=t.offsetHeight;for(var n=i.isBorderBox="border-box"==e.boxSizing,s=0;s<b;s++){var o=y[s],r=e[o],a=parseFloat(r);i[o]=isNaN(a)?0:a}var l=i.paddingLeft+i.paddingRight,h=i.paddingTop+i.paddingBottom,c=i.marginLeft+i.marginRight,d=i.marginTop+i.marginBottom,u=i.borderLeftWidth+i.borderRightWidth,f=i.borderTopWidth+i.borderBottomWidth,p=n&&S,g=m(e.width);!1!==g&&(i.width=g+(p?0:l+u));var v=m(e.height);return!1!==v&&(i.height=v+(p?0:h+f)),i.innerWidth=i.width-(l+u),i.innerHeight=i.height-(h+f),i.outerWidth=i.width+c,i.outerHeight=i.height+d,i}}return x}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("desandro-matches-selector/matches-selector",e):"object"==typeof module&&module.exports?module.exports=e():t.matchesSelector=e()}(window,function(){"use strict";var i=function(){var t=window.Element.prototype;if(t.matches)return"matches";if(t.matchesSelector)return"matchesSelector";for(var e=["webkit","moz","ms","o"],i=0;i<e.length;i++){var n=e[i]+"MatchesSelector";if(t[n])return n}}();return function(t,e){return t[i](e)}}),function(e,i){"function"==typeof define&&define.amd?define("fizzy-ui-utils/utils",["desandro-matches-selector/matches-selector"],function(t){return i(e,t)}):"object"==typeof module&&module.exports?module.exports=i(e,require("desandro-matches-selector")):e.fizzyUIUtils=i(e,e.matchesSelector)}(window,function(h,o){var c={extend:function(t,e){for(var i in e)t[i]=e[i];return t},modulo:function(t,e){return(t%e+e)%e}},e=Array.prototype.slice;c.makeArray=function(t){return Array.isArray(t)?t:null==t?[]:"object"==typeof t&&"number"==typeof t.length?e.call(t):[t]},c.removeFrom=function(t,e){var i=t.indexOf(e);-1!=i&&t.splice(i,1)},c.getParent=function(t,e){for(;t.parentNode&&t!=document.body;)if(t=t.parentNode,o(t,e))return t},c.getQueryElement=function(t){return"string"==typeof t?document.querySelector(t):t},c.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},c.filterFindElements=function(t,n){t=c.makeArray(t);var s=[];return t.forEach(function(t){if(t instanceof HTMLElement)if(n){o(t,n)&&s.push(t);for(var e=t.querySelectorAll(n),i=0;i<e.length;i++)s.push(e[i])}else s.push(t)}),s},c.debounceMethod=function(t,e,n){n=n||100;var s=t.prototype[e],o=e+"Timeout";t.prototype[e]=function(){var t=this[o];clearTimeout(t);var e=arguments,i=this;this[o]=setTimeout(function(){s.apply(i,e),delete i[o]},n)}},c.docReady=function(t){var e=document.readyState;"complete"==e||"interactive"==e?setTimeout(t):document.addEventListener("DOMContentLoaded",t)},c.toDashed=function(t){return t.replace(/(.)([A-Z])/g,function(t,e,i){return e+"-"+i}).toLowerCase()};var d=h.console;return c.htmlInit=function(a,l){c.docReady(function(){var t=c.toDashed(l),s="data-"+t,e=document.querySelectorAll("["+s+"]"),i=document.querySelectorAll(".js-"+t),n=c.makeArray(e).concat(c.makeArray(i)),o=s+"-options",r=h.jQuery;n.forEach(function(e){var t,i=e.getAttribute(s)||e.getAttribute(o);try{t=i&&JSON.parse(i)}catch(t){return void(d&&d.error("Error parsing "+s+" on "+e.className+": "+t))}var n=new a(e,t);r&&r.data(e,l,n)})})},c}),function(e,i){"function"==typeof define&&define.amd?define("flickity/js/cell",["get-size/get-size"],function(t){return i(e,t)}):"object"==typeof module&&module.exports?module.exports=i(e,require("get-size")):(e.Flickity=e.Flickity||{},e.Flickity.Cell=i(e,e.getSize))}(window,function(t,e){function i(t,e){this.element=t,this.parent=e,this.create()}var n=i.prototype;return n.create=function(){this.element.style.position="absolute",this.element.setAttribute("aria-hidden","true"),this.x=0,this.shift=0},n.destroy=function(){this.unselect(),this.element.style.position="";var t=this.parent.originSide;this.element.style[t]=""},n.getSize=function(){this.size=e(this.element)},n.setPosition=function(t){this.x=t,this.updateTarget(),this.renderPosition(t)},n.updateTarget=n.setDefaultTarget=function(){var t="left"==this.parent.originSide?"marginLeft":"marginRight";this.target=this.x+this.size[t]+this.size.width*this.parent.cellAlign},n.renderPosition=function(t){var e=this.parent.originSide;this.element.style[e]=this.parent.getPositionValue(t)},n.select=function(){this.element.classList.add("is-selected"),this.element.removeAttribute("aria-hidden")},n.unselect=function(){this.element.classList.remove("is-selected"),this.element.setAttribute("aria-hidden","true")},n.wrapShift=function(t){this.shift=t,this.renderPosition(this.x+this.parent.slideableWidth*t)},n.remove=function(){this.element.parentNode.removeChild(this.element)},i}),function(t,e){"function"==typeof define&&define.amd?define("flickity/js/slide",e):"object"==typeof module&&module.exports?module.exports=e():(t.Flickity=t.Flickity||{},t.Flickity.Slide=e())}(window,function(){"use strict";function t(t){this.parent=t,this.isOriginLeft="left"==t.originSide,this.cells=[],this.outerWidth=0,this.height=0}var e=t.prototype;return e.addCell=function(t){if(this.cells.push(t),this.outerWidth+=t.size.outerWidth,this.height=Math.max(t.size.outerHeight,this.height),1==this.cells.length){this.x=t.x;var e=this.isOriginLeft?"marginLeft":"marginRight";this.firstMargin=t.size[e]}},e.updateTarget=function(){var t=this.isOriginLeft?"marginRight":"marginLeft",e=this.getLastCell(),i=e?e.size[t]:0,n=this.outerWidth-(this.firstMargin+i);this.target=this.x+this.firstMargin+n*this.parent.cellAlign},e.getLastCell=function(){return this.cells[this.cells.length-1]},e.select=function(){this.cells.forEach(function(t){t.select()})},e.unselect=function(){this.cells.forEach(function(t){t.unselect()})},e.getCellElements=function(){return this.cells.map(function(t){return t.element})},t}),function(e,i){"function"==typeof define&&define.amd?define("flickity/js/animate",["fizzy-ui-utils/utils"],function(t){return i(e,t)}):"object"==typeof module&&module.exports?module.exports=i(e,require("fizzy-ui-utils")):(e.Flickity=e.Flickity||{},e.Flickity.animatePrototype=i(e,e.fizzyUIUtils))}(window,function(t,e){var i={startAnimation:function(){this.isAnimating||(this.isAnimating=!0,this.restingFrames=0,this.animate())},animate:function(){this.applyDragForce(),this.applySelectedAttraction();var t=this.x;if(this.integratePhysics(),this.positionSlider(),this.settle(t),this.isAnimating){var e=this;requestAnimationFrame(function(){e.animate()})}},positionSlider:function(){var t=this.x;this.options.wrapAround&&1<this.cells.length&&(t=e.modulo(t,this.slideableWidth),t-=this.slideableWidth,this.shiftWrapCells(t)),this.setTranslateX(t,this.isAnimating),this.dispatchScrollEvent()},setTranslateX:function(t,e){t+=this.cursorPosition,t=this.options.rightToLeft?-t:t;var i=this.getPositionValue(t);this.slider.style.transform=e?"translate3d("+i+",0,0)":"translateX("+i+")"},dispatchScrollEvent:function(){var t=this.slides[0];if(t){var e=-this.x-t.target,i=e/this.slidesWidth;this.dispatchEvent("scroll",null,[i,e])}},positionSliderAtSelected:function(){this.cells.length&&(this.x=-this.selectedSlide.target,this.velocity=0,this.positionSlider())},getPositionValue:function(t){return this.options.percentPosition?.01*Math.round(t/this.size.innerWidth*1e4)+"%":Math.round(t)+"px"},settle:function(t){this.isPointerDown||Math.round(100*this.x)!=Math.round(100*t)||this.restingFrames++,2<this.restingFrames&&(this.isAnimating=!1,delete this.isFreeScrolling,this.positionSlider(),this.dispatchEvent("settle",null,[this.selectedIndex]))},shiftWrapCells:function(t){var e=this.cursorPosition+t;this._shiftCells(this.beforeShiftCells,e,-1);var i=this.size.innerWidth-(t+this.slideableWidth+this.cursorPosition);this._shiftCells(this.afterShiftCells,i,1)},_shiftCells:function(t,e,i){for(var n=0;n<t.length;n++){var s=t[n],o=0<e?i:0;s.wrapShift(o),e-=s.size.outerWidth}},_unshiftCells:function(t){if(t&&t.length)for(var e=0;e<t.length;e++)t[e].wrapShift(0)},integratePhysics:function(){this.x+=this.velocity,this.velocity*=this.getFrictionFactor()},applyForce:function(t){this.velocity+=t},getFrictionFactor:function(){return 1-this.options[this.isFreeScrolling?"freeScrollFriction":"friction"]},getRestingPosition:function(){return this.x+this.velocity/(1-this.getFrictionFactor())},applyDragForce:function(){if(this.isDraggable&&this.isPointerDown){var t=this.dragX-this.x-this.velocity;this.applyForce(t)}},applySelectedAttraction:function(){if(!(this.isDraggable&&this.isPointerDown)&&!this.isFreeScrolling&&this.slides.length){var t=(-1*this.selectedSlide.target-this.x)*this.options.selectedAttraction;this.applyForce(t)}}};return i}),function(r,a){if("function"==typeof define&&define.amd)define("flickity/js/flickity",["ev-emitter/ev-emitter","get-size/get-size","fizzy-ui-utils/utils","./cell","./slide","./animate"],function(t,e,i,n,s,o){return a(r,t,e,i,n,s,o)});else if("object"==typeof module&&module.exports)module.exports=a(r,require("ev-emitter"),require("get-size"),require("fizzy-ui-utils"),require("./cell"),require("./slide"),require("./animate"));else{var t=r.Flickity;r.Flickity=a(r,r.EvEmitter,r.getSize,r.fizzyUIUtils,t.Cell,t.Slide,t.animatePrototype)}}(window,function(n,t,e,a,i,r,s){var l=n.jQuery,o=n.getComputedStyle,h=n.console;function c(t,e){for(t=a.makeArray(t);t.length;)e.appendChild(t.shift())}var d=0,u={};function f(t,e){var i=a.getQueryElement(t);if(i){if(this.element=i,this.element.flickityGUID){var n=u[this.element.flickityGUID];return n.option(e),n}l&&(this.$element=l(this.element)),this.options=a.extend({},this.constructor.defaults),this.option(e),this._create()}else h&&h.error("Bad element for Flickity: "+(i||t))}f.defaults={accessibility:!0,cellAlign:"center",freeScrollFriction:.075,friction:.28,namespaceJQueryEvents:!0,percentPosition:!0,resize:!0,selectedAttraction:.025,setGallerySize:!0},f.createMethods=[];var p=f.prototype;a.extend(p,t.prototype),p._create=function(){var t=this.guid=++d;for(var e in this.element.flickityGUID=t,(u[t]=this).selectedIndex=0,this.restingFrames=0,this.x=0,this.velocity=0,this.originSide=this.options.rightToLeft?"right":"left",this.viewport=document.createElement("div"),this.viewport.className="flickity-viewport",this._createSlider(),(this.options.resize||this.options.watchCSS)&&n.addEventListener("resize",this),this.options.on){var i=this.options.on[e];this.on(e,i)}f.createMethods.forEach(function(t){this[t]()},this),this.options.watchCSS?this.watchCSS():this.activate()},p.option=function(t){a.extend(this.options,t)},p.activate=function(){this.isActive||(this.isActive=!0,this.element.classList.add("flickity-enabled"),this.options.rightToLeft&&this.element.classList.add("flickity-rtl"),this.getSize(),c(this._filterFindCellElements(this.element.children),this.slider),this.viewport.appendChild(this.slider),this.element.appendChild(this.viewport),this.reloadCells(),this.options.accessibility&&(this.element.tabIndex=0,this.element.addEventListener("keydown",this)),this.emitEvent("activate"),this.selectInitialIndex(),this.isInitActivated=!0,this.dispatchEvent("ready"))},p._createSlider=function(){var t=document.createElement("div");t.className="flickity-slider",t.style[this.originSide]=0,this.slider=t},p._filterFindCellElements=function(t){return a.filterFindElements(t,this.options.cellSelector)},p.reloadCells=function(){this.cells=this._makeCells(this.slider.children),this.positionCells(),this._getWrapShiftCells(),this.setGallerySize()},p._makeCells=function(t){return this._filterFindCellElements(t).map(function(t){return new i(t,this)},this)},p.getLastCell=function(){return this.cells[this.cells.length-1]},p.getLastSlide=function(){return this.slides[this.slides.length-1]},p.positionCells=function(){this._sizeCells(this.cells),this._positionCells(0)},p._positionCells=function(t){t=t||0,this.maxCellHeight=t&&this.maxCellHeight||0;var e=0;if(0<t){var i=this.cells[t-1];e=i.x+i.size.outerWidth}for(var n=this.cells.length,s=t;s<n;s++){var o=this.cells[s];o.setPosition(e),e+=o.size.outerWidth,this.maxCellHeight=Math.max(o.size.outerHeight,this.maxCellHeight)}this.slideableWidth=e,this.updateSlides(),this._containSlides(),this.slidesWidth=n?this.getLastSlide().target-this.slides[0].target:0},p._sizeCells=function(t){t.forEach(function(t){t.getSize()})},p.updateSlides=function(){if(this.slides=[],this.cells.length){var n=new r(this);this.slides.push(n);var s="left"==this.originSide?"marginRight":"marginLeft",o=this._getCanCellFit();this.cells.forEach(function(t,e){if(n.cells.length){var i=n.outerWidth-n.firstMargin+(t.size.outerWidth-t.size[s]);o.call(this,e,i)||(n.updateTarget(),n=new r(this),this.slides.push(n)),n.addCell(t)}else n.addCell(t)},this),n.updateTarget(),this.updateSelectedSlide()}},p._getCanCellFit=function(){var t=this.options.groupCells;if(!t)return function(){return!1};if("number"==typeof t){var e=parseInt(t,10);return function(t){return t%e!=0}}var i="string"==typeof t&&t.match(/^(\d+)%$/),n=i?parseInt(i[1],10)/100:1;return function(t,e){return e<=(this.size.innerWidth+1)*n}},p._init=p.reposition=function(){this.positionCells(),this.positionSliderAtSelected()},p.getSize=function(){this.size=e(this.element),this.setCellAlign(),this.cursorPosition=this.size.innerWidth*this.cellAlign};var g={center:{left:.5,right:.5},left:{left:0,right:1},right:{right:0,left:1}};return p.setCellAlign=function(){var t=g[this.options.cellAlign];this.cellAlign=t?t[this.originSide]:this.options.cellAlign},p.setGallerySize=function(){if(this.options.setGallerySize){var t=this.options.adaptiveHeight&&this.selectedSlide?this.selectedSlide.height:this.maxCellHeight;this.viewport.style.height=t+"px"}},p._getWrapShiftCells=function(){if(this.options.wrapAround){this._unshiftCells(this.beforeShiftCells),this._unshiftCells(this.afterShiftCells);var t=this.cursorPosition,e=this.cells.length-1;this.beforeShiftCells=this._getGapCells(t,e,-1),t=this.size.innerWidth-this.cursorPosition,this.afterShiftCells=this._getGapCells(t,0,1)}},p._getGapCells=function(t,e,i){for(var n=[];0<t;){var s=this.cells[e];if(!s)break;n.push(s),e+=i,t-=s.size.outerWidth}return n},p._containSlides=function(){if(this.options.contain&&!this.options.wrapAround&&this.cells.length){var t=this.options.rightToLeft,e=t?"marginRight":"marginLeft",i=t?"marginLeft":"marginRight",n=this.slideableWidth-this.getLastCell().size[i],s=n<this.size.innerWidth,o=this.cursorPosition+this.cells[0].size[e],r=n-this.size.innerWidth*(1-this.cellAlign);this.slides.forEach(function(t){s?t.target=n*this.cellAlign:(t.target=Math.max(t.target,o),t.target=Math.min(t.target,r))},this)}},p.dispatchEvent=function(t,e,i){var n=e?[e].concat(i):i;if(this.emitEvent(t,n),l&&this.$element){var s=t+=this.options.namespaceJQueryEvents?".flickity":"";if(e){var o=l.Event(e);o.type=t,s=o}this.$element.trigger(s,i)}},p.select=function(t,e,i){if(this.isActive&&(t=parseInt(t,10),this._wrapSelect(t),(this.options.wrapAround||e)&&(t=a.modulo(t,this.slides.length)),this.slides[t])){var n=this.selectedIndex;this.selectedIndex=t,this.updateSelectedSlide(),i?this.positionSliderAtSelected():this.startAnimation(),this.options.adaptiveHeight&&this.setGallerySize(),this.dispatchEvent("select",null,[t]),t!=n&&this.dispatchEvent("change",null,[t]),this.dispatchEvent("cellSelect")}},p._wrapSelect=function(t){var e=this.slides.length;if(!(this.options.wrapAround&&1<e))return t;var i=a.modulo(t,e),n=Math.abs(i-this.selectedIndex),s=Math.abs(i+e-this.selectedIndex),o=Math.abs(i-e-this.selectedIndex);!this.isDragSelect&&s<n?t+=e:!this.isDragSelect&&o<n&&(t-=e),t<0?this.x-=this.slideableWidth:e<=t&&(this.x+=this.slideableWidth)},p.previous=function(t,e){this.select(this.selectedIndex-1,t,e)},p.next=function(t,e){this.select(this.selectedIndex+1,t,e)},p.updateSelectedSlide=function(){var t=this.slides[this.selectedIndex];t&&(this.unselectSelectedSlide(),(this.selectedSlide=t).select(),this.selectedCells=t.cells,this.selectedElements=t.getCellElements(),this.selectedCell=t.cells[0],this.selectedElement=this.selectedElements[0])},p.unselectSelectedSlide=function(){this.selectedSlide&&this.selectedSlide.unselect()},p.selectInitialIndex=function(){var t=this.options.initialIndex;if(this.isInitActivated)this.select(this.selectedIndex,!1,!0);else{if(t&&"string"==typeof t)if(this.queryCell(t))return void this.selectCell(t,!1,!0);var e=0;t&&this.slides[t]&&(e=t),this.select(e,!1,!0)}},p.selectCell=function(t,e,i){var n=this.queryCell(t);if(n){var s=this.getCellSlideIndex(n);this.select(s,e,i)}},p.getCellSlideIndex=function(t){for(var e=0;e<this.slides.length;e++){if(-1!=this.slides[e].cells.indexOf(t))return e}},p.getCell=function(t){for(var e=0;e<this.cells.length;e++){var i=this.cells[e];if(i.element==t)return i}},p.getCells=function(t){t=a.makeArray(t);var i=[];return t.forEach(function(t){var e=this.getCell(t);e&&i.push(e)},this),i},p.getCellElements=function(){return this.cells.map(function(t){return t.element})},p.getParentCell=function(t){var e=this.getCell(t);return e||(t=a.getParent(t,".flickity-slider > *"),this.getCell(t))},p.getAdjacentCellElements=function(t,e){if(!t)return this.selectedSlide.getCellElements();e=void 0===e?this.selectedIndex:e;var i=this.slides.length;if(i<=1+2*t)return this.getCellElements();for(var n=[],s=e-t;s<=e+t;s++){var o=this.options.wrapAround?a.modulo(s,i):s,r=this.slides[o];r&&(n=n.concat(r.getCellElements()))}return n},p.queryCell=function(t){if("number"==typeof t)return this.cells[t];if("string"==typeof t){if(t.match(/^[#\.]?[\d\/]/))return;t=this.element.querySelector(t)}return this.getCell(t)},p.uiChange=function(){this.emitEvent("uiChange")},p.childUIPointerDown=function(t){"touchstart"!=t.type&&t.preventDefault(),this.focus()},p.onresize=function(){this.watchCSS(),this.resize()},a.debounceMethod(f,"onresize",150),p.resize=function(){if(this.isActive){this.getSize(),this.options.wrapAround&&(this.x=a.modulo(this.x,this.slideableWidth)),this.positionCells(),this._getWrapShiftCells(),this.setGallerySize(),this.emitEvent("resize");var t=this.selectedElements&&this.selectedElements[0];this.selectCell(t,!1,!0)}},p.watchCSS=function(){this.options.watchCSS&&(-1!=o(this.element,":after").content.indexOf("flickity")?this.activate():this.deactivate())},p.onkeydown=function(t){var e=document.activeElement&&document.activeElement!=this.element;if(this.options.accessibility&&!e){var i=f.keyboardHandlers[t.keyCode];i&&i.call(this)}},f.keyboardHandlers={37:function(){var t=this.options.rightToLeft?"next":"previous";this.uiChange(),this[t]()},39:function(){var t=this.options.rightToLeft?"previous":"next";this.uiChange(),this[t]()}},p.focus=function(){var t=n.pageYOffset;this.element.focus({preventScroll:!0}),n.pageYOffset!=t&&n.scrollTo(n.pageXOffset,t)},p.deactivate=function(){this.isActive&&(this.element.classList.remove("flickity-enabled"),this.element.classList.remove("flickity-rtl"),this.unselectSelectedSlide(),this.cells.forEach(function(t){t.destroy()}),this.element.removeChild(this.viewport),c(this.slider.children,this.element),this.options.accessibility&&(this.element.removeAttribute("tabIndex"),this.element.removeEventListener("keydown",this)),this.isActive=!1,this.emitEvent("deactivate"))},p.destroy=function(){this.deactivate(),n.removeEventListener("resize",this),this.allOff(),this.emitEvent("destroy"),l&&this.$element&&l.removeData(this.element,"flickity"),delete this.element.flickityGUID,delete u[this.guid]},a.extend(p,s),f.data=function(t){var e=(t=a.getQueryElement(t))&&t.flickityGUID;return e&&u[e]},a.htmlInit(f,"flickity"),l&&l.bridget&&l.bridget("flickity",f),f.setJQuery=function(t){l=t},f.Cell=i,f.Slide=r,f}),function(e,i){"function"==typeof define&&define.amd?define("unipointer/unipointer",["ev-emitter/ev-emitter"],function(t){return i(e,t)}):"object"==typeof module&&module.exports?module.exports=i(e,require("ev-emitter")):e.Unipointer=i(e,e.EvEmitter)}(window,function(s,t){function e(){}var i=e.prototype=Object.create(t.prototype);i.bindStartEvent=function(t){this._bindStartEvent(t,!0)},i.unbindStartEvent=function(t){this._bindStartEvent(t,!1)},i._bindStartEvent=function(t,e){var i=(e=void 0===e||e)?"addEventListener":"removeEventListener",n="mousedown";s.PointerEvent?n="pointerdown":"ontouchstart"in s&&(n="touchstart"),t[i](n,this)},i.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},i.getTouch=function(t){for(var e=0;e<t.length;e++){var i=t[e];if(i.identifier==this.pointerIdentifier)return i}},i.onmousedown=function(t){var e=t.button;e&&0!==e&&1!==e||this._pointerDown(t,t)},i.ontouchstart=function(t){this._pointerDown(t,t.changedTouches[0])},i.onpointerdown=function(t){this._pointerDown(t,t)},i._pointerDown=function(t,e){t.button||this.isPointerDown||(this.isPointerDown=!0,this.pointerIdentifier=void 0!==e.pointerId?e.pointerId:e.identifier,this.pointerDown(t,e))},i.pointerDown=function(t,e){this._bindPostStartEvents(t),this.emitEvent("pointerDown",[t,e])};var n={mousedown:["mousemove","mouseup"],touchstart:["touchmove","touchend","touchcancel"],pointerdown:["pointermove","pointerup","pointercancel"]};return i._bindPostStartEvents=function(t){if(t){var e=n[t.type];e.forEach(function(t){s.addEventListener(t,this)},this),this._boundPointerEvents=e}},i._unbindPostStartEvents=function(){this._boundPointerEvents&&(this._boundPointerEvents.forEach(function(t){s.removeEventListener(t,this)},this),delete this._boundPointerEvents)},i.onmousemove=function(t){this._pointerMove(t,t)},i.onpointermove=function(t){t.pointerId==this.pointerIdentifier&&this._pointerMove(t,t)},i.ontouchmove=function(t){var e=this.getTouch(t.changedTouches);e&&this._pointerMove(t,e)},i._pointerMove=function(t,e){this.pointerMove(t,e)},i.pointerMove=function(t,e){this.emitEvent("pointerMove",[t,e])},i.onmouseup=function(t){this._pointerUp(t,t)},i.onpointerup=function(t){t.pointerId==this.pointerIdentifier&&this._pointerUp(t,t)},i.ontouchend=function(t){var e=this.getTouch(t.changedTouches);e&&this._pointerUp(t,e)},i._pointerUp=function(t,e){this._pointerDone(),this.pointerUp(t,e)},i.pointerUp=function(t,e){this.emitEvent("pointerUp",[t,e])},i._pointerDone=function(){this._pointerReset(),this._unbindPostStartEvents(),this.pointerDone()},i._pointerReset=function(){this.isPointerDown=!1,delete this.pointerIdentifier},i.pointerDone=function(){},i.onpointercancel=function(t){t.pointerId==this.pointerIdentifier&&this._pointerCancel(t,t)},i.ontouchcancel=function(t){var e=this.getTouch(t.changedTouches);e&&this._pointerCancel(t,e)},i._pointerCancel=function(t,e){this._pointerDone(),this.pointerCancel(t,e)},i.pointerCancel=function(t,e){this.emitEvent("pointerCancel",[t,e])},e.getPointerPoint=function(t){return{x:t.pageX,y:t.pageY}},e}),function(e,i){"function"==typeof define&&define.amd?define("unidragger/unidragger",["unipointer/unipointer"],function(t){return i(e,t)}):"object"==typeof module&&module.exports?module.exports=i(e,require("unipointer")):e.Unidragger=i(e,e.Unipointer)}(window,function(o,t){function e(){}var i=e.prototype=Object.create(t.prototype);i.bindHandles=function(){this._bindHandles(!0)},i.unbindHandles=function(){this._bindHandles(!1)},i._bindHandles=function(t){for(var e=(t=void 0===t||t)?"addEventListener":"removeEventListener",i=t?this._touchActionValue:"",n=0;n<this.handles.length;n++){var s=this.handles[n];this._bindStartEvent(s,t),s[e]("click",this),o.PointerEvent&&(s.style.touchAction=i)}},i._touchActionValue="none",i.pointerDown=function(t,e){this.okayPointerDown(t)&&(this.pointerDownPointer=e,t.preventDefault(),this.pointerDownBlur(),this._bindPostStartEvents(t),this.emitEvent("pointerDown",[t,e]))};var s={TEXTAREA:!0,INPUT:!0,SELECT:!0,OPTION:!0},r={radio:!0,checkbox:!0,button:!0,submit:!0,image:!0,file:!0};return i.okayPointerDown=function(t){var e=s[t.target.nodeName],i=r[t.target.type],n=!e||i;return n||this._pointerReset(),n},i.pointerDownBlur=function(){var t=document.activeElement;t&&t.blur&&t!=document.body&&t.blur()},i.pointerMove=function(t,e){var i=this._dragPointerMove(t,e);this.emitEvent("pointerMove",[t,e,i]),this._dragMove(t,e,i)},i._dragPointerMove=function(t,e){var i={x:e.pageX-this.pointerDownPointer.pageX,y:e.pageY-this.pointerDownPointer.pageY};return!this.isDragging&&this.hasDragStarted(i)&&this._dragStart(t,e),i},i.hasDragStarted=function(t){return 3<Math.abs(t.x)||3<Math.abs(t.y)},i.pointerUp=function(t,e){this.emitEvent("pointerUp",[t,e]),this._dragPointerUp(t,e)},i._dragPointerUp=function(t,e){this.isDragging?this._dragEnd(t,e):this._staticClick(t,e)},i._dragStart=function(t,e){this.isDragging=!0,this.isPreventingClicks=!0,this.dragStart(t,e)},i.dragStart=function(t,e){this.emitEvent("dragStart",[t,e])},i._dragMove=function(t,e,i){this.isDragging&&this.dragMove(t,e,i)},i.dragMove=function(t,e,i){t.preventDefault(),this.emitEvent("dragMove",[t,e,i])},i._dragEnd=function(t,e){this.isDragging=!1,setTimeout(function(){delete this.isPreventingClicks}.bind(this)),this.dragEnd(t,e)},i.dragEnd=function(t,e){this.emitEvent("dragEnd",[t,e])},i.onclick=function(t){this.isPreventingClicks&&t.preventDefault()},i._staticClick=function(t,e){this.isIgnoringMouseUp&&"mouseup"==t.type||(this.staticClick(t,e),"mouseup"!=t.type&&(this.isIgnoringMouseUp=!0,setTimeout(function(){delete this.isIgnoringMouseUp}.bind(this),400)))},i.staticClick=function(t,e){this.emitEvent("staticClick",[t,e])},e.getPointerPoint=t.getPointerPoint,e}),function(n,s){"function"==typeof define&&define.amd?define("flickity/js/drag",["./flickity","unidragger/unidragger","fizzy-ui-utils/utils"],function(t,e,i){return s(n,t,e,i)}):"object"==typeof module&&module.exports?module.exports=s(n,require("./flickity"),require("unidragger"),require("fizzy-ui-utils")):n.Flickity=s(n,n.Flickity,n.Unidragger,n.fizzyUIUtils)}(window,function(i,t,e,a){a.extend(t.defaults,{draggable:">1",dragThreshold:3}),t.createMethods.push("_createDrag");var n=t.prototype;a.extend(n,e.prototype),n._touchActionValue="pan-y";var s="createTouch"in document,o=!1;n._createDrag=function(){this.on("activate",this.onActivateDrag),this.on("uiChange",this._uiChangeDrag),this.on("deactivate",this.onDeactivateDrag),this.on("cellChange",this.updateDraggable),s&&!o&&(i.addEventListener("touchmove",function(){}),o=!0)},n.onActivateDrag=function(){this.handles=[this.viewport],this.bindHandles(),this.updateDraggable()},n.onDeactivateDrag=function(){this.unbindHandles(),this.element.classList.remove("is-draggable")},n.updateDraggable=function(){">1"==this.options.draggable?this.isDraggable=1<this.slides.length:this.isDraggable=this.options.draggable,this.isDraggable?this.element.classList.add("is-draggable"):this.element.classList.remove("is-draggable")},n.bindDrag=function(){this.options.draggable=!0,this.updateDraggable()},n.unbindDrag=function(){this.options.draggable=!1,this.updateDraggable()},n._uiChangeDrag=function(){delete this.isFreeScrolling},n.pointerDown=function(t,e){this.isDraggable?this.okayPointerDown(t)&&(this._pointerDownPreventDefault(t),this.pointerDownFocus(t),document.activeElement!=this.element&&this.pointerDownBlur(),this.dragX=this.x,this.viewport.classList.add("is-pointer-down"),this.pointerDownScroll=l(),i.addEventListener("scroll",this),this._pointerDownDefault(t,e)):this._pointerDownDefault(t,e)},n._pointerDownDefault=function(t,e){this.pointerDownPointer={pageX:e.pageX,pageY:e.pageY},this._bindPostStartEvents(t),this.dispatchEvent("pointerDown",t,[e])};var r={INPUT:!0,TEXTAREA:!0,SELECT:!0};function l(){return{x:i.pageXOffset,y:i.pageYOffset}}return n.pointerDownFocus=function(t){r[t.target.nodeName]||this.focus()},n._pointerDownPreventDefault=function(t){var e="touchstart"==t.type,i="touch"==t.pointerType,n=r[t.target.nodeName];e||i||n||t.preventDefault()},n.hasDragStarted=function(t){return Math.abs(t.x)>this.options.dragThreshold},n.pointerUp=function(t,e){delete this.isTouchScrolling,this.viewport.classList.remove("is-pointer-down"),this.dispatchEvent("pointerUp",t,[e]),this._dragPointerUp(t,e)},n.pointerDone=function(){i.removeEventListener("scroll",this),delete this.pointerDownScroll},n.dragStart=function(t,e){this.isDraggable&&(this.dragStartPosition=this.x,this.startAnimation(),i.removeEventListener("scroll",this),this.dispatchEvent("dragStart",t,[e]))},n.pointerMove=function(t,e){var i=this._dragPointerMove(t,e);this.dispatchEvent("pointerMove",t,[e,i]),this._dragMove(t,e,i)},n.dragMove=function(t,e,i){if(this.isDraggable){t.preventDefault(),this.previousDragX=this.dragX;var n=this.options.rightToLeft?-1:1;this.options.wrapAround&&(i.x=i.x%this.slideableWidth);var s=this.dragStartPosition+i.x*n;if(!this.options.wrapAround&&this.slides.length){var o=Math.max(-this.slides[0].target,this.dragStartPosition);s=o<s?.5*(s+o):s;var r=Math.min(-this.getLastSlide().target,this.dragStartPosition);s=s<r?.5*(s+r):s}this.dragX=s,this.dragMoveTime=new Date,this.dispatchEvent("dragMove",t,[e,i])}},n.dragEnd=function(t,e){if(this.isDraggable){this.options.freeScroll&&(this.isFreeScrolling=!0);var i=this.dragEndRestingSelect();if(this.options.freeScroll&&!this.options.wrapAround){var n=this.getRestingPosition();this.isFreeScrolling=-n>this.slides[0].target&&-n<this.getLastSlide().target}else this.options.freeScroll||i!=this.selectedIndex||(i+=this.dragEndBoostSelect());delete this.previousDragX,this.isDragSelect=this.options.wrapAround,this.select(i),delete this.isDragSelect,this.dispatchEvent("dragEnd",t,[e])}},n.dragEndRestingSelect=function(){var t=this.getRestingPosition(),e=Math.abs(this.getSlideDistance(-t,this.selectedIndex)),i=this._getClosestResting(t,e,1),n=this._getClosestResting(t,e,-1);return i.distance<n.distance?i.index:n.index},n._getClosestResting=function(t,e,i){for(var n=this.selectedIndex,s=1/0,o=this.options.contain&&!this.options.wrapAround?function(t,e){return t<=e}:function(t,e){return t<e};o(e,s)&&(n+=i,s=e,null!==(e=this.getSlideDistance(-t,n)));)e=Math.abs(e);return{distance:s,index:n-i}},n.getSlideDistance=function(t,e){var i=this.slides.length,n=this.options.wrapAround&&1<i,s=n?a.modulo(e,i):e,o=this.slides[s];if(!o)return null;var r=n?this.slideableWidth*Math.floor(e/i):0;return t-(o.target+r)},n.dragEndBoostSelect=function(){if(void 0===this.previousDragX||!this.dragMoveTime||100<new Date-this.dragMoveTime)return 0;var t=this.getSlideDistance(-this.dragX,this.selectedIndex),e=this.previousDragX-this.dragX;return 0<t&&0<e?1:t<0&&e<0?-1:0},n.staticClick=function(t,e){var i=this.getParentCell(t.target),n=i&&i.element,s=i&&this.cells.indexOf(i);this.dispatchEvent("staticClick",t,[e,n,s])},n.onscroll=function(){var t=l(),e=this.pointerDownScroll.x-t.x,i=this.pointerDownScroll.y-t.y;(3<Math.abs(e)||3<Math.abs(i))&&this._pointerDone()},t}),function(n,s){"function"==typeof define&&define.amd?define("flickity/js/prev-next-button",["./flickity","unipointer/unipointer","fizzy-ui-utils/utils"],function(t,e,i){return s(n,t,e,i)}):"object"==typeof module&&module.exports?module.exports=s(n,require("./flickity"),require("unipointer"),require("fizzy-ui-utils")):s(n,n.Flickity,n.Unipointer,n.fizzyUIUtils)}(window,function(t,e,i,n){"use strict";var s="http://www.w3.org/2000/svg";function o(t,e){this.direction=t,this.parent=e,this._create()}(o.prototype=Object.create(i.prototype))._create=function(){this.isEnabled=!0,this.isPrevious=-1==this.direction;var t=this.parent.options.rightToLeft?1:-1;this.isLeft=this.direction==t;var e=this.element=document.createElement("button");e.className="flickity-button flickity-prev-next-button",e.className+=this.isPrevious?" previous":" next",e.setAttribute("type","button"),this.disable(),e.setAttribute("aria-label",this.isPrevious?"Previous":"Next");var i=this.createSVG();e.appendChild(i),this.parent.on("select",this.update.bind(this)),this.on("pointerDown",this.parent.childUIPointerDown.bind(this.parent))},o.prototype.activate=function(){this.bindStartEvent(this.element),this.element.addEventListener("click",this),this.parent.element.appendChild(this.element)},o.prototype.deactivate=function(){this.parent.element.removeChild(this.element),this.unbindStartEvent(this.element),this.element.removeEventListener("click",this)},o.prototype.createSVG=function(){var t=document.createElementNS(s,"svg");t.setAttribute("class","flickity-button-icon"),t.setAttribute("viewBox","0 0 100 100");var e=document.createElementNS(s,"path"),i=function(t){return"string"!=typeof t?"M "+t.x0+",50 L "+t.x1+","+(t.y1+50)+" L "+t.x2+","+(t.y2+50)+" L "+t.x3+",50  L "+t.x2+","+(50-t.y2)+" L "+t.x1+","+(50-t.y1)+" Z":t}(this.parent.options.arrowShape);return e.setAttribute("d",i),e.setAttribute("class","arrow"),this.isLeft||e.setAttribute("transform","translate(100, 100) rotate(180) "),t.appendChild(e),t},o.prototype.handleEvent=n.handleEvent,o.prototype.onclick=function(){if(this.isEnabled){this.parent.uiChange();var t=this.isPrevious?"previous":"next";this.parent[t]()}},o.prototype.enable=function(){this.isEnabled||(this.element.disabled=!1,this.isEnabled=!0)},o.prototype.disable=function(){this.isEnabled&&(this.element.disabled=!0,this.isEnabled=!1)},o.prototype.update=function(){var t=this.parent.slides;if(this.parent.options.wrapAround&&1<t.length)this.enable();else{var e=t.length?t.length-1:0,i=this.isPrevious?0:e;this[this.parent.selectedIndex==i?"disable":"enable"]()}},o.prototype.destroy=function(){this.deactivate(),this.allOff()},n.extend(e.defaults,{prevNextButtons:!0,arrowShape:{x0:10,x1:60,y1:50,x2:70,y2:40,x3:30}}),e.createMethods.push("_createPrevNextButtons");var r=e.prototype;return r._createPrevNextButtons=function(){this.options.prevNextButtons&&(this.prevButton=new o(-1,this),this.nextButton=new o(1,this),this.on("activate",this.activatePrevNextButtons))},r.activatePrevNextButtons=function(){this.prevButton.activate(),this.nextButton.activate(),this.on("deactivate",this.deactivatePrevNextButtons)},r.deactivatePrevNextButtons=function(){this.prevButton.deactivate(),this.nextButton.deactivate(),this.off("deactivate",this.deactivatePrevNextButtons)},e.PrevNextButton=o,e}),function(n,s){"function"==typeof define&&define.amd?define("flickity/js/page-dots",["./flickity","unipointer/unipointer","fizzy-ui-utils/utils"],function(t,e,i){return s(n,t,e,i)}):"object"==typeof module&&module.exports?module.exports=s(n,require("./flickity"),require("unipointer"),require("fizzy-ui-utils")):s(n,n.Flickity,n.Unipointer,n.fizzyUIUtils)}(window,function(t,e,i,n){function s(t){this.parent=t,this._create()}(s.prototype=Object.create(i.prototype))._create=function(){this.holder=document.createElement("ol"),this.holder.className="flickity-page-dots",this.dots=[],this.handleClick=this.onClick.bind(this),this.on("pointerDown",this.parent.childUIPointerDown.bind(this.parent))},s.prototype.activate=function(){this.setDots(),this.holder.addEventListener("click",this.handleClick),this.bindStartEvent(this.holder),this.parent.element.appendChild(this.holder)},s.prototype.deactivate=function(){this.holder.removeEventListener("click",this.handleClick),this.unbindStartEvent(this.holder),this.parent.element.removeChild(this.holder)},s.prototype.setDots=function(){var t=this.parent.slides.length-this.dots.length;0<t?this.addDots(t):t<0&&this.removeDots(-t)},s.prototype.addDots=function(t){for(var e=document.createDocumentFragment(),i=[],n=this.dots.length,s=n+t,o=n;o<s;o++){var r=document.createElement("li");r.className="dot",r.setAttribute("aria-label","Page dot "+(o+1)),e.appendChild(r),i.push(r)}this.holder.appendChild(e),this.dots=this.dots.concat(i)},s.prototype.removeDots=function(t){this.dots.splice(this.dots.length-t,t).forEach(function(t){this.holder.removeChild(t)},this)},s.prototype.updateSelected=function(){this.selectedDot&&(this.selectedDot.className="dot",this.selectedDot.removeAttribute("aria-current")),this.dots.length&&(this.selectedDot=this.dots[this.parent.selectedIndex],this.selectedDot.className="dot is-selected",this.selectedDot.setAttribute("aria-current","step"))},s.prototype.onTap=s.prototype.onClick=function(t){var e=t.target;if("LI"==e.nodeName){this.parent.uiChange();var i=this.dots.indexOf(e);this.parent.select(i)}},s.prototype.destroy=function(){this.deactivate(),this.allOff()},e.PageDots=s,n.extend(e.defaults,{pageDots:!0}),e.createMethods.push("_createPageDots");var o=e.prototype;return o._createPageDots=function(){this.options.pageDots&&(this.pageDots=new s(this),this.on("activate",this.activatePageDots),this.on("select",this.updateSelectedPageDots),this.on("cellChange",this.updatePageDots),this.on("resize",this.updatePageDots),this.on("deactivate",this.deactivatePageDots))},o.activatePageDots=function(){this.pageDots.activate()},o.updateSelectedPageDots=function(){this.pageDots.updateSelected()},o.updatePageDots=function(){this.pageDots.setDots()},o.deactivatePageDots=function(){this.pageDots.deactivate()},e.PageDots=s,e}),function(t,n){"function"==typeof define&&define.amd?define("flickity/js/player",["ev-emitter/ev-emitter","fizzy-ui-utils/utils","./flickity"],function(t,e,i){return n(t,e,i)}):"object"==typeof module&&module.exports?module.exports=n(require("ev-emitter"),require("fizzy-ui-utils"),require("./flickity")):n(t.EvEmitter,t.fizzyUIUtils,t.Flickity)}(window,function(t,e,i){function n(t){this.parent=t,this.state="stopped",this.onVisibilityChange=this.visibilityChange.bind(this),this.onVisibilityPlay=this.visibilityPlay.bind(this)}(n.prototype=Object.create(t.prototype)).play=function(){"playing"!=this.state&&(document.hidden?document.addEventListener("visibilitychange",this.onVisibilityPlay):(this.state="playing",document.addEventListener("visibilitychange",this.onVisibilityChange),this.tick()))},n.prototype.tick=function(){if("playing"==this.state){var t=this.parent.options.autoPlay;t="number"==typeof t?t:3e3;var e=this;this.clear(),this.timeout=setTimeout(function(){e.parent.next(!0),e.tick()},t)}},n.prototype.stop=function(){this.state="stopped",this.clear(),document.removeEventListener("visibilitychange",this.onVisibilityChange)},n.prototype.clear=function(){clearTimeout(this.timeout)},n.prototype.pause=function(){"playing"==this.state&&(this.state="paused",this.clear())},n.prototype.unpause=function(){"paused"==this.state&&this.play()},n.prototype.visibilityChange=function(){this[document.hidden?"pause":"unpause"]()},n.prototype.visibilityPlay=function(){this.play(),document.removeEventListener("visibilitychange",this.onVisibilityPlay)},e.extend(i.defaults,{pauseAutoPlayOnHover:!0}),i.createMethods.push("_createPlayer");var s=i.prototype;return s._createPlayer=function(){this.player=new n(this),this.on("activate",this.activatePlayer),this.on("uiChange",this.stopPlayer),this.on("pointerDown",this.stopPlayer),this.on("deactivate",this.deactivatePlayer)},s.activatePlayer=function(){this.options.autoPlay&&(this.player.play(),this.element.addEventListener("mouseenter",this))},s.playPlayer=function(){this.player.play()},s.stopPlayer=function(){this.player.stop()},s.pausePlayer=function(){this.player.pause()},s.unpausePlayer=function(){this.player.unpause()},s.deactivatePlayer=function(){this.player.stop(),this.element.removeEventListener("mouseenter",this)},s.onmouseenter=function(){this.options.pauseAutoPlayOnHover&&(this.player.pause(),this.element.addEventListener("mouseleave",this))},s.onmouseleave=function(){this.player.unpause(),this.element.removeEventListener("mouseleave",this)},i.Player=n,i}),function(i,n){"function"==typeof define&&define.amd?define("flickity/js/add-remove-cell",["./flickity","fizzy-ui-utils/utils"],function(t,e){return n(i,t,e)}):"object"==typeof module&&module.exports?module.exports=n(i,require("./flickity"),require("fizzy-ui-utils")):n(i,i.Flickity,i.fizzyUIUtils)}(window,function(t,e,n){var i=e.prototype;return i.insert=function(t,e){var i=this._makeCells(t);if(i&&i.length){var n=this.cells.length;e=void 0===e?n:e;var s=function(t){var e=document.createDocumentFragment();return t.forEach(function(t){e.appendChild(t.element)}),e}(i),o=e==n;if(o)this.slider.appendChild(s);else{var r=this.cells[e].element;this.slider.insertBefore(s,r)}if(0===e)this.cells=i.concat(this.cells);else if(o)this.cells=this.cells.concat(i);else{var a=this.cells.splice(e,n-e);this.cells=this.cells.concat(i).concat(a)}this._sizeCells(i),this.cellChange(e,!0)}},i.append=function(t){this.insert(t,this.cells.length)},i.prepend=function(t){this.insert(t,0)},i.remove=function(t){var e=this.getCells(t);if(e&&e.length){var i=this.cells.length-1;e.forEach(function(t){t.remove();var e=this.cells.indexOf(t);i=Math.min(e,i),n.removeFrom(this.cells,t)},this),this.cellChange(i,!0)}},i.cellSizeChange=function(t){var e=this.getCell(t);if(e){e.getSize();var i=this.cells.indexOf(e);this.cellChange(i)}},i.cellChange=function(t,e){var i=this.selectedElement;this._positionCells(t),this._getWrapShiftCells(),this.setGallerySize();var n=this.getCell(i);n&&(this.selectedIndex=this.getCellSlideIndex(n)),this.selectedIndex=Math.min(this.slides.length-1,this.selectedIndex),this.emitEvent("cellChange",[t]),this.select(this.selectedIndex),e&&this.positionSliderAtSelected()},e}),function(i,n){"function"==typeof define&&define.amd?define("flickity/js/lazyload",["./flickity","fizzy-ui-utils/utils"],function(t,e){return n(i,t,e)}):"object"==typeof module&&module.exports?module.exports=n(i,require("./flickity"),require("fizzy-ui-utils")):n(i,i.Flickity,i.fizzyUIUtils)}(window,function(t,e,o){"use strict";e.createMethods.push("_createLazyload");var i=e.prototype;function s(t,e){this.img=t,this.flickity=e,this.load()}return i._createLazyload=function(){this.on("select",this.lazyLoad)},i.lazyLoad=function(){var t=this.options.lazyLoad;if(t){var e="number"==typeof t?t:0,i=this.getAdjacentCellElements(e),n=[];i.forEach(function(t){var e=function(t){if("IMG"==t.nodeName){var e=t.getAttribute("data-flickity-lazyload"),i=t.getAttribute("data-flickity-lazyload-src"),n=t.getAttribute("data-flickity-lazyload-srcset");if(e||i||n)return[t]}var s=t.querySelectorAll("img[data-flickity-lazyload], img[data-flickity-lazyload-src], img[data-flickity-lazyload-srcset]");return o.makeArray(s)}(t);n=n.concat(e)}),n.forEach(function(t){new s(t,this)},this)}},s.prototype.handleEvent=o.handleEvent,s.prototype.load=function(){this.img.addEventListener("load",this),this.img.addEventListener("error",this);var t=this.img.getAttribute("data-flickity-lazyload")||this.img.getAttribute("data-flickity-lazyload-src"),e=this.img.getAttribute("data-flickity-lazyload-srcset");this.img.src=t,e&&this.img.setAttribute("srcset",e),this.img.removeAttribute("data-flickity-lazyload"),this.img.removeAttribute("data-flickity-lazyload-src"),this.img.removeAttribute("data-flickity-lazyload-srcset")},s.prototype.onload=function(t){this.complete(t,"flickity-lazyloaded")},s.prototype.onerror=function(t){this.complete(t,"flickity-lazyerror")},s.prototype.complete=function(t,e){this.img.removeEventListener("load",this),this.img.removeEventListener("error",this);var i=this.flickity.getParentCell(this.img),n=i&&i.element;this.flickity.cellSizeChange(n),this.img.classList.add(e),this.flickity.dispatchEvent("lazyLoad",t,n)},e.LazyLoader=s,e}),function(t,e){"function"==typeof define&&define.amd?define("flickity/js/index",["./flickity","./drag","./prev-next-button","./page-dots","./player","./add-remove-cell","./lazyload"],e):"object"==typeof module&&module.exports&&(module.exports=e(require("./flickity"),require("./drag"),require("./prev-next-button"),require("./page-dots"),require("./player"),require("./add-remove-cell"),require("./lazyload")))}(window,function(t){return t}),function(t,e){"function"==typeof define&&define.amd?define("flickity-as-nav-for/as-nav-for",["flickity/js/index","fizzy-ui-utils/utils"],e):"object"==typeof module&&module.exports?module.exports=e(require("flickity"),require("fizzy-ui-utils")):t.Flickity=e(t.Flickity,t.fizzyUIUtils)}(window,function(n,s){n.createMethods.push("_createAsNavFor");var t=n.prototype;return t._createAsNavFor=function(){this.on("activate",this.activateAsNavFor),this.on("deactivate",this.deactivateAsNavFor),this.on("destroy",this.destroyAsNavFor);var t=this.options.asNavFor;if(t){var e=this;setTimeout(function(){e.setNavCompanion(t)})}},t.setNavCompanion=function(t){t=s.getQueryElement(t);var e=n.data(t);if(e&&e!=this){this.navCompanion=e;var i=this;this.onNavCompanionSelect=function(){i.navCompanionSelect()},e.on("select",this.onNavCompanionSelect),this.on("staticClick",this.onNavStaticClick),this.navCompanionSelect(!0)}},t.navCompanionSelect=function(t){var e=this.navCompanion&&this.navCompanion.selectedCells;if(e){var i=e[0],n=this.navCompanion.cells.indexOf(i),s=n+e.length-1,o=Math.floor(function(t,e,i){return(e-t)*i+t}(n,s,this.navCompanion.cellAlign));if(this.selectCell(o,!1,t),this.removeNavSelectedElements(),!(o>=this.cells.length)){var r=this.cells.slice(n,1+s);this.navSelectedElements=r.map(function(t){return t.element}),this.changeNavSelectedClass("add")}}},t.changeNavSelectedClass=function(e){this.navSelectedElements.forEach(function(t){t.classList[e]("is-nav-selected")})},t.activateAsNavFor=function(){this.navCompanionSelect(!0)},t.removeNavSelectedElements=function(){this.navSelectedElements&&(this.changeNavSelectedClass("remove"),delete this.navSelectedElements)},t.onNavStaticClick=function(t,e,i,n){"number"==typeof n&&this.navCompanion.selectCell(n)},t.deactivateAsNavFor=function(){this.removeNavSelectedElements()},t.destroyAsNavFor=function(){this.navCompanion&&(this.navCompanion.off("select",this.onNavCompanionSelect),this.off("staticClick",this.onNavStaticClick),delete this.navCompanion)},n}),function(e,i){"use strict";"function"==typeof define&&define.amd?define("imagesloaded/imagesloaded",["ev-emitter/ev-emitter"],function(t){return i(e,t)}):"object"==typeof module&&module.exports?module.exports=i(e,require("ev-emitter")):e.imagesLoaded=i(e,e.EvEmitter)}("undefined"!=typeof window?window:this,function(e,t){var s=e.jQuery,o=e.console;function r(t,e){for(var i in e)t[i]=e[i];return t}var a=Array.prototype.slice;function l(t,e,i){if(!(this instanceof l))return new l(t,e,i);var n=t;"string"==typeof t&&(n=document.querySelectorAll(t)),n?(this.elements=function(t){return Array.isArray(t)?t:"object"==typeof t&&"number"==typeof t.length?a.call(t):[t]}(n),this.options=r({},this.options),"function"==typeof e?i=e:r(this.options,e),i&&this.on("always",i),this.getImages(),s&&(this.jqDeferred=new s.Deferred),setTimeout(this.check.bind(this))):o.error("Bad element for imagesLoaded "+(n||t))}(l.prototype=Object.create(t.prototype)).options={},l.prototype.getImages=function(){this.images=[],this.elements.forEach(this.addElementImages,this)},l.prototype.addElementImages=function(t){"IMG"==t.nodeName&&this.addImage(t),!0===this.options.background&&this.addElementBackgroundImages(t);var e=t.nodeType;if(e&&h[e]){for(var i=t.querySelectorAll("img"),n=0;n<i.length;n++){var s=i[n];this.addImage(s)}if("string"==typeof this.options.background){var o=t.querySelectorAll(this.options.background);for(n=0;n<o.length;n++){var r=o[n];this.addElementBackgroundImages(r)}}}};var h={1:!0,9:!0,11:!0};function i(t){this.img=t}function n(t,e){this.url=t,this.element=e,this.img=new Image}return l.prototype.addElementBackgroundImages=function(t){var e=getComputedStyle(t);if(e)for(var i=/url\((['"])?(.*?)\1\)/gi,n=i.exec(e.backgroundImage);null!==n;){var s=n&&n[2];s&&this.addBackground(s,t),n=i.exec(e.backgroundImage)}},l.prototype.addImage=function(t){var e=new i(t);this.images.push(e)},l.prototype.addBackground=function(t,e){var i=new n(t,e);this.images.push(i)},l.prototype.check=function(){var n=this;function e(t,e,i){setTimeout(function(){n.progress(t,e,i)})}this.progressedCount=0,this.hasAnyBroken=!1,this.images.length?this.images.forEach(function(t){t.once("progress",e),t.check()}):this.complete()},l.prototype.progress=function(t,e,i){this.progressedCount++,this.hasAnyBroken=this.hasAnyBroken||!t.isLoaded,this.emitEvent("progress",[this,t,e]),this.jqDeferred&&this.jqDeferred.notify&&this.jqDeferred.notify(this,t),this.progressedCount==this.images.length&&this.complete(),this.options.debug&&o&&o.log("progress: "+i,t,e)},l.prototype.complete=function(){var t=this.hasAnyBroken?"fail":"done";if(this.isComplete=!0,this.emitEvent(t,[this]),this.emitEvent("always",[this]),this.jqDeferred){var e=this.hasAnyBroken?"reject":"resolve";this.jqDeferred[e](this)}},(i.prototype=Object.create(t.prototype)).check=function(){this.getIsImageComplete()?this.confirm(0!==this.img.naturalWidth,"naturalWidth"):(this.proxyImage=new Image,this.proxyImage.addEventListener("load",this),this.proxyImage.addEventListener("error",this),this.img.addEventListener("load",this),this.img.addEventListener("error",this),this.proxyImage.src=this.img.src)},i.prototype.getIsImageComplete=function(){return this.img.complete&&this.img.naturalWidth},i.prototype.confirm=function(t,e){this.isLoaded=t,this.emitEvent("progress",[this,this.img,e])},i.prototype.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},i.prototype.onload=function(){this.confirm(!0,"onload"),this.unbindEvents()},i.prototype.onerror=function(){this.confirm(!1,"onerror"),this.unbindEvents()},i.prototype.unbindEvents=function(){this.proxyImage.removeEventListener("load",this),this.proxyImage.removeEventListener("error",this),this.img.removeEventListener("load",this),this.img.removeEventListener("error",this)},(n.prototype=Object.create(i.prototype)).check=function(){this.img.addEventListener("load",this),this.img.addEventListener("error",this),this.img.src=this.url,this.getIsImageComplete()&&(this.confirm(0!==this.img.naturalWidth,"naturalWidth"),this.unbindEvents())},n.prototype.unbindEvents=function(){this.img.removeEventListener("load",this),this.img.removeEventListener("error",this)},n.prototype.confirm=function(t,e){this.isLoaded=t,this.emitEvent("progress",[this,this.element,e])},l.makeJQueryPlugin=function(t){(t=t||e.jQuery)&&((s=t).fn.imagesLoaded=function(t,e){return new l(this,t,e).jqDeferred.promise(s(this))})},l.makeJQueryPlugin(),l}),function(i,n){"function"==typeof define&&define.amd?define(["flickity/js/index","imagesloaded/imagesloaded"],function(t,e){return n(i,t,e)}):"object"==typeof module&&module.exports?module.exports=n(i,require("flickity"),require("imagesloaded")):i.Flickity=n(i,i.Flickity,i.imagesLoaded)}(window,function(t,e,i){"use strict";e.createMethods.push("_createImagesLoaded");var n=e.prototype;return n._createImagesLoaded=function(){this.on("activate",this.imagesLoaded)},n.imagesLoaded=function(){if(this.options.imagesLoaded){var n=this;i(this.slider).on("progress",function(t,e){var i=n.getParentCell(e.img);n.cellSizeChange(i&&i.element),n.options.freeScroll||n.positionSliderAtSelected()})}},e});


/**
 * Flickity fade v1.0.0
 * Fade between Flickity slides
 */

/* jshint browser: true, undef: true, unused: true */

( function( window, factory ) {
  // universal module definition
  /*globals define, module, require */
  if ( typeof define == 'function' && define.amd ) {
    // AMD
    define( [
      'flickity/js/index',
      'fizzy-ui-utils/utils',
    ], factory );
  } else if ( typeof module == 'object' && module.exports ) {
    // CommonJS
    module.exports = factory(
      require('flickity'),
      require('fizzy-ui-utils')
    );
  } else {
    // browser global
    factory(
      window.Flickity,
      window.fizzyUIUtils
    );
  }

}( this, function factory( Flickity, utils ) {

// ---- Slide ---- //

var Slide = Flickity.Slide;

var slideUpdateTarget = Slide.prototype.updateTarget;
Slide.prototype.updateTarget = function() {
  slideUpdateTarget.apply( this, arguments );
  if ( !this.parent.options.fade ) {
    return;
  }
  // position cells at selected target
  var slideTargetX = this.target - this.x;
  var firstCellX = this.cells[0].x;
  this.cells.forEach( function( cell ) {
    var targetX = cell.x - firstCellX - slideTargetX;
    cell.renderPosition( targetX );
  });
};

Slide.prototype.setOpacity = function( alpha ) {
  this.cells.forEach( function( cell ) {
    cell.element.style.opacity = alpha;
  });
};

// ---- Flickity ---- //

var proto = Flickity.prototype;

Flickity.createMethods.push('_createFade');

proto._createFade = function() {
  this.fadeIndex = this.selectedIndex;
  this.prevSelectedIndex = this.selectedIndex;
  this.on( 'select', this.onSelectFade );
  this.on( 'dragEnd', this.onDragEndFade );
  this.on( 'settle', this.onSettleFade );
  this.on( 'activate', this.onActivateFade );
  this.on( 'deactivate', this.onDeactivateFade );
};

var updateSlides = proto.updateSlides;
proto.updateSlides = function() {
  updateSlides.apply( this, arguments );
  if ( !this.options.fade ) {
    return;
  }
  // set initial opacity
  this.slides.forEach( function( slide, i ) {
    var alpha = i == this.selectedIndex ? 1 : 0;
    slide.setOpacity( alpha );
  }, this );
};

/* ---- events ---- */

proto.onSelectFade = function() {
  // in case of resize, keep fadeIndex within current count
  this.fadeIndex = Math.min( this.prevSelectedIndex, this.slides.length - 1 );
  this.prevSelectedIndex = this.selectedIndex;
};

proto.onSettleFade = function() {
  delete this.didDragEnd;
  if ( !this.options.fade ) {
    return;
  }
  // set full and 0 opacity on selected & faded slides
  this.selectedSlide.setOpacity( 1 );
  var fadedSlide = this.slides[ this.fadeIndex ];
  if ( fadedSlide && this.fadeIndex != this.selectedIndex ) {
    this.slides[ this.fadeIndex ].setOpacity( 0 );
  }
};

proto.onDragEndFade = function() {
  // set flag
  this.didDragEnd = true;
};

proto.onActivateFade = function() {
  if ( this.options.fade ) {
    this.element.classList.add('is-fade');
  }
};

proto.onDeactivateFade = function() {
  if ( !this.options.fade ) {
    return;
  }
  this.element.classList.remove('is-fade');
  // reset opacity
  this.slides.forEach( function( slide ) {
    slide.setOpacity('');
  });
};

/* ---- position & fading ---- */

var positionSlider = proto.positionSlider;
proto.positionSlider = function() {
  if ( !this.options.fade ) {
    positionSlider.apply( this, arguments );
    return;
  }

  this.fadeSlides();
  this.dispatchScrollEvent();
};

var positionSliderAtSelected = proto.positionSliderAtSelected;
proto.positionSliderAtSelected = function() {
  if ( this.options.fade ) {
    // position fade slider at origin
    this.setTranslateX( 0 );
  }
  positionSliderAtSelected.apply( this, arguments );
};

proto.fadeSlides = function() {
  if ( this.slides.length < 2 ) {
    return;
  }
  // get slides to fade-in & fade-out
  var indexes = this.getFadeIndexes();
  var fadeSlideA = this.slides[ indexes.a ];
  var fadeSlideB = this.slides[ indexes.b ];
  var distance = this.wrapDifference( fadeSlideA.target, fadeSlideB.target );
  var progress = this.wrapDifference( fadeSlideA.target, -this.x );
  progress = progress / distance;

  fadeSlideA.setOpacity( 1 - progress );
  fadeSlideB.setOpacity( progress );

  // hide previous slide
  var fadeHideIndex = indexes.a;
  if ( this.isDragging ) {
    fadeHideIndex = progress > 0.5 ? indexes.a : indexes.b;
  }
  var isNewHideIndex = this.fadeHideIndex != undefined &&
    this.fadeHideIndex != fadeHideIndex &&
    this.fadeHideIndex != indexes.a &&
    this.fadeHideIndex != indexes.b;
  if ( isNewHideIndex ) {
    // new fadeHideSlide set, hide previous
    this.slides[ this.fadeHideIndex ].setOpacity( 0 );
  }
  this.fadeHideIndex = fadeHideIndex;
};

proto.getFadeIndexes = function() {
  if ( !this.isDragging && !this.didDragEnd ) {
    return {
      a: this.fadeIndex,
      b: this.selectedIndex,
    };
  }
  if ( this.options.wrapAround ) {
    return this.getFadeDragWrapIndexes();
  } else {
    return this.getFadeDragLimitIndexes();
  }
};

proto.getFadeDragWrapIndexes = function() {
  var distances = this.slides.map( function( slide, i ) {
    return this.getSlideDistance( -this.x, i );
  }, this );
  var absDistances = distances.map( function( distance ) {
    return Math.abs( distance );
  });
  var minDistance = Math.min.apply( Math, absDistances );
  var closestIndex = absDistances.indexOf( minDistance );
  var distance = distances[ closestIndex ];
  var len = this.slides.length;

  var delta = distance >= 0 ? 1 : -1;
  return {
    a: closestIndex,
    b: utils.modulo( closestIndex + delta, len ),
  };
};

proto.getFadeDragLimitIndexes = function() {
  // calculate closest previous slide
  var dragIndex = 0;
  for ( var i=0; i < this.slides.length - 1; i++ ) {
    var slide = this.slides[i];
    if ( -this.x < slide.target ) {
      break;
    }
    dragIndex = i;
  }
  return {
    a: dragIndex,
    b: dragIndex + 1,
  };
};

proto.wrapDifference = function( a, b ) {
  var diff = b - a;

  if ( !this.options.wrapAround ) {
    return diff;
  }

  var diffPlus = diff + this.slideableWidth;
  var diffMinus = diff - this.slideableWidth;
  if ( Math.abs( diffPlus ) < Math.abs( diff ) ) {
    diff = diffPlus;
  }
  if ( Math.abs( diffMinus ) < Math.abs( diff ) ) {
    diff = diffMinus;
  }
  return diff;
};

// ---- wrapAround ---- //

var _getWrapShiftCells = proto._getWrapShiftCells;
proto._getWrapShiftCells = function() {
  if ( !this.options.fade ) {
    _getWrapShiftCells.apply( this, arguments );
  }
};

var shiftWrapCells = proto.shiftWrapCells;
proto.shiftWrapCells = function() {
  if ( !this.options.fade ) {
    shiftWrapCells.apply( this, arguments );
  }
};

return Flickity;

}));
]]></Script>
    <Script path="lib/fluidvids.js"><![CDATA[/*! fluidvids.js v2.4.1 | (c) 2014 @toddmotto | https://github.com/toddmotto/fluidvids */
!function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t:e.fluidvids=t()}(this,function(){"use strict";function e(e){return new RegExp("^(https?:)?//(?:"+d.players.join("|")+").*$","i").test(e)}function t(e,t){return parseInt(e,10)/parseInt(t,10)*100+"%"}function i(i){if((e(i.src)||e(i.data))&&!i.getAttribute("data-fluidvids")){var n=document.createElement("div");i.parentNode.insertBefore(n,i),i.className+=(i.className?" ":"")+"fluidvids-item",i.setAttribute("data-fluidvids","loaded"),n.className+="fluidvids",n.style.paddingTop=t(i.height,i.width),n.appendChild(i)}}function n(){var e=document.createElement("div");e.innerHTML="<p>x</p><style>"+o+"</style>",r.appendChild(e.childNodes[1])}var d={selector:["iframe","object"],players:["www.youtube.com","player.vimeo.com"]},o=[".fluidvids {","width: 100%; max-width: 100%; position: relative;","}",".fluidvids-item {","position: absolute; top: 0px; left: 0px; width: 100%; height: 100%;","}"].join(""),r=document.head||document.getElementsByTagName("head")[0];return d.render=function(){for(var e=document.querySelectorAll(d.selector.join()),t=e.length;t--;)i(e[t])},d.init=function(e){for(var t in e)d[t]=e[t];d.render(),n()},d});]]></Script>
    <Script path="lib/forms/aspnet-validation/aspnet-validation.min.js"><![CDATA[!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.aspnetValidation=t():e.aspnetValidation=t()}(window,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(n,a,function(t){return e[t]}.bind(null,a));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t),r.d(t,"MvcValidationProviders",function(){return o}),r.d(t,"ValidationService",function(){return s});var n=function(e,t,r,n){return new(r||(r=Promise))(function(a,i){function o(e){try{u(n.next(e))}catch(e){i(e)}}function s(e){try{u(n.throw(e))}catch(e){i(e)}}function u(e){e.done?a(e.value):new r(function(t){t(e.value)}).then(o,s)}u((n=n.apply(e,t||[])).next())})},a=function(e,t){var r,n,a,i,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(a=2&i[0]?n.return:i[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,i[1])).done)return a;switch(n=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,n=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(a=(a=o.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){o=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){o.label=i[1];break}if(6===i[0]&&o.label<a[1]){o.label=a[1],a=i;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(i);break}a[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],n=0}finally{r=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}};function i(e,t){var r=t.substr(2),n=e.lastIndexOf(".");if(n>-1){var a=e.substr(0,n)+"."+r,i=document.getElementsByName(a)[0];if(i)return i}return document.getElementsByName(r)[0]}var o=function(){return function(){this.required=function(e,t,r){return Boolean(e)},this.stringLength=function(e,t,r){if(!e)return!0;if(r.min){var n=parseInt(r.min);if(e.length<n)return!1}if(r.max){var a=parseInt(r.max);if(e.length>a)return!1}return!0},this.compare=function(e,t,r){if(!r.other)return!0;var n=i(t.name,r.other);return!n||n.value===e},this.range=function(e,t,r){if(!e)return!0;var n=parseFloat(e);return!isNaN(n)&&(!(r.min&&n<parseFloat(r.min))&&!(r.max&&n>parseFloat(r.max)))},this.regex=function(e,t,r){return!e||!r.pattern||new RegExp(r.pattern).test(e)},this.email=function(e,t,r){return!e||/^([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x22([^\x0d\x22\x5c\x80-\xff]|\x5c[\x00-\x7f])*\x22)(\x2e([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x22([^\x0d\x22\x5c\x80-\xff]|\x5c[\x00-\x7f])*\x22))*\x40([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x5b([^\x0d\x5b-\x5d\x80-\xff]|\x5c[\x00-\x7f])*\x5d)(\x2e([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x5b([^\x0d\x5b-\x5d\x80-\xff]|\x5c[\x00-\x7f])*\x5d))*(\.\w{2,})+$/.test(e)},this.creditcard=function(e,t,r){if(!e)return!0;if(/[^0-9 \-]+/.test(e))return!1;var n,a,i=0,o=0,s=!1;if((e=e.replace(/\D/g,"")).length<13||e.length>19)return!1;for(n=e.length-1;n>=0;n--)a=e.charAt(n),o=parseInt(a,10),s&&(o*=2)>9&&(o-=9),i+=o,s=!s;return i%10==0},this.url=function(e,t,r){return!e||new RegExp("^(?:(?:https?|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$","i").test(e)},this.phone=function(e,t,r){return!e||!/[\+\-\s][\-\s]/g.test(e)&&/^\+?[0-9\-\s]+$/.test(e)},this.remote=function(e,t,r){if(!e)return!0;for(var n=r.additionalfields.split(","),a={},o=0,s=n;o<s.length;o++){var u=s[o],d=u.substr(2),f=i(t.name,u);Boolean(f&&f.value)&&(a[d]=f.value)}var l=r.url,c=[];for(var d in a){var x=encodeURIComponent(d)+"="+encodeURIComponent(a[d]);c.push(x)}var p=c.join("&");return new Promise(function(e,t){var n=new XMLHttpRequest;if("Post"===r.type){var i=new FormData;for(var o in a)i.append(o,a[o]);n.open("post",l),n.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),n.send(p)}else n.open("get",l+"?"+p),n.send();n.onload=function(r){if(n.status>=200&&n.status<300){var a=JSON.parse(n.responseText);e(a)}else t({status:n.status,statusText:n.statusText,data:n.responseText})},n.onerror=function(e){t({status:n.status,statusText:n.statusText,data:n.responseText})}})}}}(),s=function(){function e(){this.providers={},this.messageFor={},this.elementUIDs=[],this.elementByUID={},this.formInputs={},this.validators={},this.elementEvents={},this.summary={},this.debounce=300}return e.prototype.addProvider=function(e,t){this.providers[e]||(this.providers[e]=t)},e.prototype.addMvcProviders=function(){var e=new o;this.addProvider("required",e.required),this.addProvider("length",e.stringLength),this.addProvider("maxlength",e.stringLength),this.addProvider("minlength",e.stringLength),this.addProvider("equalto",e.compare),this.addProvider("range",e.range),this.addProvider("regex",e.regex),this.addProvider("creditcard",e.creditcard),this.addProvider("email",e.email),this.addProvider("url",e.url),this.addProvider("phone",e.phone),this.addProvider("remote",e.remote)},e.prototype.scanMessages=function(){for(var e=document.querySelectorAll("[data-valmsg-for]"),t=0;t<e.length;t++){var r=e[t],n=r.getAttribute("data-valmsg-for");this.messageFor[n]||(this.messageFor[n]=[]),this.messageFor[n].push(r)}},e.prototype.parseDirectives=function(e){for(var t={},r={},n="data-val-".length,a=0;a<e.length;a++){var i=e[a];if(0===i.name.indexOf("data-val-")){var o=i.name.substr(n);r[o]=i.value}}var s=function(e){if(-1===e.indexOf("-")){for(var n=Object.keys(r).filter(function(t){return t!==e&&0===t.indexOf(e)}),a={error:r[e],params:{}},i=(e+"-").length,o=0;o<n.length;o++){var s=r[n[o]],u=n[o].substr(i);a.params[u]=s}t[e]=a}};for(var o in r)s(o);return t},e.prototype.guid4=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var t=16*Math.random()|0;return("x"==e?t:3&t|8).toString(16)})},e.prototype.getElementUID=function(e){var t=this.elementUIDs.filter(function(t){return t.node===e})[0];if(t)return t.uid;var r=this.guid4();return this.elementUIDs.push({node:e,uid:r}),this.elementByUID[r]=e,r},e.prototype.getFormValidationTask=function(e){var t=this.formInputs[e];if(!t||0===t.length)return null;for(var r=[],n=0;n<t.length;n++){var a=t[n];r.push(this.validators[a])}var i=r.map(function(e){return e()});return Promise.all(i).then(function(e){return e.every(function(e){return e})})},e.prototype.trackFormInput=function(e,t){var r=this,n=this.getElementUID(e);if(this.formInputs[n]||(this.formInputs[n]=[]),-1===this.formInputs[n].indexOf(t)&&this.formInputs[n].push(t),!this.elementEvents[n]){var a=function(t){var a=r.getFormValidationTask(n);a&&(t.preventDefault(),a.then(function(t){t&&e.submit()}).catch(function(e){console.log(e)}))};e.addEventListener("submit",a),e.addEventListener("reset",function(e){for(var t=0,a=r.formInputs[n];t<a.length;t++){var i=a[t],o=r.elementByUID[i];o.classList.remove("input-validation-error"),o.classList.remove("input-validation-valid");var s=r.messageFor[o.name];if(s)for(var u=0;u<s.length;u++)s[u].innerHTML="";delete r.summary[i]}r.renderSummary()}),this.elementEvents[n]=a}},e.prototype.addInput=function(e){var t=this,r=this.getElementUID(e),n=this.parseDirectives(e.attributes),a=this.createValidator(e,n);if(this.validators[r]=a,e.form&&this.trackFormInput(e.form,r),!this.elementEvents[r]){var i,o=function(e){var n=t.validators[r];clearTimeout(i),i=setTimeout(n,t.debounce)};"select"===e.tagName.toLowerCase()?e.addEventListener("change",o):e.addEventListener("input",o),this.elementEvents[r]=o}},e.prototype.scanInputs=function(){for(var e=document.querySelectorAll('[data-val="true"]'),t=0;t<e.length;t++){var r=e[t];this.addInput(r)}},e.prototype.createSummaryDOM=function(){if(!Object.keys(this.summary).length)return null;var e=document.createElement("ul");for(var t in this.summary){var r=document.createElement("li");r.innerHTML=this.summary[t],e.appendChild(r)}return e},e.prototype.renderSummary=function(){var e=document.querySelectorAll('[data-valmsg-summary="true"]');if(e.length){var t=JSON.stringify(this.summary,Object.keys(this.summary).sort());if(t!==this.renderedSummaryJSON){this.renderedSummaryJSON=t;for(var r=this.createSummaryDOM(),n=0;n<e.length;n++){var a=e[n];a.innerHTML="",r?(a.className="validation-summary-errors",a.appendChild(r.cloneNode(!0))):a.className="validation-summary-valid"}}}},e.prototype.addError=function(e,t){var r=this.messageFor[e.name];if(r)for(var n=0;n<r.length;n++)r[n].innerHTML=t,r[n].className="field-validation-error";e.classList.remove("input-validation-valid"),e.classList.add("input-validation-error");var a=this.getElementUID(e);this.summary[a]=t,this.renderSummary()},e.prototype.removeError=function(e){var t=this.messageFor[e.name];if(t)for(var r=0;r<t.length;r++)t[r].innerHTML="",t[r].className="field-validation-valid";e.classList.remove("input-validation-error"),e.classList.add("input-validation-valid");var n=this.getElementUID(e);delete this.summary[n],this.renderSummary()},e.prototype.createValidator=function(e,t){var r=this;return function(){return n(r,void 0,void 0,function(){var r,n,i,o,s,u,d,f,l,c;return a(this,function(a){switch(a.label){case 0:for(n in r=[],t)r.push(n);i=0,a.label=1;case 1:return i<r.length?(o=r[i],s=t[o],(u=this.providers[o])?(d=u(e.value,e,s.params),f=!1,l=s.error,"boolean"!=typeof d?[3,2]:(f=d,[3,5])):(console.log("aspnet-validation provider not implemented: "+o),[3,6])):[3,7];case 2:return"string"!=typeof d?[3,3]:(f=!1,l=d,[3,5]);case 3:return[4,d];case 4:"boolean"==typeof(c=a.sent())?f=c:(f=!1,l=c),a.label=5;case 5:if(!f)return this.addError(e,l),[2,!1];a.label=6;case 6:return i++,[3,1];case 7:return this.removeError(e),[2,!0]}})})}},e.prototype.bootstrap=function(){var e=this;this.addMvcProviders(),window.addEventListener("load",function(t){e.scanMessages(),e.scanInputs()})},e}()}])});
]]></Script>
    <Script path="lib/forms/promise-polyfill/polyfill.min.js"><![CDATA[!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n():"function"==typeof define&&define.amd?define(n):n()}(0,function(){"use strict";function e(e){var n=this.constructor;return this.then(function(t){return n.resolve(e()).then(function(){return t})},function(t){return n.resolve(e()).then(function(){return n.reject(t)})})}function n(e){return!(!e||"undefined"==typeof e.length)}function t(){}function o(e){if(!(this instanceof o))throw new TypeError("Promises must be constructed via new");if("function"!=typeof e)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=undefined,this._deferreds=[],c(e,this)}function r(e,n){for(;3===e._state;)e=e._value;0!==e._state?(e._handled=!0,o._immediateFn(function(){var t=1===e._state?n.onFulfilled:n.onRejected;if(null!==t){var o;try{o=t(e._value)}catch(r){return void f(n.promise,r)}i(n.promise,o)}else(1===e._state?i:f)(n.promise,e._value)})):e._deferreds.push(n)}function i(e,n){try{if(n===e)throw new TypeError("A promise cannot be resolved with itself.");if(n&&("object"==typeof n||"function"==typeof n)){var t=n.then;if(n instanceof o)return e._state=3,e._value=n,void u(e);if("function"==typeof t)return void c(function(e,n){return function(){e.apply(n,arguments)}}(t,n),e)}e._state=1,e._value=n,u(e)}catch(r){f(e,r)}}function f(e,n){e._state=2,e._value=n,u(e)}function u(e){2===e._state&&0===e._deferreds.length&&o._immediateFn(function(){e._handled||o._unhandledRejectionFn(e._value)});for(var n=0,t=e._deferreds.length;t>n;n++)r(e,e._deferreds[n]);e._deferreds=null}function c(e,n){var t=!1;try{e(function(e){t||(t=!0,i(n,e))},function(e){t||(t=!0,f(n,e))})}catch(o){if(t)return;t=!0,f(n,o)}}var a=setTimeout;o.prototype["catch"]=function(e){return this.then(null,e)},o.prototype.then=function(e,n){var o=new this.constructor(t);return r(this,new function(e,n,t){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof n?n:null,this.promise=t}(e,n,o)),o},o.prototype["finally"]=e,o.all=function(e){return new o(function(t,o){function r(e,n){try{if(n&&("object"==typeof n||"function"==typeof n)){var u=n.then;if("function"==typeof u)return void u.call(n,function(n){r(e,n)},o)}i[e]=n,0==--f&&t(i)}catch(c){o(c)}}if(!n(e))return o(new TypeError("Promise.all accepts an array"));var i=Array.prototype.slice.call(e);if(0===i.length)return t([]);for(var f=i.length,u=0;i.length>u;u++)r(u,i[u])})},o.resolve=function(e){return e&&"object"==typeof e&&e.constructor===o?e:new o(function(n){n(e)})},o.reject=function(e){return new o(function(n,t){t(e)})},o.race=function(e){return new o(function(t,r){if(!n(e))return r(new TypeError("Promise.race accepts an array"));for(var i=0,f=e.length;f>i;i++)o.resolve(e[i]).then(t,r)})},o._immediateFn="function"==typeof setImmediate&&function(e){setImmediate(e)}||function(e){a(e,0)},o._unhandledRejectionFn=function(e){void 0!==console&&console&&console.warn("Possible Unhandled Promise Rejection:",e)};var l=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if("undefined"!=typeof global)return global;throw Error("unable to locate global object")}();"Promise"in l?l.Promise.prototype["finally"]||(l.Promise.prototype["finally"]=e):l.Promise=o});]]></Script>
    <Script path="lib/ie11CustomProperties.js"><![CDATA[/*! ie11CustomProperties.js v3.0.6 | MIT License | https://git.io/fjXMN */
!function () {
	'use strict';

	// check for support
	var testEl = document.createElement('i');
	testEl.style.setProperty('--x', 'y');
	if (testEl.style.getPropertyValue('--x') === 'y' || !testEl.msMatchesSelector) return;

	if (!Element.prototype.matches) Element.prototype.matches = Element.prototype.msMatchesSelector;

    var listeners = [],
        root = document,
        Observer;

	function qsa(el, selector){
		try {
			return el.querySelectorAll(selector);
		} catch(e) {
			// console.warn('the Selector '+selector+' can not be parsed');
			return [];
		}
	}
    function onElement (selector, callback) {
        var listener = {
            selector: selector,
            callback: callback,
            elements: new WeakMap(),
        };
		var els = qsa(root, listener.selector), i=0, el;
		while (el = els[i++]) {
            listener.elements.set(el, true);
            listener.callback.call(el, el);
        }
        listeners.push(listener);
        if (!Observer) {
            Observer = new MutationObserver(checkMutations);
            Observer.observe(root, {
                childList: true,
                subtree: true
            });
        }
        checkListener(listener);
    };
    function checkListener(listener, target) {
        var i = 0, el, els = [];
		try {
			target && target.matches(listener.selector) && els.push(target);
		} catch(e) {}
        if (loaded) { // ok? check inside node on innerHTML - only when loaded
            Array.prototype.push.apply(els, qsa(target || root, listener.selector));
        }
        while (el = els[i++]) {
            if (listener.elements.has(el)) continue;
            listener.elements.set(el,true);
            listener.callback.call(el, el);
        }
    }
    function checkListeners(inside) {
        var i = 0, listener;
        while (listener = listeners[i++]) checkListener(listener, inside);
    }
    function checkMutations(mutations) {
		var j = 0, i, mutation, nodes, target;
        while (mutation = mutations[j++]) {
            nodes = mutation.addedNodes, i = 0;
            while (target = nodes[i++]) target.nodeType === 1 && checkListeners(target);
        }
    }

    var loaded = false;
    document.addEventListener('DOMContentLoaded', function () {
        loaded = true;
    });

	// svg polyfills
	function copyProperty(prop, from, to){
		var desc = Object.getOwnPropertyDescriptor(from, prop);
		Object.defineProperty(to, prop, desc);
	}
	if (!('classList' in Element.prototype)) {
		copyProperty('classList', HTMLElement.prototype, Element.prototype);
	}
	if (!('innerHTML' in Element.prototype)) {
		copyProperty('innerHTML', HTMLElement.prototype, Element.prototype);
	}
	if (!('sheet' in SVGStyleElement.prototype)) {
		Object.defineProperty(SVGStyleElement.prototype, 'sheet', {
			get:function(){
				var all = document.styleSheets, i=0, sheet;
				while (sheet=all[i++]) {
					if (sheet.ownerNode === this) return sheet;
				}

			}
		});
	}


	// main logic

	// cached regexps, better performance
	const regFindSetters = /([\s{;])(--([A-Za-z0-9-_]*)\s*:([^;!}{]+)(!important)?)(?=\s*([;}]|$))/g;
	const regFindGetters = /([{;]\s*)([A-Za-z0-9-_]+\s*:[^;}{]*var\([^!;}{]+)(!important)?(?=\s*([;}$]|$))/g;
	const regRuleIEGetters = /-ieVar-([^:]+):/g
	const regRuleIESetters = /-ie-([^};]+)/g
	//const regHasVar = /var\(/;
	const regPseudos = /:(hover|active|focus|target|:before|:after|:first-letter|:first-line)/;

	onElement('link[rel="stylesheet"]', function (el) {
		fetchCss(el.href, function (css) {
			var newCss = rewriteCss(css);
			if (css === newCss) return;
			newCss = relToAbs(el.href, newCss);
			el.disabled = true;
			var style = document.createElement('style');
			if (el.media) style.setAttribute('media', el.media);
			el.parentNode.insertBefore(style, el);
			activateStyleElement(style, newCss);
		});
	});

	function foundStyle(el){
		if (el.ieCP_polyfilled) return;
		if (el.ieCP_elementSheet) return;
		var css = el.innerHTML;
		var newCss = rewriteCss(css);
		if (css === newCss) return;
		activateStyleElement(el, newCss);
	}
	onElement('style', foundStyle);
	// immediate, to pass w3c-tests, bud its a bad idea
	// addEventListener('DOMNodeInserted',function(e){ e.target.tagName === 'STYLE' && foundStyle(e.target); });



	onElement('[ie-style]', function (el) {
		var newCss = rewriteCss('{'+el.getAttribute('ie-style')).substr(1);
		el.style.cssText += ';'+ newCss;
		var found = parseRewrittenStyle(el.style);
		if (found.getters) addGetterElement(el, found.getters, '%styleAttr');
		if (found.setters) addSetterElement(el, found.setters);
	});

	function relToAbs(base, css) {
		return css.replace(/url\(([^)]+)\)/g, function($0, $1){
			$1 = $1.trim().replace(/(^['"]|['"]$)/g,'');
			if ($1.match(/^([a-z]+:|\/)/)) return $0;
			base = base.replace(/\?.*/,'');
			return 'url('+ base + './../' + $1 +')';
		});
	}

	// ie has a bug, where unknown properties at pseudo-selectors are computed at the element
	// #el::after { -content:'x'; } => getComputedStyle(el)['-content'] == 'x'
	// should we add something like -ieVar-pseudo_after-content:'x'?
	function rewriteCss(css) {

		/* uncomment if spec finished and needed by someone
		css = css.replace(/@property ([^{]+){([^}]+)}/, function($0, prop, body){
			prop = prop.trim();
			const declaration = {name:prop};
			body.split(';').forEach(function(pair){
				const x = pair.split(':');
				if (x[1]) declaration[ x[0].trim() ] = x[1];
			});
			declaration['inherits'] = declaration['inherits'].trim()==='true' ? true : false;
			declaration['initialValue'] = declaration['initial-value'];
			CSS.registerProperty(declaration)
			return '/*\n @property ... removed \n*'+'/';
		});
		*/
		return css.replace(regFindSetters, function($0, $1, $2, $3, $4, important){
			return $1+'-ie-'+(important?'❗':'')+$3+':'+encodeValue($4);
		}).replace(regFindGetters, function($0, $1, $2, important){
			return $1+'-ieVar-'+(important?'❗':'')+$2+'; '+$2; // keep the original, so chaining works "--x:var(--y)"
		});
	}
	function encodeValue(value){
		return value;
		return value.replace(/ /g,'␣');
	}
	const keywords = {initial:1,inherit:1,revert:1,unset:1};
	function decodeValue(value){
		return value;
		if (value===undefined) return;
		value =  value.replace(/␣/g,' ');
		const trimmed = value.trim();
		if (keywords[trimmed]) return trimmed;
		return value;
	}

	// beta
	const styles_of_getter_properties = {};

	function parseRewrittenStyle(style) { // less memory then parameter cssText?

		// beta
		style['z-index']; // ie11 can access unknown properties in stylesheets only if accessed a dashed known property

		const cssText = style.cssText;
		var matchesGetters = cssText.match(regRuleIEGetters), j, match;
		if (matchesGetters) {
			var getters = []; // eg. [border,color]
			for (j = 0; match = matchesGetters[j++];) {
				let propName = match.slice(7, -1);
				if (propName[0] === '❗') propName = propName.substr(1);
				getters.push(propName);

				// beta
				if (!styles_of_getter_properties[propName]) styles_of_getter_properties[propName] = [];
				styles_of_getter_properties[propName].push(style);
			}
		}
		var matchesSetters = cssText.match(regRuleIESetters);
		if (matchesSetters) {
			var setters = {}; // eg. [--color:#fff, --padding:10px];
			for (j = 0; match = matchesSetters[j++];) {
				let x = match.substr(4).split(':');
				let propName = x[0];
				let propValue = x[1];
				if (propName[0] === '❗') propName = propName.substr(1);
				setters[propName] = propValue;
			}
		}
		return {getters:getters, setters:setters};
	}
	function activateStyleElement(style, css) {
		style.innerHTML = css;
		style.ieCP_polyfilled = true;
		var rules = style.sheet.rules, i=0, rule; // cssRules = CSSRuleList, rules = MSCSSRuleList
		while (rule = rules[i++]) {
			const found = parseRewrittenStyle(rule.style);
			if (found.getters) addGettersSelector(rule.selectorText, found.getters);
			if (found.setters) addSettersSelector(rule.selectorText, found.setters);

			// mediaQueries: redraw the hole document
			// better add events for each element?
			const media = rule.parentRule && rule.parentRule.media && rule.parentRule.media.mediaText;
			if (media && (found.getters || found.setters)) {
				matchMedia(media).addListener(function(){
					drawTree(document.documentElement)
				})
			}
		}

		// beta
		redrawStyleSheets()
	}

	function addGettersSelector(selector, properties) {
		selectorAddPseudoListeners(selector);
		onElement(unPseudo(selector), function (el) {
			addGetterElement(el, properties, selector);
			drawElement(el);
		});
	}
	function addGetterElement(el, properties, selector) {
		var i=0, prop, j;
		const selectors = selector.split(','); // split grouped selectors
		el.setAttribute('iecp-needed', true);
		if (!el.ieCPSelectors) el.ieCPSelectors = {};
		while (prop = properties[i++]) {
			for (j = 0; selector = selectors[j++];) {
				const parts = selector.trim().split('::');
				if (!el.ieCPSelectors[prop]) el.ieCPSelectors[prop] = [];
				el.ieCPSelectors[prop].push({
					selector: parts[0],
					pseudo: parts[1] ? '::' + parts[1] : ''
				});
			}
		}
	}
	function addSettersSelector(selector, propVals) {
		selectorAddPseudoListeners(selector);
		onElement(unPseudo(selector), function (el) {
			addSetterElement(el, propVals);
		});
	}
	function addSetterElement(el, propVals) {
		if (!el.ieCP_setters) el.ieCP_setters = {};
		for (var prop in propVals) { // eg. {foo:#fff, bar:baz}
			el.ieCP_setters['--' + prop] = 1;
		}
		drawTree(el);
	}

	//beta
	function redrawStyleSheets() {
		for (var prop in styles_of_getter_properties) {
			let styles = styles_of_getter_properties[prop];
			for (var i=0, style; style=styles[i++];) {
				if (style.owningElement) continue;
				var value = style['-ieVar-'+prop];
				if (!value) continue;
				value = styleComputeValueWidthVars(getComputedStyle(document.documentElement), value);
				if (value === '') continue;
				try {
					style[prop] = value;
				} catch(e) {}
			}
		}
	}


	const pseudos = {
		hover:{
			on:'mouseenter',
			off:'mouseleave'
		},
		focus:{
			on:'focusin',
			off:'focusout'
		},
		active:{
			on:'CSSActivate',
			off:'CSSDeactivate'
		},
	};
	function selectorAddPseudoListeners(selector){
		// ie11 has the strange behavoir, that groups of selectors are individual rules, but starting with the full selector:
		// td, th, button { color:red } results in this rules:
		// "td, th, button" | "th, th" | "th"
		selector = selector.split(',')[0];
		for (var pseudo in pseudos) {
			var parts = selector.split(':'+pseudo);
			if (parts.length > 1) {
				var ending = parts[1].match(/^[^\s]*/); // ending elementpart of selector (used for not(:active))
				let sel = unPseudo(parts[0]+ending);
				const listeners = pseudos[pseudo];
				onElement(sel, function (el) {
					el.addEventListener(listeners.on, drawTreeEvent);
					el.addEventListener(listeners.off, drawTreeEvent);
				});
			}
		}
	}
	let CSSActive = null;
	document.addEventListener('mousedown',function(e){
		setTimeout(function(){
			if (e.target === document.activeElement) {
				var evt = document.createEvent('Event');
				evt.initEvent('CSSActivate', true, true);
				CSSActive = e.target;
				CSSActive.dispatchEvent(evt);
			}
		})
	});
	document.addEventListener('mouseup',function(){
		if (CSSActive) {
			var evt = document.createEvent('Event');
			evt.initEvent('CSSDeactivate', true, true);
			CSSActive.dispatchEvent(evt);
			CSSActive = null;
		}
	});

	function unPseudo(selector){
		return selector.replace(regPseudos,'').replace(':not()','');
	}

	var uniqueCounter = 0;

	/* old *
	function _drawElement(el) {
		if (!el.ieCP_unique) { // use el.uniqueNumber? but needs class for the css-selector => test performance
			el.ieCP_unique = ++uniqueCounter;
			el.classList.add('iecp-u' + el.ieCP_unique);
		}
		var style = getComputedStyle(el);
		if (el.ieCP_sheet) while (el.ieCP_sheet.rules[0]) el.ieCP_sheet.deleteRule(0);
		for (var prop in el.ieCPSelectors) {
			var important = style['-ieVar-❗' + prop];
			let valueWithVar = important || style['-ieVar-' + prop];
			if (!valueWithVar) continue; // todo, what if '0'

			var details = {};
			var value = styleComputeValueWidthVars(style, valueWithVar, details);

			if (important) value += ' !important';
			for (var i=0, item; item=el.ieCPSelectors[prop][i++];) { // todo: split and use requestAnimationFrame?
				if (item.selector === '%styleAttr') {
					el.style[prop] = value;
				} else {

					// beta
					if (!important && details.allByRoot !== false) continue; // dont have to draw root-properties

					//let selector = item.selector.replace(/>? \.[^ ]+/, ' ', item.selector); // todo: try to equalize specificity
					let selector = item.selector;
					elementStyleSheet(el).insertRule(selector + '.iecp-u' + el.ieCP_unique + item.pseudo + ' {' + prop + ':' + value + '}', 0);
				}
			}
		}
	}
	function elementStyleSheet(el){
		if (!el.ieCP_sheet) {
			const styleEl = document.createElement('style');
			styleEl.ieCP_elementSheet = 1;
			//el.appendChild(styleEl); // yes! self-closing tags can have style as children, but - if i set innerHTML, the stylesheet is lost
			document.head.appendChild(styleEl);
			el.ieCP_sheet = styleEl.sheet;
		}
		return el.ieCP_sheet;
	}

	/* */
	function _drawElement(el) {
		if (!el.ieCP_unique) { // use el.uniqueNumber? but needs class for the css-selector => test performance
			el.ieCP_unique = ++uniqueCounter;
			el.classList.add('iecp-u' + el.ieCP_unique);
		}
		var style = getComputedStyle(el);
		let css = '';
		for (var prop in el.ieCPSelectors) {
			var important = style['-ieVar-❗' + prop];
			let valueWithVar = important || style['-ieVar-' + prop];
			if (!valueWithVar) continue; // todo, what if '0'
			var details = {};
			var value = styleComputeValueWidthVars(style, valueWithVar, details);
			//if (value==='initial') value = initials[prop];
			if (important) value += ' !important';
			for (var i=0, item; item=el.ieCPSelectors[prop][i++];) { // todo: split and use requestAnimationFrame?
				if (item.selector === '%styleAttr') {
					el.style[prop] = value;
				} else {

					// beta
					if (!important && details.allByRoot !== false) continue; // dont have to draw root-properties

					//let selector = item.selector.replace(/>? \.[^ ]+/, ' ', item.selector); // todo: try to equalize specificity
					let selector = item.selector;
					css += selector + '.iecp-u' + el.ieCP_unique + item.pseudo + '{' + prop + ':' + value + '}\n';
				}
			}
		}
		elementSetCss(el, css);
	}
	function elementSetCss(el, css){
		if (!el.ieCP_styleEl && css) {
			const styleEl = document.createElement('style');
			styleEl.ieCP_elementSheet = 1;
			//el.appendChild(styleEl); // yes! self-closing tags can have style as children, but - if i set innerHTML, the stylesheet is lost
			document.head.appendChild(styleEl);
			el.ieCP_styleEl = styleEl;
		}
		if (el.ieCP_styleEl) el.ieCP_styleEl.innerHTML = css;
	}
	/* */

	function drawTree(target) {
		if (!target) return;
		var els = target.querySelectorAll('[iecp-needed]');
		if (target.hasAttribute && target.hasAttribute('iecp-needed')) drawElement(target); // self
		for (var i = 0, el; el = els[i++];) drawElement(el); // tree
	}
	// draw queue
	let drawQueue = new Set();
	let collecting = false;
	let drawing = false;
	function drawElement(el){
		drawQueue.add(el);
		if (collecting) return;
		collecting = true;
		requestAnimationFrame(function(){
		//setImmediate(function(){
			collecting = false;
			drawing = true;
			drawQueue.forEach(_drawElement);
			drawQueue.clear();
			setTimeout(function(){ // mutationObserver will trigger delayed, requestAnimationFrame will miss some changes
				drawing = false;
			})
		})
	}


	function drawTreeEvent(e) {
		drawTree(e.target)
	}

	function findVars(str, cb){ // css value parser
		let level=0, openedLevel=null, lastPoint=0, newStr = '', i=0, char, insideCalc;
		while (char=str[i++]) {
			if (char === '(') {
				++level;
				if (openedLevel === null && str[i-4]+str[i-3]+str[i-2] === 'var') {
					openedLevel = level;
					newStr += str.substring(lastPoint, i-4);
					lastPoint = i;
				}
				if (str[i-5]+str[i-4]+str[i-3]+str[i-2] === 'calc') {
					insideCalc = level;
				}
			}
			if (char === ')' && openedLevel === level) {
				let variable = str.substring(lastPoint, i-1).trim(), fallback;
				let x = variable.indexOf(',');
				if (x!==-1) {
					fallback = variable.slice(x+1);
					variable = variable.slice(0,x);
				}
				newStr += cb(variable, fallback, insideCalc);
				lastPoint = i;
				openedLevel = null;
			}
			if (char === ')') {
				--level;
				if (insideCalc === level) insideCalc = null;
			}
		}
		newStr += str.substring(lastPoint);
		return newStr;
	}
	function styleComputeValueWidthVars(style, valueWithVars, details){
		return findVars(valueWithVars, function(variable, fallback, insideCalc){
			var value = style.getPropertyValue(variable);
			if (insideCalc) value = value.replace(/^calc\(/, '('); // prevent nested calc
			if (details && style.lastPropertyServedBy !== document.documentElement) details.allByRoot = false;
			if (value==='' && fallback) value = styleComputeValueWidthVars(style, fallback, details);
			return value;
		});
	}

	// mutation listener
	var observer = new MutationObserver(function(mutations) {
		if (drawing) return;
		for (var i=0, mutation; mutation=mutations[i++];) {
			if (mutation.attributeName === 'iecp-needed') continue; // why?
			// recheck all selectors if it targets new elements?
			drawTree(mutation.target);
		}
	});
	setTimeout(function(){
		observer.observe(document,{attributes: true, subtree: true });
	})

	// :target listener
	var oldHash = location.hash
	addEventListener('hashchange',function(e){
		var newEl = document.getElementById(location.hash.substr(1));
		if (newEl) {
			var oldEl = document.getElementById(oldHash.substr(1));
			drawTree(newEl);
			drawTree(oldEl);
		} else {
			drawTree(document);
		}
		oldHash = location.hash;
	});

	// add owningElement to Element.style
	var descriptor = Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'style');
	var styleGetter = descriptor.get;
	descriptor.get = function () {
		const style = styleGetter.call(this);
		style.owningElement = this;
		return style;
	}
	Object.defineProperty(HTMLElement.prototype, 'style', descriptor);

	// add computedFor to computed style-objects
	var originalGetComputed = getComputedStyle;
	window.getComputedStyle = function (el) {
		var style = originalGetComputed.apply(this, arguments);
		style.computedFor = el;
		//style.pseudoElt = pseudoElt; //not needed at the moment
		return style;
	}

	// getPropertyValue / setProperty hooks
	const StyleProto = CSSStyleDeclaration.prototype;

	const oldGetP = StyleProto.getPropertyValue;
	StyleProto.getPropertyValue = function (property) {
		this.lastPropertyServedBy = false;
		property = property.trim();

		/* *
		if (this.owningElement) {
			const ieProperty = '-ieVar-'+property;
			const iePropertyImportant = '-ieVar-❗'+property;
			let value = this[iePropertyImportant] || this[ieProperty];
			if (value !== undefined) {
				// todo, test if syntax valid
				return value;
			}
		}
		/* */

		if (property[0] !== '-' || property[1] !== '-') return oldGetP.apply(this, arguments);
		const undashed = property.substr(2);
		const ieProperty = '-ie-'+undashed;
		const iePropertyImportant = '-ie-❗'+undashed;
		let value = decodeValue(this[iePropertyImportant] || this[ieProperty]);

		if (this.computedFor) { // computedStyle
			if (value !== undefined && !inheritingKeywords[value]) {
				//if (regHasVar.test(value))  // todo: to i need this check?!!! i think its faster without
					value = styleComputeValueWidthVars(this, value);
				this.lastPropertyServedBy = this.computedFor;
			} else { // inherited
				if (inheritingKeywords[value] || !register[property] || register[property].inherits) {
					//let el = this.pseudoElt ? this.computedFor : this.computedFor.parentNode;
					let el = this.computedFor.parentNode;
					while (el.nodeType === 1) {
						// how slower would it be to getComputedStyle for every element, not just with defined ieCP_setters
						if (el.ieCP_setters && el.ieCP_setters[property]) {
							// i could make
							// value = el.nodeType ? getComputedStyle(this.computedFor.parentNode).getPropertyValue(property)
							// but i fear performance, stupid?
							var style = getComputedStyle(el);
							var tmpVal = decodeValue(style[iePropertyImportant] || style[ieProperty]);
							if (tmpVal !== undefined) {
								// calculated style from current element not from the element the value was inherited from! (style, value)
								//value = tmpVal; if (regHasVar.test(tmpVal))  // todo: to i need this check?!!! i think its faster without
									value = styleComputeValueWidthVars(this, tmpVal);
								this.lastPropertyServedBy = el;
								break;
							}
						}
						el = el.parentNode;
					}
				}
			}
			if (value==='initial') return '';
		}
		//if ((value === undefined || value === 'initial') && register[property]) value = register[property].initialValue; // todo?
		if (value === undefined && register[property]) value = register[property].initialValue;
		if (value === undefined) return '';
		return value;
	};
	const inheritingKeywords = {inherit:1,revert:1,unset:1};

	const oldSetP = StyleProto.setProperty;
	StyleProto.setProperty = function (property, value, prio) {
		if (property[0] !== '-' || property[1] !== '-') return oldSetP.apply(this, arguments);
		const el = this.owningElement;
		if (el) {
			if (!el.ieCP_setters) el.ieCP_setters = {};
			el.ieCP_setters[property] = 1;
		}
		property = '-ie-'+(prio==='important'?'❗':'') + property.substr(2);
		this.cssText += '; ' + property + ':' + encodeValue(value) + ';';
		//this[property] = value;
		el === document.documentElement && redrawStyleSheets();
		el && drawTree(el); // its delayed internal
	};


	/*
	var descriptor = Object.getOwnPropertyDescriptor(StyleProto, 'cssText');
	var cssTextGetter = descriptor.get;
	var cssTextSetter = descriptor.set;
	// descriptor.get = function () {
	// 	const style = styleGetter.call(this);
	// 	style.owningElement = this;
	// 	return style;
	// }
	descriptor.set = function (css) {
		var el = this.owningElement;
		if (el) {
			css = rewriteCss('{'+css).substr(1);
			cssTextSetter.call(this, css);
			var found = parseRewrittenStyle(this);
			if (found.getters) addGetterElement(el, found.getters, '%styleAttr');
			if (found.setters) addSetterElement(el, found.setters);
			return;
		}
		return cssTextSetter.call(this, css);
	}
	Object.defineProperty(StyleProto, 'cssText', descriptor);
	*/


	if (!window.CSS) window.CSS = {};
	const register = {}
	CSS.registerProperty = function(options){
		register[options.name] = options;
	}

	// fix "initial" keyword with generated custom properties, this is not supported ad all by ie, should i make a separate "inherit"-polyfill?
	/*
	const computed = getComputedStyle(document.documentElement)
	const initials = {};
	for (let i in computed) {
		initials[i.replace(/([A-Z])/, function(x){ return '-'+x.toLowerCase(x) })] = computed[i];
	}
	initials['display'] = 'inline';
	*/

	// utils
	function fetchCss(url, callback) {
		var request = new XMLHttpRequest();
		request.open('GET', url);
		request.overrideMimeType('text/css');
		request.onload = function () {
			if (request.status >= 200 && request.status < 400) {
				callback(request.responseText);
			}
		};
		request.send();
	}

}();]]></Script>
    <Script path="lib/instafeed.js"><![CDATA[// Instafeed.js v2.0.0rc1 https://github.com/stevenschobert/instafeed.js
// Minified with Terser v3.14.1
!function(e,t){"function"==typeof define&&define.amd?define([],t):"object"==typeof exports&&"string"!=typeof exports.nodeName?module.exports=t():e.Instafeed=t()}(this,function(){function e(e,t){if(!e)throw new Error(t)}function t(t){e(!t||"object"==typeof t,"options must be an object, got "+t+" ("+typeof t+")");var o={accessToken:null,accessTokenTimeout:5e3,after:null,apiTimeout:5e3,debug:!1,error:null,filter:null,limit:null,mock:!1,render:null,sort:null,success:null,target:"instafeed",template:'<a href="{{link}}"><img title="{{caption}}" src="{{image}}" /></a>',templateBoundaries:["{{","}}"],transform:null};if(t)for(var n in o)void 0!==t[n]&&(o[n]=t[n]);e("string"==typeof o.target||"object"==typeof o.target,"target must be a string or DOM node, got "+o.target+" ("+typeof o.target+")"),e("string"==typeof o.accessToken||"function"==typeof o.accessToken,"accessToken must be a string or function, got "+o.accessToken+" ("+typeof o.accessToken+")"),e("number"==typeof o.accessTokenTimeout,"accessTokenTimeout must be a number, got "+o.accessTokenTimeout+" ("+typeof o.accessTokenTimeout+")"),e("number"==typeof o.apiTimeout,"apiTimeout must be a number, got "+o.apiTimeout+" ("+typeof o.apiTimeout+")"),e("boolean"==typeof o.debug,"debug must be true or false, got "+o.debug+" ("+typeof o.debug+")"),e("boolean"==typeof o.mock,"mock must be true or false, got "+o.mock+" ("+typeof o.mock+")"),e("object"==typeof o.templateBoundaries&&2===o.templateBoundaries.length&&"string"==typeof o.templateBoundaries[0]&&"string"==typeof o.templateBoundaries[1],"templateBoundaries must be an array of 2 strings, got "+o.templateBoundaries+" ("+typeof o.templateBoundaries+")"),e(!o.template||"string"==typeof o.template,"template must null or string, got "+o.template+" ("+typeof o.template+")"),e(!o.error||"function"==typeof o.error,"error must be null or function, got "+o.error+" ("+typeof o.error+")"),e(!o.after||"function"==typeof o.after,"after must be null or function, got "+o.after+" ("+typeof o.after+")"),e(!o.success||"function"==typeof o.success,"success must be null or function, got "+o.success+" ("+typeof o.success+")"),e(!o.filter||"function"==typeof o.filter,"filter must be null or function, got "+o.filter+" ("+typeof o.filter+")"),e(!o.transform||"function"==typeof o.transform,"transform must be null or function, got "+o.transform+" ("+typeof o.transform+")"),e(!o.sort||"function"==typeof o.sort,"sort must be null or function, got "+o.sort+" ("+typeof o.sort+")"),e(!o.render||"function"==typeof o.render,"render must be null or function, got "+o.render+" ("+typeof o.render+")"),e(!o.limit||"number"==typeof o.limit,"limit must be null or number, got "+o.limit+" ("+typeof o.limit+")"),this._state={running:!1},this._options=o}return t.prototype.run=function(){var e=this,t=null,o=null,n=null,r=null;return this._debug("run","options",this._options),this._debug("run","state",this._state),this._state.running?(this._debug("run","already running, skipping"),!1):(this._state.running=!0,this._debug("run","getting dom node"),(t="string"==typeof this._options.target?document.getElementById(this._options.target):this._options.target)?(this._debug("run","got dom node",t),this._debug("run","getting access token"),this._getAccessToken(function(s,i){if(s)return e._debug("onTokenReceived","error",s),void e._fail(new Error("error getting access token: "+s.message));o="https://graph.instagram.com/me/media?fields=caption,id,media_type,media_url,permalink,thumbnail_url,timestamp,username&access_token="+i,e._debug("onTokenReceived","request url",o),e._makeApiRequest(o,function(o,s){if(o)return e._debug("onResponseReceived","error",o),void e._fail(new Error("api request error: "+o.message));e._debug("onResponseReceived","data",s),e._success(s);try{n=e._processData(s),e._debug("onResponseReceived","processed data",n)}catch(t){return void e._fail(t)}if(e._options.mock)e._debug("onResponseReceived","mock enabled, skipping render");else{try{r=e._renderData(n),e._debug("onResponseReceived","html content",r)}catch(t){return void e._fail(t)}t.innerHTML=r}e._finish()})}),!0):(this._fail(new Error("no element found with ID "+this._options.target)),!1))},t.prototype._processData=function(e){var t="function"==typeof this._options.transform,o="function"==typeof this._options.filter,n="function"==typeof this._options.sort,r="number"==typeof this._options.limit,s=[],i=null,a=null,u=null,c=null;if(this._debug("processData","hasFilter",o,"hasTransform",t,"hasSort",n,"hasLimit",r),"object"!=typeof e||"object"!=typeof e.data||e.data.length<=0)return null;for(var l=0;l<e.data.length;l++){if(a=this._getItemData(e.data[l]),t)try{u=this._options.transform(a),this._debug("processData","transformed item",a,u)}catch(e){throw this._debug("processData","error calling transform",e),new Error("error in transform: "+e.message)}else u=a;if(o){try{c=this._options.filter(u),this._debug("processData","filter item result",u,c)}catch(e){throw this._debug("processData","error calling filter",e),new Error("error in filter: "+e.message)}c&&s.push(u)}else s.push(u)}if(n)try{s.sort(this._options.sort)}catch(e){throw this._debug("processData","error calling sort",e),new Error("error in sort: "+e.message)}return r&&(i=s.length-this._options.limit,this._debug("processData","checking limit",s.length,this._options.limit,i),i>0&&s.splice(s.length-i,i)),s},t.prototype._getItemData=function(e){var t=null,o=null;switch(e.media_type){case"IMAGE":t="image",o=e.media_url;break;case"VIDEO":t="video",o=e.thumbnail_url;break;case"CAROUSEL_ALBUM":t="album",o=e.media_url}return{caption:e.caption,id:e.id,image:o,link:e.permalink,model:e,timestamp:e.timestamp,type:t,username:e.username}},t.prototype._renderData=function(e){var t="string"==typeof this._options.template,o="function"==typeof this._options.render,n=null,r=null,s="";if(this._debug("renderData","hasTemplate",t,"hasRender",o),"object"!=typeof e||e.length<=0)return null;for(var i=0;i<e.length;i++){if(n=e[i],o)try{r=this._options.render(n,this._options),this._debug("renderData","custom render result",n,r)}catch(e){throw this._debug("renderData","error calling render",e),new Error("error in render: "+e.message)}else t&&(r=this._basicRender(n));r?s+=r:this._debug("renderData","render item did not return any content",n)}return s},t.prototype._basicRender=function(e){for(var t=new RegExp(this._options.templateBoundaries[0]+"([\\s\\w.]+)"+this._options.templateBoundaries[1],"gm"),o=this._options.template,n=null,r="",s=0,i=null,a=null;null!==(n=t.exec(o));)i=n[1],r+=o.slice(s,n.index),(a=this._valueForKeyPath(i,e))&&(r+=a.toString()),s=t.lastIndex;return s<o.length&&(r+=o.slice(s,o.length)),r},t.prototype._valueForKeyPath=function(e,t){for(var o=/([\w]+)/gm,n=null,r=t;null!==(n=o.exec(e));){if("object"!=typeof r)return null;r=r[n[1]]}return r},t.prototype._fail=function(e){!this._runHook("error",e)&&console&&"function"==typeof console.error&&console.error(e),this._state.running=!1},t.prototype._finish=function(){this._runHook("after"),this._state.running=!1},t.prototype._success=function(e){this._runHook("success",e),this._state.running=!1},t.prototype._makeApiRequest=function(e,t){var o=!1,n=this,r=null,s=function(e,n){o||(o=!0,t(e,n))};(r=new XMLHttpRequest).timeout=this._options.apiTimeout,r.ontimeout=function(e){s(new Error("api request timed out"))},r.onerror=function(e){s(new Error("api connection error"))},r.onload=function(e){var t=r.getResponseHeader("Content-Type"),o=null;if(n._debug("apiRequestOnLoad","loaded",e),n._debug("apiRequestOnLoad","response status",r.status),n._debug("apiRequestOnLoad","response content type",t),t.indexOf("application/json")>=0)try{o=JSON.parse(r.responseText)}catch(e){return n._debug("apiRequestOnLoad","json parsing error",e,r.responseText),void s(new Error("error parsing response json"))}200===r.status?s(null,o):o&&o.error?s(new Error(o.error.code+" "+o.error.message)):s(new Error("status code "+r.status))},r.open("GET",e,!0),r.send()},t.prototype._getAccessToken=function(e){var t=!1,o=this,n=null,r=function(o,r){t||(t=!0,clearTimeout(n),e(o,r))};if("function"==typeof this._options.accessToken){this._debug("getAccessToken","calling accessToken as function"),n=setTimeout(function(){o._debug("getAccessToken","timeout check",t),r(new Error("accessToken timed out"),null)},this._options.accessTokenTimeout);try{this._options.accessToken(function(e,n){o._debug("getAccessToken","received accessToken callback",t,e,n),r(e,n)})}catch(e){this._debug("getAccessToken","error invoking the accessToken as function",e),r(e,null)}}else this._debug("getAccessToken","treating accessToken as static",typeof this._options.accessToken),r(null,this._options.accessToken)},t.prototype._debug=function(){var e=null;this._options.debug&&console&&"function"==typeof console.log&&((e=[].slice.call(arguments))[0]="[Instafeed] ["+e[0]+"]",console.log.apply(null,e))},t.prototype._runHook=function(e,t){var o=!1;if("function"==typeof this._options[e])try{this._options[e](t),o=!0}catch(t){this._debug("runHook","error calling hook",e,t)}return o},t});]]></Script>
    <Script path="lib/intersection-observer.js"><![CDATA[/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.
 *
 *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document
 *
 */
 
(function() {
    'use strict';
    
    
     if ('NodeList' in window && !NodeList.prototype.forEach) {
        
        NodeList.prototype.forEach = function (callback, thisArg) {
          thisArg = thisArg || window;
          for (var i = 0; i < this.length; i++) {
            callback.call(thisArg, this[i], i, this);
          }
        };
      }
    
    // Exit early if we're not running in a browser.
    if (typeof window !== 'object') {
      return;
    }
    
    // Exit early if all IntersectionObserver and IntersectionObserverEntry
    // features are natively supported.
    if ('IntersectionObserver' in window &&
        'IntersectionObserverEntry' in window &&
        'intersectionRatio' in window.IntersectionObserverEntry.prototype) {
    
      // Minimal polyfill for Edge 15's lack of `isIntersecting`
      // See: https://github.com/w3c/IntersectionObserver/issues/211
      if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {
        Object.defineProperty(window.IntersectionObserverEntry.prototype,
          'isIntersecting', {
          get: function () {
            return this.intersectionRatio > 0;
          }
        });
      }
      return;
    }
    
    
    /**
     * A local reference to the document.
     */
    var document = window.document;
    
    
    /**
     * An IntersectionObserver registry. This registry exists to hold a strong
     * reference to IntersectionObserver instances currently observing a target
     * element. Without this registry, instances without another reference may be
     * garbage collected.
     */
    var registry = [];
    
    
    /**
     * Creates the global IntersectionObserverEntry constructor.
     * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry
     * @param {Object} entry A dictionary of instance properties.
     * @constructor
     */
    function IntersectionObserverEntry(entry) {
      this.time = entry.time;
      this.target = entry.target;
      this.rootBounds = entry.rootBounds;
      this.boundingClientRect = entry.boundingClientRect;
      this.intersectionRect = entry.intersectionRect || getEmptyRect();
      this.isIntersecting = !!entry.intersectionRect;
    
      // Calculates the intersection ratio.
      var targetRect = this.boundingClientRect;
      var targetArea = targetRect.width * targetRect.height;
      var intersectionRect = this.intersectionRect;
      var intersectionArea = intersectionRect.width * intersectionRect.height;
    
      // Sets intersection ratio.
      if (targetArea) {
        // Round the intersection ratio to avoid floating point math issues:
        // https://github.com/w3c/IntersectionObserver/issues/324
        this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));
      } else {
        // If area is zero and is intersecting, sets to 1, otherwise to 0
        this.intersectionRatio = this.isIntersecting ? 1 : 0;
      }
    }
    
    
    /**
     * Creates the global IntersectionObserver constructor.
     * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface
     * @param {Function} callback The function to be invoked after intersection
     *     changes have queued. The function is not invoked if the queue has
     *     been emptied by calling the `takeRecords` method.
     * @param {Object=} opt_options Optional configuration options.
     * @constructor
     */
    function IntersectionObserver(callback, opt_options) {
    
      var options = opt_options || {};
    
      if (typeof callback != 'function') {
        throw new Error('callback must be a function');
      }
    
      if (options.root && options.root.nodeType != 1) {
        throw new Error('root must be an Element');
      }
    
      // Binds and throttles `this._checkForIntersections`.
      this._checkForIntersections = throttle(
          this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);
    
      // Private properties.
      this._callback = callback;
      this._observationTargets = [];
      this._queuedEntries = [];
      this._rootMarginValues = this._parseRootMargin(options.rootMargin);
    
      // Public properties.
      this.thresholds = this._initThresholds(options.threshold);
      this.root = options.root || null;
      this.rootMargin = this._rootMarginValues.map(function(margin) {
        return margin.value + margin.unit;
      }).join(' ');
    }
    
    
    /**
     * The minimum interval within which the document will be checked for
     * intersection changes.
     */
    IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;
    
    
    /**
     * The frequency in which the polyfill polls for intersection changes.
     * this can be updated on a per instance basis and must be set prior to
     * calling `observe` on the first target.
     */
    IntersectionObserver.prototype.POLL_INTERVAL = null;
    
    /**
     * Use a mutation observer on the root element
     * to detect intersection changes.
     */
    IntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;
    
    
    /**
     * Starts observing a target element for intersection changes based on
     * the thresholds values.
     * @param {Element} target The DOM element to observe.
     */
    IntersectionObserver.prototype.observe = function(target) {
      var isTargetAlreadyObserved = this._observationTargets.some(function(item) {
        return item.element == target;
      });
    
      if (isTargetAlreadyObserved) {
        return;
      }
    
      if (!(target && target.nodeType == 1)) {
        throw new Error('target must be an Element');
      }
    
      this._registerInstance();
      this._observationTargets.push({element: target, entry: null});
      this._monitorIntersections();
      this._checkForIntersections();
    };
    
    
    /**
     * Stops observing a target element for intersection changes.
     * @param {Element} target The DOM element to observe.
     */
    IntersectionObserver.prototype.unobserve = function(target) {
      this._observationTargets =
          this._observationTargets.filter(function(item) {
    
        return item.element != target;
      });
      if (!this._observationTargets.length) {
        this._unmonitorIntersections();
        this._unregisterInstance();
      }
    };
    
    
    /**
     * Stops observing all target elements for intersection changes.
     */
    IntersectionObserver.prototype.disconnect = function() {
      this._observationTargets = [];
      this._unmonitorIntersections();
      this._unregisterInstance();
    };
    
    
    /**
     * Returns any queue entries that have not yet been reported to the
     * callback and clears the queue. This can be used in conjunction with the
     * callback to obtain the absolute most up-to-date intersection information.
     * @return {Array} The currently queued entries.
     */
    IntersectionObserver.prototype.takeRecords = function() {
      var records = this._queuedEntries.slice();
      this._queuedEntries = [];
      return records;
    };
    
    
    /**
     * Accepts the threshold value from the user configuration object and
     * returns a sorted array of unique threshold values. If a value is not
     * between 0 and 1 and error is thrown.
     * @private
     * @param {Array|number=} opt_threshold An optional threshold value or
     *     a list of threshold values, defaulting to [0].
     * @return {Array} A sorted list of unique and valid threshold values.
     */
    IntersectionObserver.prototype._initThresholds = function(opt_threshold) {
      var threshold = opt_threshold || [0];
      if (!Array.isArray(threshold)) threshold = [threshold];
    
      return threshold.sort().filter(function(t, i, a) {
        if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {
          throw new Error('threshold must be a number between 0 and 1 inclusively');
        }
        return t !== a[i - 1];
      });
    };
    
    
    /**
     * Accepts the rootMargin value from the user configuration object
     * and returns an array of the four margin values as an object containing
     * the value and unit properties. If any of the values are not properly
     * formatted or use a unit other than px or %, and error is thrown.
     * @private
     * @param {string=} opt_rootMargin An optional rootMargin value,
     *     defaulting to '0px'.
     * @return {Array<Object>} An array of margin objects with the keys
     *     value and unit.
     */
    IntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {
      var marginString = opt_rootMargin || '0px';
      var margins = marginString.split(/\s+/).map(function(margin) {
        var parts = /^(-?\d*\.?\d+)(px|%)$/.exec(margin);
        if (!parts) {
          throw new Error('rootMargin must be specified in pixels or percent');
        }
        return {value: parseFloat(parts[1]), unit: parts[2]};
      });
    
      // Handles shorthand.
      margins[1] = margins[1] || margins[0];
      margins[2] = margins[2] || margins[0];
      margins[3] = margins[3] || margins[1];
    
      return margins;
    };
    
    
    /**
     * Starts polling for intersection changes if the polling is not already
     * happening, and if the page's visibility state is visible.
     * @private
     */
    IntersectionObserver.prototype._monitorIntersections = function() {
      if (!this._monitoringIntersections) {
        this._monitoringIntersections = true;
    
        // If a poll interval is set, use polling instead of listening to
        // resize and scroll events or DOM mutations.
        if (this.POLL_INTERVAL) {
          this._monitoringInterval = setInterval(
              this._checkForIntersections, this.POLL_INTERVAL);
        }
        else {
          addEvent(window, 'resize', this._checkForIntersections, true);
          addEvent(document, 'scroll', this._checkForIntersections, true);
    
          if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {
            this._domObserver = new MutationObserver(this._checkForIntersections);
            this._domObserver.observe(document, {
              attributes: true,
              childList: true,
              characterData: true,
              subtree: true
            });
          }
        }
      }
    };
    
    
    /**
     * Stops polling for intersection changes.
     * @private
     */
    IntersectionObserver.prototype._unmonitorIntersections = function() {
      if (this._monitoringIntersections) {
        this._monitoringIntersections = false;
    
        clearInterval(this._monitoringInterval);
        this._monitoringInterval = null;
    
        removeEvent(window, 'resize', this._checkForIntersections, true);
        removeEvent(document, 'scroll', this._checkForIntersections, true);
    
        if (this._domObserver) {
          this._domObserver.disconnect();
          this._domObserver = null;
        }
      }
    };
    
    
    /**
     * Scans each observation target for intersection changes and adds them
     * to the internal entries queue. If new entries are found, it
     * schedules the callback to be invoked.
     * @private
     */
    IntersectionObserver.prototype._checkForIntersections = function() {
      var rootIsInDom = this._rootIsInDom();
      var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();
    
      this._observationTargets.forEach(function(item) {
        var target = item.element;
        var targetRect = getBoundingClientRect(target);
        var rootContainsTarget = this._rootContainsTarget(target);
        var oldEntry = item.entry;
        var intersectionRect = rootIsInDom && rootContainsTarget &&
            this._computeTargetAndRootIntersection(target, rootRect);
    
        var newEntry = item.entry = new IntersectionObserverEntry({
          time: now(),
          target: target,
          boundingClientRect: targetRect,
          rootBounds: rootRect,
          intersectionRect: intersectionRect
        });
    
        if (!oldEntry) {
          this._queuedEntries.push(newEntry);
        } else if (rootIsInDom && rootContainsTarget) {
          // If the new entry intersection ratio has crossed any of the
          // thresholds, add a new entry.
          if (this._hasCrossedThreshold(oldEntry, newEntry)) {
            this._queuedEntries.push(newEntry);
          }
        } else {
          // If the root is not in the DOM or target is not contained within
          // root but the previous entry for this target had an intersection,
          // add a new record indicating removal.
          if (oldEntry && oldEntry.isIntersecting) {
            this._queuedEntries.push(newEntry);
          }
        }
      }, this);
    
      if (this._queuedEntries.length) {
        this._callback(this.takeRecords(), this);
      }
    };
    
    
    /**
     * Accepts a target and root rect computes the intersection between then
     * following the algorithm in the spec.
     * TODO(philipwalton): at this time clip-path is not considered.
     * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo
     * @param {Element} target The target DOM element
     * @param {Object} rootRect The bounding rect of the root after being
     *     expanded by the rootMargin value.
     * @return {?Object} The final intersection rect object or undefined if no
     *     intersection is found.
     * @private
     */
    IntersectionObserver.prototype._computeTargetAndRootIntersection =
        function(target, rootRect) {
    
      // If the element isn't displayed, an intersection can't happen.
      if (window.getComputedStyle(target).display == 'none') return;
    
      var targetRect = getBoundingClientRect(target);
      var intersectionRect = targetRect;
      var parent = getParentNode(target);
      var atRoot = false;
    
      while (!atRoot) {
        var parentRect = null;
        var parentComputedStyle = parent.nodeType == 1 ?
            window.getComputedStyle(parent) : {};
    
        // If the parent isn't displayed, an intersection can't happen.
        if (parentComputedStyle.display == 'none') return;
    
        if (parent == this.root || parent == document) {
          atRoot = true;
          parentRect = rootRect;
        } else {
          // If the element has a non-visible overflow, and it's not the <body>
          // or <html> element, update the intersection rect.
          // Note: <body> and <html> cannot be clipped to a rect that's not also
          // the document rect, so no need to compute a new intersection.
          if (parent != document.body &&
              parent != document.documentElement &&
              parentComputedStyle.overflow != 'visible') {
            parentRect = getBoundingClientRect(parent);
          }
        }
    
        // If either of the above conditionals set a new parentRect,
        // calculate new intersection data.
        if (parentRect) {
          intersectionRect = computeRectIntersection(parentRect, intersectionRect);
    
          if (!intersectionRect) break;
        }
        parent = getParentNode(parent);
      }
      return intersectionRect;
    };
    
    
    /**
     * Returns the root rect after being expanded by the rootMargin value.
     * @return {Object} The expanded root rect.
     * @private
     */
    IntersectionObserver.prototype._getRootRect = function() {
      var rootRect;
      if (this.root) {
        rootRect = getBoundingClientRect(this.root);
      } else {
        // Use <html>/<body> instead of window since scroll bars affect size.
        var html = document.documentElement;
        var body = document.body;
        rootRect = {
          top: 0,
          left: 0,
          right: html.clientWidth || body.clientWidth,
          width: html.clientWidth || body.clientWidth,
          bottom: html.clientHeight || body.clientHeight,
          height: html.clientHeight || body.clientHeight
        };
      }
      return this._expandRectByRootMargin(rootRect);
    };
    
    
    /**
     * Accepts a rect and expands it by the rootMargin value.
     * @param {Object} rect The rect object to expand.
     * @return {Object} The expanded rect.
     * @private
     */
    IntersectionObserver.prototype._expandRectByRootMargin = function(rect) {
      var margins = this._rootMarginValues.map(function(margin, i) {
        return margin.unit == 'px' ? margin.value :
            margin.value * (i % 2 ? rect.width : rect.height) / 100;
      });
      var newRect = {
        top: rect.top - margins[0],
        right: rect.right + margins[1],
        bottom: rect.bottom + margins[2],
        left: rect.left - margins[3]
      };
      newRect.width = newRect.right - newRect.left;
      newRect.height = newRect.bottom - newRect.top;
    
      return newRect;
    };
    
    
    /**
     * Accepts an old and new entry and returns true if at least one of the
     * threshold values has been crossed.
     * @param {?IntersectionObserverEntry} oldEntry The previous entry for a
     *    particular target element or null if no previous entry exists.
     * @param {IntersectionObserverEntry} newEntry The current entry for a
     *    particular target element.
     * @return {boolean} Returns true if a any threshold has been crossed.
     * @private
     */
    IntersectionObserver.prototype._hasCrossedThreshold =
        function(oldEntry, newEntry) {
    
      // To make comparing easier, an entry that has a ratio of 0
      // but does not actually intersect is given a value of -1
      var oldRatio = oldEntry && oldEntry.isIntersecting ?
          oldEntry.intersectionRatio || 0 : -1;
      var newRatio = newEntry.isIntersecting ?
          newEntry.intersectionRatio || 0 : -1;
    
      // Ignore unchanged ratios
      if (oldRatio === newRatio) return;
    
      for (var i = 0; i < this.thresholds.length; i++) {
        var threshold = this.thresholds[i];
    
        // Return true if an entry matches a threshold or if the new ratio
        // and the old ratio are on the opposite sides of a threshold.
        if (threshold == oldRatio || threshold == newRatio ||
            threshold < oldRatio !== threshold < newRatio) {
          return true;
        }
      }
    };
    
    
    /**
     * Returns whether or not the root element is an element and is in the DOM.
     * @return {boolean} True if the root element is an element and is in the DOM.
     * @private
     */
    IntersectionObserver.prototype._rootIsInDom = function() {
      return !this.root || containsDeep(document, this.root);
    };
    
    
    /**
     * Returns whether or not the target element is a child of root.
     * @param {Element} target The target element to check.
     * @return {boolean} True if the target element is a child of root.
     * @private
     */
    IntersectionObserver.prototype._rootContainsTarget = function(target) {
      return containsDeep(this.root || document, target);
    };
    
    
    /**
     * Adds the instance to the global IntersectionObserver registry if it isn't
     * already present.
     * @private
     */
    IntersectionObserver.prototype._registerInstance = function() {
      if (registry.indexOf(this) < 0) {
        registry.push(this);
      }
    };
    
    
    /**
     * Removes the instance from the global IntersectionObserver registry.
     * @private
     */
    IntersectionObserver.prototype._unregisterInstance = function() {
      var index = registry.indexOf(this);
      if (index != -1) registry.splice(index, 1);
    };
    
    
    /**
     * Returns the result of the performance.now() method or null in browsers
     * that don't support the API.
     * @return {number} The elapsed time since the page was requested.
     */
    function now() {
      return window.performance && performance.now && performance.now();
    }
    
    
    /**
     * Throttles a function and delays its execution, so it's only called at most
     * once within a given time period.
     * @param {Function} fn The function to throttle.
     * @param {number} timeout The amount of time that must pass before the
     *     function can be called again.
     * @return {Function} The throttled function.
     */
    function throttle(fn, timeout) {
      var timer = null;
      return function () {
        if (!timer) {
          timer = setTimeout(function() {
            fn();
            timer = null;
          }, timeout);
        }
      };
    }
    
    
    /**
     * Adds an event handler to a DOM node ensuring cross-browser compatibility.
     * @param {Node} node The DOM node to add the event handler to.
     * @param {string} event The event name.
     * @param {Function} fn The event handler to add.
     * @param {boolean} opt_useCapture Optionally adds the even to the capture
     *     phase. Note: this only works in modern browsers.
     */
    function addEvent(node, event, fn, opt_useCapture) {
      if (typeof node.addEventListener == 'function') {
        node.addEventListener(event, fn, opt_useCapture || false);
      }
      else if (typeof node.attachEvent == 'function') {
        node.attachEvent('on' + event, fn);
      }
    }
    
    
    /**
     * Removes a previously added event handler from a DOM node.
     * @param {Node} node The DOM node to remove the event handler from.
     * @param {string} event The event name.
     * @param {Function} fn The event handler to remove.
     * @param {boolean} opt_useCapture If the event handler was added with this
     *     flag set to true, it should be set to true here in order to remove it.
     */
    function removeEvent(node, event, fn, opt_useCapture) {
      if (typeof node.removeEventListener == 'function') {
        node.removeEventListener(event, fn, opt_useCapture || false);
      }
      else if (typeof node.detatchEvent == 'function') {
        node.detatchEvent('on' + event, fn);
      }
    }
    
    
    /**
     * Returns the intersection between two rect objects.
     * @param {Object} rect1 The first rect.
     * @param {Object} rect2 The second rect.
     * @return {?Object} The intersection rect or undefined if no intersection
     *     is found.
     */
    function computeRectIntersection(rect1, rect2) {
      var top = Math.max(rect1.top, rect2.top);
      var bottom = Math.min(rect1.bottom, rect2.bottom);
      var left = Math.max(rect1.left, rect2.left);
      var right = Math.min(rect1.right, rect2.right);
      var width = right - left;
      var height = bottom - top;
    
      return (width >= 0 && height >= 0) && {
        top: top,
        bottom: bottom,
        left: left,
        right: right,
        width: width,
        height: height
      };
    }
    
    
    /**
     * Shims the native getBoundingClientRect for compatibility with older IE.
     * @param {Element} el The element whose bounding rect to get.
     * @return {Object} The (possibly shimmed) rect of the element.
     */
    function getBoundingClientRect(el) {
      var rect;
    
      try {
        rect = el.getBoundingClientRect();
      } catch (err) {
        // Ignore Windows 7 IE11 "Unspecified error"
        // https://github.com/w3c/IntersectionObserver/pull/205
      }
    
      if (!rect) return getEmptyRect();
    
      // Older IE
      if (!(rect.width && rect.height)) {
        rect = {
          top: rect.top,
          right: rect.right,
          bottom: rect.bottom,
          left: rect.left,
          width: rect.right - rect.left,
          height: rect.bottom - rect.top
        };
      }
      return rect;
    }
    
    
    /**
     * Returns an empty rect object. An empty rect is returned when an element
     * is not in the DOM.
     * @return {Object} The empty rect.
     */
    function getEmptyRect() {
      return {
        top: 0,
        bottom: 0,
        left: 0,
        right: 0,
        width: 0,
        height: 0
      };
    }
    
    /**
     * Checks to see if a parent element contains a child element (including inside
     * shadow DOM).
     * @param {Node} parent The parent element.
     * @param {Node} child The child element.
     * @return {boolean} True if the parent node contains the child node.
     */
    function containsDeep(parent, child) {
      var node = child;
      while (node) {
        if (node == parent) return true;
    
        node = getParentNode(node);
      }
      return false;
    }
    
    
    /**
     * Gets the parent node of an element or its host element if the parent node
     * is a shadow root.
     * @param {Node} node The node whose parent to get.
     * @return {Node|null} The parent node or null if no parent exists.
     */
    function getParentNode(node) {
      var parent = node.parentNode;
    
      if (parent && parent.nodeType == 11 && parent.host) {
        // If the parent is a shadow root, return the host element.
        return parent.host;
      }
    
      if (parent && parent.assignedSlot) {
        // If the parent is distributed in a <slot>, return the parent of a slot.
        return parent.assignedSlot.parentNode;
      }
    
      return parent;
    }
    
    
    // Exposes the constructors globally.
    window.IntersectionObserver = IntersectionObserver;
    window.IntersectionObserverEntry = IntersectionObserverEntry;
    
    }());]]></Script>
    <Script path="lib/jscolor.js"><![CDATA[(function(global,factory){"use strict";if(typeof module==="object"&&typeof module.exports==="object"){module.exports=global.document?factory(global):function(win){if(!win.document){throw new Error("jscolor needs a window with document")}return factory(win)};return}factory(global)})(typeof window!=="undefined"?window:this,function(window){"use strict";var jscolor=function(){var jsc={initialized:false,instances:[],readyQueue:[],register:function(){if(typeof window!=="undefined"&&window.document){window.document.addEventListener("DOMContentLoaded",jsc.pub.init,false)}},installBySelector:function(selector,rootNode){rootNode=rootNode?jsc.node(rootNode):window.document;if(!rootNode){throw new Error("Missing root node")}var elms=rootNode.querySelectorAll(selector);var matchClass=new RegExp("(^|\\s)("+jsc.pub.lookupClass+")(\\s*(\\{[^}]*\\})|\\s|$)","i");for(var i=0;i<elms.length;i+=1){if(elms[i].jscolor&&elms[i].jscolor instanceof jsc.pub){continue}if(elms[i].type!==undefined&&elms[i].type.toLowerCase()=="color"&&jsc.isColorAttrSupported){continue}var dataOpts,m;if((dataOpts=jsc.getDataAttr(elms[i],"jscolor"))!==null||elms[i].className&&(m=elms[i].className.match(matchClass))){var targetElm=elms[i];var optsStr="";if(dataOpts!==null){optsStr=dataOpts}else if(m){console.warn('Installation using class name is DEPRECATED. Use data-jscolor="" attribute instead.'+jsc.docsRef);if(m[4]){optsStr=m[4]}}var opts=null;if(optsStr.trim()){try{opts=jsc.parseOptionsStr(optsStr)}catch(e){console.warn(e+"\n"+optsStr)}}try{new jsc.pub(targetElm,opts)}catch(e){console.warn(e)}}}},parseOptionsStr:function(str){var opts=null;try{opts=JSON.parse(str)}catch(eParse){if(!jsc.pub.looseJSON){throw new Error("Could not parse jscolor options as JSON: "+eParse)}else{try{opts=new Function("var opts = ("+str+'); return typeof opts === "object" ? opts : {};')()}catch(eEval){throw new Error("Could not evaluate jscolor options: "+eEval)}}}return opts},getInstances:function(){var inst=[];for(var i=0;i<jsc.instances.length;i+=1){if(jsc.instances[i]&&jsc.instances[i].targetElement){inst.push(jsc.instances[i])}}return inst},createEl:function(tagName){var el=window.document.createElement(tagName);jsc.setData(el,"gui",true);return el},node:function(nodeOrSelector){if(!nodeOrSelector){return null}if(typeof nodeOrSelector==="string"){var sel=nodeOrSelector;var el=null;try{el=window.document.querySelector(sel)}catch(e){console.warn(e);return null}if(!el){console.warn("No element matches the selector: %s",sel)}return el}if(jsc.isNode(nodeOrSelector)){return nodeOrSelector}console.warn("Invalid node of type %s: %s",typeof nodeOrSelector,nodeOrSelector);return null},isNode:function(val){if(typeof Node==="object"){return val instanceof Node}return val&&typeof val==="object"&&typeof val.nodeType==="number"&&typeof val.nodeName==="string"},nodeName:function(node){if(node&&node.nodeName){return node.nodeName.toLowerCase()}return false},removeChildren:function(node){while(node.firstChild){node.removeChild(node.firstChild)}},isTextInput:function(el){return el&&jsc.nodeName(el)==="input"&&el.type.toLowerCase()==="text"},isButton:function(el){if(!el){return false}var n=jsc.nodeName(el);return n==="button"||n==="input"&&["button","submit","reset"].indexOf(el.type.toLowerCase())>-1},isButtonEmpty:function(el){switch(jsc.nodeName(el)){case"input":return!el.value||el.value.trim()==="";case"button":return el.textContent.trim()===""}return null},isPassiveEventSupported:function(){var supported=false;try{var opts=Object.defineProperty({},"passive",{get:function(){supported=true}});window.addEventListener("testPassive",null,opts);window.removeEventListener("testPassive",null,opts)}catch(e){}return supported}(),isColorAttrSupported:function(){var elm=window.document.createElement("input");if(elm.setAttribute){elm.setAttribute("type","color");if(elm.type.toLowerCase()=="color"){return true}}return false}(),dataProp:"_data_jscolor",setData:function(){var obj=arguments[0];if(arguments.length===3){var data=obj.hasOwnProperty(jsc.dataProp)?obj[jsc.dataProp]:obj[jsc.dataProp]={};var prop=arguments[1];var value=arguments[2];data[prop]=value;return true}else if(arguments.length===2&&typeof arguments[1]==="object"){var data=obj.hasOwnProperty(jsc.dataProp)?obj[jsc.dataProp]:obj[jsc.dataProp]={};var map=arguments[1];for(var prop in map){if(map.hasOwnProperty(prop)){data[prop]=map[prop]}}return true}throw new Error("Invalid arguments")},removeData:function(){var obj=arguments[0];if(!obj.hasOwnProperty(jsc.dataProp)){return true}for(var i=1;i<arguments.length;i+=1){var prop=arguments[i];delete obj[jsc.dataProp][prop]}return true},getData:function(obj,prop,setDefault){if(!obj.hasOwnProperty(jsc.dataProp)){if(setDefault!==undefined){obj[jsc.dataProp]={}}else{return undefined}}var data=obj[jsc.dataProp];if(!data.hasOwnProperty(prop)&&setDefault!==undefined){data[prop]=setDefault}return data[prop]},getDataAttr:function(el,name){var attrName="data-"+name;var attrValue=el.getAttribute(attrName);return attrValue},setDataAttr:function(el,name,value){var attrName="data-"+name;el.setAttribute(attrName,value)},_attachedGroupEvents:{},attachGroupEvent:function(groupName,el,evnt,func){if(!jsc._attachedGroupEvents.hasOwnProperty(groupName)){jsc._attachedGroupEvents[groupName]=[]}jsc._attachedGroupEvents[groupName].push([el,evnt,func]);el.addEventListener(evnt,func,false)},detachGroupEvents:function(groupName){if(jsc._attachedGroupEvents.hasOwnProperty(groupName)){for(var i=0;i<jsc._attachedGroupEvents[groupName].length;i+=1){var evt=jsc._attachedGroupEvents[groupName][i];evt[0].removeEventListener(evt[1],evt[2],false)}delete jsc._attachedGroupEvents[groupName]}},preventDefault:function(e){if(e.preventDefault){e.preventDefault()}e.returnValue=false},captureTarget:function(target){if(target.setCapture){jsc._capturedTarget=target;jsc._capturedTarget.setCapture()}},releaseTarget:function(){if(jsc._capturedTarget){jsc._capturedTarget.releaseCapture();jsc._capturedTarget=null}},triggerEvent:function(el,eventName,bubbles,cancelable){if(!el){return}var ev=null;if(typeof Event==="function"){ev=new Event(eventName,{bubbles:bubbles,cancelable:cancelable})}else{ev=window.document.createEvent("Event");ev.initEvent(eventName,bubbles,cancelable)}if(!ev){return false}jsc.setData(ev,"internal",true);el.dispatchEvent(ev);return true},triggerInputEvent:function(el,eventName,bubbles,cancelable){if(!el){return}if(jsc.isTextInput(el)){jsc.triggerEvent(el,eventName,bubbles,cancelable)}},eventKey:function(ev){var keys={9:"Tab",13:"Enter",27:"Escape"};if(typeof ev.code==="string"){return ev.code}else if(ev.keyCode!==undefined&&keys.hasOwnProperty(ev.keyCode)){return keys[ev.keyCode]}return null},strList:function(str){if(!str){return[]}return str.replace(/^\s+|\s+$/g,"").split(/\s+/)},hasClass:function(elm,className){if(!className){return false}if(elm.classList!==undefined){return elm.classList.contains(className)}return-1!=(" "+elm.className.replace(/\s+/g," ")+" ").indexOf(" "+className+" ")},addClass:function(elm,className){var classNames=jsc.strList(className);if(elm.classList!==undefined){for(var i=0;i<classNames.length;i+=1){elm.classList.add(classNames[i])}return}for(var i=0;i<classNames.length;i+=1){if(!jsc.hasClass(elm,classNames[i])){elm.className+=(elm.className?" ":"")+classNames[i]}}},removeClass:function(elm,className){var classNames=jsc.strList(className);if(elm.classList!==undefined){for(var i=0;i<classNames.length;i+=1){elm.classList.remove(classNames[i])}return}for(var i=0;i<classNames.length;i+=1){var repl=new RegExp("^\\s*"+classNames[i]+"\\s*|"+"\\s*"+classNames[i]+"\\s*$|"+"\\s+"+classNames[i]+"(\\s+)","g");elm.className=elm.className.replace(repl,"$1")}},getCompStyle:function(elm){var compStyle=window.getComputedStyle?window.getComputedStyle(elm):elm.currentStyle;if(!compStyle){return{}}return compStyle},setStyle:function(elm,styles,important,reversible){var priority=important?"important":"";var origStyle=null;for(var prop in styles){if(styles.hasOwnProperty(prop)){var setVal=null;if(styles[prop]===null){if(!origStyle){origStyle=jsc.getData(elm,"origStyle")}if(origStyle&&origStyle.hasOwnProperty(prop)){setVal=origStyle[prop]}}else{if(reversible){if(!origStyle){origStyle=jsc.getData(elm,"origStyle",{})}if(!origStyle.hasOwnProperty(prop)){origStyle[prop]=elm.style[prop]}}setVal=styles[prop]}if(setVal!==null){elm.style.setProperty(prop,setVal,priority)}}}},hexColor:function(r,g,b){return"#"+(("0"+Math.round(r).toString(16)).substr(-2)+("0"+Math.round(g).toString(16)).substr(-2)+("0"+Math.round(b).toString(16)).substr(-2)).toUpperCase()},hexaColor:function(r,g,b,a){return"#"+(("0"+Math.round(r).toString(16)).substr(-2)+("0"+Math.round(g).toString(16)).substr(-2)+("0"+Math.round(b).toString(16)).substr(-2)+("0"+Math.round(a*255).toString(16)).substr(-2)).toUpperCase()},rgbColor:function(r,g,b){return"rgb("+Math.round(r)+","+Math.round(g)+","+Math.round(b)+")"},rgbaColor:function(r,g,b,a){return"rgba("+Math.round(r)+","+Math.round(g)+","+Math.round(b)+","+Math.round((a===undefined||a===null?1:a)*100)/100+")"},linearGradient:function(){function getFuncName(){var stdName="linear-gradient";var prefixes=["","-webkit-","-moz-","-o-","-ms-"];var helper=window.document.createElement("div");for(var i=0;i<prefixes.length;i+=1){var tryFunc=prefixes[i]+stdName;var tryVal=tryFunc+"(to right, rgba(0,0,0,0), rgba(0,0,0,0))";helper.style.background=tryVal;if(helper.style.background){return tryFunc}}return stdName}var funcName=getFuncName();return function(){return funcName+"("+Array.prototype.join.call(arguments,", ")+")"}}(),setBorderRadius:function(elm,value){jsc.setStyle(elm,{"border-radius":value||"0"})},setBoxShadow:function(elm,value){jsc.setStyle(elm,{"box-shadow":value||"none"})},getElementPos:function(e,relativeToViewport){var x=0,y=0;var rect=e.getBoundingClientRect();x=rect.left;y=rect.top;if(!relativeToViewport){var viewPos=jsc.getViewPos();x+=viewPos[0];y+=viewPos[1]}return[x,y]},getElementSize:function(e){return[e.offsetWidth,e.offsetHeight]},getAbsPointerPos:function(e){var x=0,y=0;if(typeof e.changedTouches!=="undefined"&&e.changedTouches.length){x=e.changedTouches[0].clientX;y=e.changedTouches[0].clientY}else if(typeof e.clientX==="number"){x=e.clientX;y=e.clientY}return{x:x,y:y}},getRelPointerPos:function(e){var target=e.target||e.srcElement;var targetRect=target.getBoundingClientRect();var x=0,y=0;var clientX=0,clientY=0;if(typeof e.changedTouches!=="undefined"&&e.changedTouches.length){clientX=e.changedTouches[0].clientX;clientY=e.changedTouches[0].clientY}else if(typeof e.clientX==="number"){clientX=e.clientX;clientY=e.clientY}x=clientX-targetRect.left;y=clientY-targetRect.top;return{x:x,y:y}},getViewPos:function(){var doc=window.document.documentElement;return[(window.pageXOffset||doc.scrollLeft)-(doc.clientLeft||0),(window.pageYOffset||doc.scrollTop)-(doc.clientTop||0)]},getViewSize:function(){var doc=window.document.documentElement;return[window.innerWidth||doc.clientWidth,window.innerHeight||doc.clientHeight]},RGB_HSV:function(r,g,b){r/=255;g/=255;b/=255;var n=Math.min(Math.min(r,g),b);var v=Math.max(Math.max(r,g),b);var m=v-n;if(m===0){return[null,0,100*v]}var h=r===n?3+(b-g)/m:g===n?5+(r-b)/m:1+(g-r)/m;return[60*(h===6?0:h),100*(m/v),100*v]},HSV_RGB:function(h,s,v){var u=255*(v/100);if(h===null){return[u,u,u]}h/=60;s/=100;var i=Math.floor(h);var f=i%2?h-i:1-(h-i);var m=u*(1-s);var n=u*(1-s*f);switch(i){case 6:case 0:return[u,n,m];case 1:return[n,u,m];case 2:return[m,u,n];case 3:return[m,n,u];case 4:return[n,m,u];case 5:return[u,m,n]}},parseColorString:function(str){var ret={rgba:null,format:null};var m;if(m=str.match(/^\W*([0-9A-F]{3,8})\W*$/i)){if(m[1].length===8){ret.format="hexa";ret.rgba=[parseInt(m[1].substr(0,2),16),parseInt(m[1].substr(2,2),16),parseInt(m[1].substr(4,2),16),parseInt(m[1].substr(6,2),16)/255]}else if(m[1].length===6){ret.format="hex";ret.rgba=[parseInt(m[1].substr(0,2),16),parseInt(m[1].substr(2,2),16),parseInt(m[1].substr(4,2),16),null]}else if(m[1].length===3){ret.format="hex";ret.rgba=[parseInt(m[1].charAt(0)+m[1].charAt(0),16),parseInt(m[1].charAt(1)+m[1].charAt(1),16),parseInt(m[1].charAt(2)+m[1].charAt(2),16),null]}else{return false}return ret}if(m=str.match(/^\W*rgba?\(([^)]*)\)\W*$/i)){var par=m[1].split(",");var re=/^\s*(\d+|\d*\.\d+|\d+\.\d*)\s*$/;var mR,mG,mB,mA;if(par.length>=3&&(mR=par[0].match(re))&&(mG=par[1].match(re))&&(mB=par[2].match(re))){ret.format="rgb";ret.rgba=[parseFloat(mR[1])||0,parseFloat(mG[1])||0,parseFloat(mB[1])||0,null];if(par.length>=4&&(mA=par[3].match(re))){ret.format="rgba";ret.rgba[3]=parseFloat(mA[1])||0}return ret}}return false},parsePaletteValue:function(mixed){var vals=[];if(typeof mixed==="string"){mixed.replace(/#[0-9A-F]{3}([0-9A-F]{3})?|rgba?\(([^)]*)\)/gi,function(val){vals.push(val)})}else if(Array.isArray(mixed)){vals=mixed}var colors=[];for(var i=0;i<vals.length;i++){var color=jsc.parseColorString(vals[i]);if(color){colors.push(color)}}return colors},containsTranparentColor:function(colors){for(var i=0;i<colors.length;i++){var a=colors[i].rgba[3];if(a!==null&&a<1){return true}}return false},isAlphaFormat:function(format){switch(format.toLowerCase()){case"hexa":case"rgba":return true}return false},scaleCanvasForHighDPR:function(canvas){var dpr=window.devicePixelRatio||1;canvas.width*=dpr;canvas.height*=dpr;var ctx=canvas.getContext("2d");ctx.scale(dpr,dpr)},genColorPreviewCanvas:function(color,separatorPos,specWidth,scaleForHighDPR){var sepW=Math.round(jsc.pub.previewSeparator.length);var sqSize=jsc.pub.chessboardSize;var sqColor1=jsc.pub.chessboardColor1;var sqColor2=jsc.pub.chessboardColor2;var cWidth=specWidth?specWidth:sqSize*2;var cHeight=sqSize*2;var canvas=jsc.createEl("canvas");var ctx=canvas.getContext("2d");canvas.width=cWidth;canvas.height=cHeight;if(scaleForHighDPR){jsc.scaleCanvasForHighDPR(canvas)}ctx.fillStyle=sqColor1;ctx.fillRect(0,0,cWidth,cHeight);ctx.fillStyle=sqColor2;for(var x=0;x<cWidth;x+=sqSize*2){ctx.fillRect(x,0,sqSize,sqSize);ctx.fillRect(x+sqSize,sqSize,sqSize,sqSize)}if(color){ctx.fillStyle=color;ctx.fillRect(0,0,cWidth,cHeight)}var start=null;switch(separatorPos){case"left":start=0;ctx.clearRect(0,0,sepW/2,cHeight);break;case"right":start=cWidth-sepW;ctx.clearRect(cWidth-sepW/2,0,sepW/2,cHeight);break}if(start!==null){ctx.lineWidth=1;for(var i=0;i<jsc.pub.previewSeparator.length;i+=1){ctx.beginPath();ctx.strokeStyle=jsc.pub.previewSeparator[i];ctx.moveTo(.5+start+i,0);ctx.lineTo(.5+start+i,cHeight);ctx.stroke()}}return{canvas:canvas,width:cWidth,height:cHeight}},genColorPreviewGradient:function(color,position,width){var params=[];if(position&&width){params=["to "+{left:"right",right:"left"}[position],color+" 0%",color+" "+width+"px","rgba(0,0,0,0) "+(width+1)+"px","rgba(0,0,0,0) 100%"]}else{params=["to right",color+" 0%",color+" 100%"]}return jsc.linearGradient.apply(this,params)},redrawPosition:function(){if(!jsc.picker||!jsc.picker.owner){return}var thisObj=jsc.picker.owner;var tp,vp;if(thisObj.fixed){tp=jsc.getElementPos(thisObj.targetElement,true);vp=[0,0]}else{tp=jsc.getElementPos(thisObj.targetElement);vp=jsc.getViewPos()}var ts=jsc.getElementSize(thisObj.targetElement);var vs=jsc.getViewSize();var pd=jsc.getPickerDims(thisObj);var ps=[pd.borderW,pd.borderH];var a,b,c;switch(thisObj.position.toLowerCase()){case"left":a=1;b=0;c=-1;break;case"right":a=1;b=0;c=1;break;case"top":a=0;b=1;c=-1;break;default:a=0;b=1;c=1;break}var l=(ts[b]+ps[b])/2;if(!thisObj.smartPosition){var pp=[tp[a],tp[b]+ts[b]-l+l*c]}else{var pp=[-vp[a]+tp[a]+ps[a]>vs[a]?-vp[a]+tp[a]+ts[a]/2>vs[a]/2&&tp[a]+ts[a]-ps[a]>=0?tp[a]+ts[a]-ps[a]:tp[a]:tp[a],-vp[b]+tp[b]+ts[b]+ps[b]-l+l*c>vs[b]?-vp[b]+tp[b]+ts[b]/2>vs[b]/2&&tp[b]+ts[b]-l-l*c>=0?tp[b]+ts[b]-l-l*c:tp[b]+ts[b]-l+l*c:tp[b]+ts[b]-l+l*c>=0?tp[b]+ts[b]-l+l*c:tp[b]+ts[b]-l-l*c]}var x=pp[a];var y=pp[b];var positionValue=thisObj.fixed?"fixed":"absolute";var contractShadow=(pp[0]+ps[0]>tp[0]||pp[0]<tp[0]+ts[0])&&pp[1]+ps[1]<tp[1]+ts[1];jsc._drawPosition(thisObj,x,y,positionValue,contractShadow)},_drawPosition:function(thisObj,x,y,positionValue,contractShadow){var vShadow=contractShadow?0:thisObj.shadowBlur;jsc.picker.wrap.style.position=positionValue;jsc.picker.wrap.style.left=x+"px";jsc.picker.wrap.style.top=y+"px";jsc.setBoxShadow(jsc.picker.boxS,thisObj.shadow?new jsc.BoxShadow(0,vShadow,thisObj.shadowBlur,0,thisObj.shadowColor):null)},getPickerDims:function(thisObj){var w=2*thisObj.controlBorderWidth+thisObj.width;var h=2*thisObj.controlBorderWidth+thisObj.height;var sliderSpace=2*thisObj.controlBorderWidth+2*jsc.getControlPadding(thisObj)+thisObj.sliderSize;if(jsc.getSliderChannel(thisObj)){w+=sliderSpace}if(thisObj.hasAlphaChannel()){w+=sliderSpace}var pal=jsc.getPaletteDims(thisObj,w);if(pal.height){h+=pal.height+thisObj.padding}if(thisObj.closeButton){h+=2*thisObj.controlBorderWidth+thisObj.padding+thisObj.buttonHeight}var pW=w+2*thisObj.padding;var pH=h+2*thisObj.padding;return{contentW:w,contentH:h,paddedW:pW,paddedH:pH,borderW:pW+2*thisObj.borderWidth,borderH:pH+2*thisObj.borderWidth,palette:pal}},getPaletteDims:function(thisObj,width){var cols=0,rows=0,cellW=0,cellH=0,height=0;var sampleCount=thisObj._palette?thisObj._palette.length:0;if(sampleCount){cols=thisObj.paletteCols;rows=cols>0?Math.ceil(sampleCount/cols):0;cellW=Math.max(1,Math.floor((width-(cols-1)*thisObj.paletteSpacing)/cols));cellH=thisObj.paletteHeight?Math.min(thisObj.paletteHeight,cellW):cellW}if(rows){height=rows*cellH+(rows-1)*thisObj.paletteSpacing}return{cols:cols,rows:rows,cellW:cellW,cellH:cellH,width:width,height:height}},getControlPadding:function(thisObj){return Math.max(thisObj.padding/2,2*thisObj.pointerBorderWidth+thisObj.pointerThickness-thisObj.controlBorderWidth)},getPadYChannel:function(thisObj){switch(thisObj.mode.charAt(1).toLowerCase()){case"v":return"v";break}return"s"},getSliderChannel:function(thisObj){if(thisObj.mode.length>2){switch(thisObj.mode.charAt(2).toLowerCase()){case"s":return"s";break;case"v":return"v";break}}return null},triggerCallback:function(thisObj,prop){if(!thisObj[prop]){return}var callback=null;if(typeof thisObj[prop]==="string"){try{callback=new Function(thisObj[prop])}catch(e){console.error(e)}}else{callback=thisObj[prop]}if(callback){callback.call(thisObj)}},triggerGlobal:function(eventNames){var inst=jsc.getInstances();for(var i=0;i<inst.length;i+=1){inst[i].trigger(eventNames)}},_pointerMoveEvent:{mouse:"mousemove",touch:"touchmove"},_pointerEndEvent:{mouse:"mouseup",touch:"touchend"},_pointerOrigin:null,_capturedTarget:null,onDocumentKeyUp:function(e){if(["Tab","Escape"].indexOf(jsc.eventKey(e))!==-1){if(jsc.picker&&jsc.picker.owner){jsc.picker.owner.tryHide()}}},onWindowResize:function(e){jsc.redrawPosition()},onWindowScroll:function(e){jsc.redrawPosition()},onParentScroll:function(e){if(jsc.picker&&jsc.picker.owner){jsc.picker.owner.tryHide()}},onDocumentMouseDown:function(e){var target=e.target||e.srcElement;if(target.jscolor&&target.jscolor instanceof jsc.pub){if(target.jscolor.showOnClick&&!target.disabled){target.jscolor.show()}}else if(jsc.getData(target,"gui")){var control=jsc.getData(target,"control");if(control){jsc.onControlPointerStart(e,target,jsc.getData(target,"control"),"mouse")}}else{if(jsc.picker&&jsc.picker.owner){jsc.picker.owner.tryHide()}}},onPickerTouchStart:function(e){var target=e.target||e.srcElement;if(jsc.getData(target,"control")){jsc.onControlPointerStart(e,target,jsc.getData(target,"control"),"touch")}},onControlPointerStart:function(e,target,controlName,pointerType){var thisObj=jsc.getData(target,"instance");jsc.preventDefault(e);jsc.captureTarget(target);var registerDragEvents=function(doc,offset){jsc.attachGroupEvent("drag",doc,jsc._pointerMoveEvent[pointerType],jsc.onDocumentPointerMove(e,target,controlName,pointerType,offset));jsc.attachGroupEvent("drag",doc,jsc._pointerEndEvent[pointerType],jsc.onDocumentPointerEnd(e,target,controlName,pointerType))};registerDragEvents(window.document,[0,0]);if(window.parent&&window.frameElement){var rect=window.frameElement.getBoundingClientRect();var ofs=[-rect.left,-rect.top];registerDragEvents(window.parent.window.document,ofs)}var abs=jsc.getAbsPointerPos(e);var rel=jsc.getRelPointerPos(e);jsc._pointerOrigin={x:abs.x-rel.x,y:abs.y-rel.y};switch(controlName){case"pad":if(jsc.getSliderChannel(thisObj)==="v"&&thisObj.channels.v===0){thisObj.fromHSVA(null,null,100,null)}jsc.setPad(thisObj,e,0,0);break;case"sld":jsc.setSld(thisObj,e,0);break;case"asld":jsc.setASld(thisObj,e,0);break}thisObj.trigger("input")},onDocumentPointerMove:function(e,target,controlName,pointerType,offset){return function(e){var thisObj=jsc.getData(target,"instance");switch(controlName){case"pad":jsc.setPad(thisObj,e,offset[0],offset[1]);break;case"sld":jsc.setSld(thisObj,e,offset[1]);break;case"asld":jsc.setASld(thisObj,e,offset[1]);break}thisObj.trigger("input")}},onDocumentPointerEnd:function(e,target,controlName,pointerType){return function(e){var thisObj=jsc.getData(target,"instance");jsc.detachGroupEvents("drag");jsc.releaseTarget();thisObj.trigger("input");thisObj.trigger("change")}},onPaletteSampleClick:function(e){var target=e.currentTarget;var thisObj=jsc.getData(target,"instance");var color=jsc.getData(target,"color");if(thisObj.format.toLowerCase()==="any"){thisObj._setFormat(color.format);if(!jsc.isAlphaFormat(thisObj.getFormat())){color.rgba[3]=1}}if(color.rgba[3]===null){if(thisObj.paletteSetsAlpha===true||thisObj.paletteSetsAlpha==="auto"&&thisObj._paletteHasTransparency){color.rgba[3]=1}}thisObj.fromRGBA.apply(thisObj,color.rgba);thisObj.trigger("input");thisObj.trigger("change");if(thisObj.hideOnPaletteClick){thisObj.hide()}},setPad:function(thisObj,e,ofsX,ofsY){var pointerAbs=jsc.getAbsPointerPos(e);var x=ofsX+pointerAbs.x-jsc._pointerOrigin.x-thisObj.padding-thisObj.controlBorderWidth;var y=ofsY+pointerAbs.y-jsc._pointerOrigin.y-thisObj.padding-thisObj.controlBorderWidth;var xVal=x*(360/(thisObj.width-1));var yVal=100-y*(100/(thisObj.height-1));switch(jsc.getPadYChannel(thisObj)){case"s":thisObj.fromHSVA(xVal,yVal,null,null);break;case"v":thisObj.fromHSVA(xVal,null,yVal,null);break}},setSld:function(thisObj,e,ofsY){var pointerAbs=jsc.getAbsPointerPos(e);var y=ofsY+pointerAbs.y-jsc._pointerOrigin.y-thisObj.padding-thisObj.controlBorderWidth;var yVal=100-y*(100/(thisObj.height-1));switch(jsc.getSliderChannel(thisObj)){case"s":thisObj.fromHSVA(null,yVal,null,null);break;case"v":thisObj.fromHSVA(null,null,yVal,null);break}},setASld:function(thisObj,e,ofsY){var pointerAbs=jsc.getAbsPointerPos(e);var y=ofsY+pointerAbs.y-jsc._pointerOrigin.y-thisObj.padding-thisObj.controlBorderWidth;var yVal=1-y*(1/(thisObj.height-1));if(yVal<1){var fmt=thisObj.getFormat();if(thisObj.format.toLowerCase()==="any"&&!jsc.isAlphaFormat(fmt)){thisObj._setFormat(fmt==="hex"?"hexa":"rgba")}}thisObj.fromHSVA(null,null,null,yVal)},createPadCanvas:function(){var ret={elm:null,draw:null};var canvas=jsc.createEl("canvas");var ctx=canvas.getContext("2d");var drawFunc=function(width,height,type){canvas.width=width;canvas.height=height;ctx.clearRect(0,0,canvas.width,canvas.height);var hGrad=ctx.createLinearGradient(0,0,canvas.width,0);hGrad.addColorStop(0/6,"#F00");hGrad.addColorStop(1/6,"#FF0");hGrad.addColorStop(2/6,"#0F0");hGrad.addColorStop(3/6,"#0FF");hGrad.addColorStop(4/6,"#00F");hGrad.addColorStop(5/6,"#F0F");hGrad.addColorStop(6/6,"#F00");ctx.fillStyle=hGrad;ctx.fillRect(0,0,canvas.width,canvas.height);var vGrad=ctx.createLinearGradient(0,0,0,canvas.height);switch(type.toLowerCase()){case"s":vGrad.addColorStop(0,"rgba(255,255,255,0)");vGrad.addColorStop(1,"rgba(255,255,255,1)");break;case"v":vGrad.addColorStop(0,"rgba(0,0,0,0)");vGrad.addColorStop(1,"rgba(0,0,0,1)");break}ctx.fillStyle=vGrad;ctx.fillRect(0,0,canvas.width,canvas.height)};ret.elm=canvas;ret.draw=drawFunc;return ret},createSliderGradient:function(){var ret={elm:null,draw:null};var canvas=jsc.createEl("canvas");var ctx=canvas.getContext("2d");var drawFunc=function(width,height,color1,color2){canvas.width=width;canvas.height=height;ctx.clearRect(0,0,canvas.width,canvas.height);var grad=ctx.createLinearGradient(0,0,0,canvas.height);grad.addColorStop(0,color1);grad.addColorStop(1,color2);ctx.fillStyle=grad;ctx.fillRect(0,0,canvas.width,canvas.height)};ret.elm=canvas;ret.draw=drawFunc;return ret},createASliderGradient:function(){var ret={elm:null,draw:null};var canvas=jsc.createEl("canvas");var ctx=canvas.getContext("2d");var drawFunc=function(width,height,color){canvas.width=width;canvas.height=height;ctx.clearRect(0,0,canvas.width,canvas.height);var sqSize=canvas.width/2;var sqColor1=jsc.pub.chessboardColor1;var sqColor2=jsc.pub.chessboardColor2;ctx.fillStyle=sqColor1;ctx.fillRect(0,0,canvas.width,canvas.height);if(sqSize>0){for(var y=0;y<canvas.height;y+=sqSize*2){ctx.fillStyle=sqColor2;ctx.fillRect(0,y,sqSize,sqSize);ctx.fillRect(sqSize,y+sqSize,sqSize,sqSize)}}var grad=ctx.createLinearGradient(0,0,0,canvas.height);grad.addColorStop(0,color);grad.addColorStop(1,"rgba(0,0,0,0)");ctx.fillStyle=grad;ctx.fillRect(0,0,canvas.width,canvas.height)};ret.elm=canvas;ret.draw=drawFunc;return ret},BoxShadow:function(){var BoxShadow=function(hShadow,vShadow,blur,spread,color,inset){this.hShadow=hShadow;this.vShadow=vShadow;this.blur=blur;this.spread=spread;this.color=color;this.inset=!!inset};BoxShadow.prototype.toString=function(){var vals=[Math.round(this.hShadow)+"px",Math.round(this.vShadow)+"px",Math.round(this.blur)+"px",Math.round(this.spread)+"px",this.color];if(this.inset){vals.push("inset")}return vals.join(" ")};return BoxShadow}(),flags:{leaveValue:1<<0,leaveAlpha:1<<1,leavePreview:1<<2},enumOpts:{format:["auto","any","hex","hexa","rgb","rgba"],previewPosition:["left","right"],mode:["hsv","hvs","hs","hv"],position:["left","right","top","bottom"],alphaChannel:["auto",true,false],paletteSetsAlpha:["auto",true,false]},deprecatedOpts:{styleElement:"previewElement",onFineChange:"onInput",overwriteImportant:"forceStyle",closable:"closeButton",insetWidth:"controlBorderWidth",insetColor:"controlBorderColor",refine:null},docsRef:" "+"See https://jscolor.com/docs/",pub:function(targetElement,opts){var THIS=this;if(!opts){opts={}}this.channels={r:255,g:255,b:255,h:0,s:0,v:100,a:1};this.format="auto";this.value=undefined;this.alpha=undefined;this.onChange=undefined;this.onInput=undefined;this.valueElement=undefined;this.alphaElement=undefined;this.previewElement=undefined;this.previewPosition="left";this.previewSize=32;this.previewPadding=8;this.required=true;this.hash=true;this.uppercase=true;this.forceStyle=true;this.width=181;this.height=101;this.mode="HSV";this.alphaChannel="auto";this.position="bottom";this.smartPosition=true;this.showOnClick=true;this.hideOnLeave=true;this.palette=[];this.paletteCols=10;this.paletteSetsAlpha="auto";this.paletteHeight=16;this.paletteSpacing=4;this.hideOnPaletteClick=false;this.sliderSize=16;this.crossSize=8;this.closeButton=false;this.closeText="Close";this.buttonColor="rgba(0,0,0,1)";this.buttonHeight=18;this.padding=12;this.backgroundColor="rgba(255,255,255,1)";this.borderWidth=1;this.borderColor="rgba(187,187,187,1)";this.borderRadius=8;this.controlBorderWidth=1;this.controlBorderColor="rgba(187,187,187,1)";this.shadow=true;this.shadowBlur=15;this.shadowColor="rgba(0,0,0,0.2)";this.pointerColor="rgba(76,76,76,1)";this.pointerBorderWidth=1;this.pointerBorderColor="rgba(255,255,255,1)";this.pointerThickness=2;this.zIndex=5e3;this.container=undefined;this.minS=0;this.maxS=100;this.minV=0;this.maxV=100;this.minA=0;this.maxA=1;this.option=function(){if(!arguments.length){throw new Error("No option specified")}if(arguments.length===1&&typeof arguments[0]==="string"){try{return getOption(arguments[0])}catch(e){console.warn(e)}return false}else if(arguments.length>=2&&typeof arguments[0]==="string"){try{if(!setOption(arguments[0],arguments[1])){return false}}catch(e){console.warn(e);return false}this.redraw();this.exposeColor();return true}else if(arguments.length===1&&typeof arguments[0]==="object"){var opts=arguments[0];var success=true;for(var opt in opts){if(opts.hasOwnProperty(opt)){try{if(!setOption(opt,opts[opt])){success=false}}catch(e){console.warn(e);success=false}}}this.redraw();this.exposeColor();return success}throw new Error("Invalid arguments")};this.channel=function(name,value){if(typeof name!=="string"){throw new Error("Invalid value for channel name: "+name)}if(value===undefined){if(!this.channels.hasOwnProperty(name.toLowerCase())){console.warn("Getting unknown channel: "+name);return false}return this.channels[name.toLowerCase()]}else{var res=false;switch(name.toLowerCase()){case"r":res=this.fromRGBA(value,null,null,null);break;case"g":res=this.fromRGBA(null,value,null,null);break;case"b":res=this.fromRGBA(null,null,value,null);break;case"h":res=this.fromHSVA(value,null,null,null);break;case"s":res=this.fromHSVA(null,value,null,null);break;case"v":res=this.fromHSVA(null,null,value,null);break;case"a":res=this.fromHSVA(null,null,null,value);break;default:console.warn("Setting unknown channel: "+name);return false}if(res){this.redraw();return true}}return false};this.trigger=function(eventNames){var evs=jsc.strList(eventNames);for(var i=0;i<evs.length;i+=1){var ev=evs[i].toLowerCase();var callbackProp=null;switch(ev){case"input":callbackProp="onInput";break;case"change":callbackProp="onChange";break}if(callbackProp){jsc.triggerCallback(this,callbackProp)}jsc.triggerInputEvent(this.valueElement,ev,true,true)}};this.fromHSVA=function(h,s,v,a,flags){if(h===undefined){h=null}if(s===undefined){s=null}if(v===undefined){v=null}if(a===undefined){a=null}if(h!==null){if(isNaN(h)){return false}this.channels.h=Math.max(0,Math.min(360,h))}if(s!==null){if(isNaN(s)){return false}this.channels.s=Math.max(0,Math.min(100,this.maxS,s),this.minS)}if(v!==null){if(isNaN(v)){return false}this.channels.v=Math.max(0,Math.min(100,this.maxV,v),this.minV)}if(a!==null){if(isNaN(a)){return false}this.channels.a=this.hasAlphaChannel()?Math.max(0,Math.min(1,this.maxA,a),this.minA):1}var rgb=jsc.HSV_RGB(this.channels.h,this.channels.s,this.channels.v);this.channels.r=rgb[0];this.channels.g=rgb[1];this.channels.b=rgb[2];this.exposeColor(flags);return true};this.fromRGBA=function(r,g,b,a,flags){if(r===undefined){r=null}if(g===undefined){g=null}if(b===undefined){b=null}if(a===undefined){a=null}if(r!==null){if(isNaN(r)){return false}r=Math.max(0,Math.min(255,r))}if(g!==null){if(isNaN(g)){return false}g=Math.max(0,Math.min(255,g))}if(b!==null){if(isNaN(b)){return false}b=Math.max(0,Math.min(255,b))}if(a!==null){if(isNaN(a)){return false}this.channels.a=this.hasAlphaChannel()?Math.max(0,Math.min(1,this.maxA,a),this.minA):1}var hsv=jsc.RGB_HSV(r===null?this.channels.r:r,g===null?this.channels.g:g,b===null?this.channels.b:b);if(hsv[0]!==null){this.channels.h=Math.max(0,Math.min(360,hsv[0]))}if(hsv[2]!==0){this.channels.s=Math.max(0,this.minS,Math.min(100,this.maxS,hsv[1]))}this.channels.v=Math.max(0,this.minV,Math.min(100,this.maxV,hsv[2]));var rgb=jsc.HSV_RGB(this.channels.h,this.channels.s,this.channels.v);this.channels.r=rgb[0];this.channels.g=rgb[1];this.channels.b=rgb[2];this.exposeColor(flags);return true};this.fromHSV=function(h,s,v,flags){console.warn("fromHSV() method is DEPRECATED. Using fromHSVA() instead."+jsc.docsRef);return this.fromHSVA(h,s,v,null,flags)};this.fromRGB=function(r,g,b,flags){console.warn("fromRGB() method is DEPRECATED. Using fromRGBA() instead."+jsc.docsRef);return this.fromRGBA(r,g,b,null,flags)};this.fromString=function(str,flags){if(!this.required&&str.trim()===""){this.setPreviewElementBg(null);this.setValueElementValue("");return true}var color=jsc.parseColorString(str);if(!color){return false}if(this.format.toLowerCase()==="any"){this._setFormat(color.format);if(!jsc.isAlphaFormat(this.getFormat())){color.rgba[3]=1}}this.fromRGBA(color.rgba[0],color.rgba[1],color.rgba[2],color.rgba[3],flags);return true};this.toString=function(format){if(format===undefined){format=this.getFormat()}switch(format.toLowerCase()){case"hex":return this.toHEXString();break;case"hexa":return this.toHEXAString();break;case"rgb":return this.toRGBString();break;case"rgba":return this.toRGBAString();break}return false};this.toHEXString=function(){return jsc.hexColor(this.channels.r,this.channels.g,this.channels.b)};this.toHEXAString=function(){return jsc.hexaColor(this.channels.r,this.channels.g,this.channels.b,this.channels.a)};this.toRGBString=function(){return jsc.rgbColor(this.channels.r,this.channels.g,this.channels.b)};this.toRGBAString=function(){return jsc.rgbaColor(this.channels.r,this.channels.g,this.channels.b,this.channels.a)};this.toGrayscale=function(){return.213*this.channels.r+.715*this.channels.g+.072*this.channels.b};this.toCanvas=function(){return jsc.genColorPreviewCanvas(this.toRGBAString()).canvas};this.toDataURL=function(){return this.toCanvas().toDataURL()};this.toBackground=function(){return jsc.pub.background(this.toRGBAString())};this.isLight=function(){return this.toGrayscale()>255/2};this.hide=function(){if(isPickerOwner()){detachPicker()}};this.show=function(){drawPicker()};this.redraw=function(){if(isPickerOwner()){drawPicker()}};this.getFormat=function(){return this._currentFormat};this._setFormat=function(format){this._currentFormat=format.toLowerCase()};this.hasAlphaChannel=function(){if(this.alphaChannel==="auto"){return this.format.toLowerCase()==="any"||jsc.isAlphaFormat(this.getFormat())||this.alpha!==undefined||this.alphaElement!==undefined}return this.alphaChannel};this.processValueInput=function(str){if(!this.fromString(str)){this.exposeColor()}};this.processAlphaInput=function(str){if(!this.fromHSVA(null,null,null,parseFloat(str))){this.exposeColor()}};this.exposeColor=function(flags){var colorStr=this.toString();var fmt=this.getFormat();jsc.setDataAttr(this.targetElement,"current-color",colorStr);if(!(flags&jsc.flags.leaveValue)&&this.valueElement){if(fmt==="hex"||fmt==="hexa"){if(!this.uppercase){colorStr=colorStr.toLowerCase()}if(!this.hash){colorStr=colorStr.replace(/^#/,"")}}this.setValueElementValue(colorStr)}if(!(flags&jsc.flags.leaveAlpha)&&this.alphaElement){var alphaVal=Math.round(this.channels.a*100)/100;this.setAlphaElementValue(alphaVal)}if(!(flags&jsc.flags.leavePreview)&&this.previewElement){var previewPos=null;if(jsc.isTextInput(this.previewElement)||jsc.isButton(this.previewElement)&&!jsc.isButtonEmpty(this.previewElement)){previewPos=this.previewPosition}this.setPreviewElementBg(this.toRGBAString())}if(isPickerOwner()){redrawPad();redrawSld();redrawASld()}};this.setPreviewElementBg=function(color){if(!this.previewElement){return}var position=null;var width=null;if(jsc.isTextInput(this.previewElement)||jsc.isButton(this.previewElement)&&!jsc.isButtonEmpty(this.previewElement)){position=this.previewPosition;width=this.previewSize}var backgrounds=[];if(!color){backgrounds.push({image:"none",position:"left top",size:"auto",repeat:"no-repeat",origin:"padding-box"})}else{backgrounds.push({image:jsc.genColorPreviewGradient(color,position,width?width-jsc.pub.previewSeparator.length:null),position:"left top",size:"auto",repeat:position?"repeat-y":"repeat",origin:"padding-box"});var preview=jsc.genColorPreviewCanvas("rgba(0,0,0,0)",position?{left:"right",right:"left"}[position]:null,width,true);backgrounds.push({image:"url('"+preview.canvas.toDataURL()+"')",position:(position||"left")+" top",size:preview.width+"px "+preview.height+"px",repeat:position?"repeat-y":"repeat",origin:"padding-box"})}var bg={image:[],position:[],size:[],repeat:[],origin:[]};for(var i=0;i<backgrounds.length;i+=1){bg.image.push(backgrounds[i].image);bg.position.push(backgrounds[i].position);bg.size.push(backgrounds[i].size);bg.repeat.push(backgrounds[i].repeat);bg.origin.push(backgrounds[i].origin)}var sty={"background-image":bg.image.join(", "),"background-position":bg.position.join(", "),"background-size":bg.size.join(", "),"background-repeat":bg.repeat.join(", "),"background-origin":bg.origin.join(", ")};jsc.setStyle(this.previewElement,sty,this.forceStyle);var padding={left:null,right:null};if(position){padding[position]=this.previewSize+this.previewPadding+"px"}var sty={"padding-left":padding.left,"padding-right":padding.right};jsc.setStyle(this.previewElement,sty,this.forceStyle,true)};this.setValueElementValue=function(str){if(this.valueElement){if(jsc.nodeName(this.valueElement)==="input"){this.valueElement.value=str}else{this.valueElement.innerHTML=str}}};this.setAlphaElementValue=function(str){if(this.alphaElement){if(jsc.nodeName(this.alphaElement)==="input"){this.alphaElement.value=str}else{this.alphaElement.innerHTML=str}}};this._processParentElementsInDOM=function(){if(this._parentElementsProcessed){return}this._parentElementsProcessed=true;var elm=this.targetElement;do{var compStyle=jsc.getCompStyle(elm);if(compStyle.position&&compStyle.position.toLowerCase()==="fixed"){this.fixed=true}if(elm!==this.targetElement){if(!jsc.getData(elm,"hasScrollListener")){elm.addEventListener("scroll",jsc.onParentScroll,false);jsc.setData(elm,"hasScrollListener",true)}}}while((elm=elm.parentNode)&&jsc.nodeName(elm)!=="body")};this.tryHide=function(){if(this.hideOnLeave){this.hide()}};this.set__palette=function(val){this.palette=val;this._palette=jsc.parsePaletteValue(val);this._paletteHasTransparency=jsc.containsTranparentColor(this._palette)};function setOption(option,value){if(typeof option!=="string"){throw new Error("Invalid value for option name: "+option)}if(jsc.enumOpts.hasOwnProperty(option)){if(typeof value==="string"){value=value.toLowerCase()}if(jsc.enumOpts[option].indexOf(value)===-1){throw new Error("Option '"+option+"' has invalid value: "+value)}}if(jsc.deprecatedOpts.hasOwnProperty(option)){var oldOpt=option;var newOpt=jsc.deprecatedOpts[option];if(newOpt){console.warn("Option '%s' is DEPRECATED, using '%s' instead."+jsc.docsRef,oldOpt,newOpt);option=newOpt}else{throw new Error("Option '"+option+"' is DEPRECATED")}}var setter="set__"+option;if(typeof THIS[setter]==="function"){THIS[setter](value);return true}else if(option in THIS){THIS[option]=value;return true}throw new Error("Unrecognized configuration option: "+option)}function getOption(option){if(typeof option!=="string"){throw new Error("Invalid value for option name: "+option)}if(jsc.deprecatedOpts.hasOwnProperty(option)){var oldOpt=option;var newOpt=jsc.deprecatedOpts[option];if(newOpt){console.warn("Option '%s' is DEPRECATED, using '%s' instead."+jsc.docsRef,oldOpt,newOpt);option=newOpt}else{throw new Error("Option '"+option+"' is DEPRECATED")}}var getter="get__"+option;if(typeof THIS[getter]==="function"){return THIS[getter](value)}else if(option in THIS){return THIS[option]}throw new Error("Unrecognized configuration option: "+option)}function detachPicker(){jsc.removeClass(THIS.targetElement,jsc.pub.activeClassName);jsc.picker.wrap.parentNode.removeChild(jsc.picker.wrap);delete jsc.picker.owner}function drawPicker(){THIS._processParentElementsInDOM();if(!jsc.picker){jsc.picker={owner:null,wrap:jsc.createEl("div"),box:jsc.createEl("div"),boxS:jsc.createEl("div"),boxB:jsc.createEl("div"),pad:jsc.createEl("div"),padB:jsc.createEl("div"),padM:jsc.createEl("div"),padCanvas:jsc.createPadCanvas(),cross:jsc.createEl("div"),crossBY:jsc.createEl("div"),crossBX:jsc.createEl("div"),crossLY:jsc.createEl("div"),crossLX:jsc.createEl("div"),sld:jsc.createEl("div"),sldB:jsc.createEl("div"),sldM:jsc.createEl("div"),sldGrad:jsc.createSliderGradient(),sldPtrS:jsc.createEl("div"),sldPtrIB:jsc.createEl("div"),sldPtrMB:jsc.createEl("div"),sldPtrOB:jsc.createEl("div"),asld:jsc.createEl("div"),asldB:jsc.createEl("div"),asldM:jsc.createEl("div"),asldGrad:jsc.createASliderGradient(),asldPtrS:jsc.createEl("div"),asldPtrIB:jsc.createEl("div"),asldPtrMB:jsc.createEl("div"),asldPtrOB:jsc.createEl("div"),pal:jsc.createEl("div"),btn:jsc.createEl("div"),btnT:jsc.createEl("span")};jsc.picker.pad.appendChild(jsc.picker.padCanvas.elm);jsc.picker.padB.appendChild(jsc.picker.pad);jsc.picker.cross.appendChild(jsc.picker.crossBY);jsc.picker.cross.appendChild(jsc.picker.crossBX);jsc.picker.cross.appendChild(jsc.picker.crossLY);jsc.picker.cross.appendChild(jsc.picker.crossLX);jsc.picker.padB.appendChild(jsc.picker.cross);jsc.picker.box.appendChild(jsc.picker.padB);jsc.picker.box.appendChild(jsc.picker.padM);jsc.picker.sld.appendChild(jsc.picker.sldGrad.elm);jsc.picker.sldB.appendChild(jsc.picker.sld);jsc.picker.sldB.appendChild(jsc.picker.sldPtrOB);jsc.picker.sldPtrOB.appendChild(jsc.picker.sldPtrMB);jsc.picker.sldPtrMB.appendChild(jsc.picker.sldPtrIB);jsc.picker.sldPtrIB.appendChild(jsc.picker.sldPtrS);jsc.picker.box.appendChild(jsc.picker.sldB);jsc.picker.box.appendChild(jsc.picker.sldM);jsc.picker.asld.appendChild(jsc.picker.asldGrad.elm);jsc.picker.asldB.appendChild(jsc.picker.asld);jsc.picker.asldB.appendChild(jsc.picker.asldPtrOB);jsc.picker.asldPtrOB.appendChild(jsc.picker.asldPtrMB);jsc.picker.asldPtrMB.appendChild(jsc.picker.asldPtrIB);jsc.picker.asldPtrIB.appendChild(jsc.picker.asldPtrS);jsc.picker.box.appendChild(jsc.picker.asldB);jsc.picker.box.appendChild(jsc.picker.asldM);jsc.picker.box.appendChild(jsc.picker.pal);jsc.picker.btn.appendChild(jsc.picker.btnT);jsc.picker.box.appendChild(jsc.picker.btn);jsc.picker.boxB.appendChild(jsc.picker.box);jsc.picker.wrap.appendChild(jsc.picker.boxS);jsc.picker.wrap.appendChild(jsc.picker.boxB);jsc.picker.wrap.addEventListener("touchstart",jsc.onPickerTouchStart,jsc.isPassiveEventSupported?{passive:false}:false)}var p=jsc.picker;var displaySlider=!!jsc.getSliderChannel(THIS);var displayAlphaSlider=THIS.hasAlphaChannel();var pickerDims=jsc.getPickerDims(THIS);var crossOuterSize=2*THIS.pointerBorderWidth+THIS.pointerThickness+2*THIS.crossSize;var controlPadding=jsc.getControlPadding(THIS);var borderRadius=Math.min(THIS.borderRadius,Math.round(THIS.padding*Math.PI));var padCursor="crosshair";p.wrap.className="jscolor-picker-wrap";p.wrap.style.clear="both";p.wrap.style.width=pickerDims.borderW+"px";p.wrap.style.height=pickerDims.borderH+"px";p.wrap.style.zIndex=THIS.zIndex;p.box.className="jscolor-picker";p.box.style.width=pickerDims.paddedW+"px";p.box.style.height=pickerDims.paddedH+"px";p.box.style.position="relative";p.boxS.className="jscolor-picker-shadow";p.boxS.style.position="absolute";p.boxS.style.left="0";p.boxS.style.top="0";p.boxS.style.width="100%";p.boxS.style.height="100%";jsc.setBorderRadius(p.boxS,borderRadius+"px");p.boxB.className="jscolor-picker-border";p.boxB.style.position="relative";p.boxB.style.border=THIS.borderWidth+"px solid";p.boxB.style.borderColor=THIS.borderColor;p.boxB.style.background=THIS.backgroundColor;jsc.setBorderRadius(p.boxB,borderRadius+"px");p.padM.style.background="rgba(255,0,0,.2)";p.sldM.style.background="rgba(0,255,0,.2)";p.asldM.style.background="rgba(0,0,255,.2)";p.padM.style.opacity=p.sldM.style.opacity=p.asldM.style.opacity="0";p.pad.style.position="relative";p.pad.style.width=THIS.width+"px";p.pad.style.height=THIS.height+"px";p.padCanvas.draw(THIS.width,THIS.height,jsc.getPadYChannel(THIS));p.padB.style.position="absolute";p.padB.style.left=THIS.padding+"px";p.padB.style.top=THIS.padding+"px";p.padB.style.border=THIS.controlBorderWidth+"px solid";p.padB.style.borderColor=THIS.controlBorderColor;p.padM.style.position="absolute";p.padM.style.left=0+"px";p.padM.style.top=0+"px";p.padM.style.width=THIS.padding+2*THIS.controlBorderWidth+THIS.width+controlPadding+"px";p.padM.style.height=2*THIS.controlBorderWidth+2*THIS.padding+THIS.height+"px";p.padM.style.cursor=padCursor;jsc.setData(p.padM,{instance:THIS,control:"pad"});p.cross.style.position="absolute";p.cross.style.left=p.cross.style.top="0";p.cross.style.width=p.cross.style.height=crossOuterSize+"px";p.crossBY.style.position=p.crossBX.style.position="absolute";p.crossBY.style.background=p.crossBX.style.background=THIS.pointerBorderColor;p.crossBY.style.width=p.crossBX.style.height=2*THIS.pointerBorderWidth+THIS.pointerThickness+"px";p.crossBY.style.height=p.crossBX.style.width=crossOuterSize+"px";p.crossBY.style.left=p.crossBX.style.top=Math.floor(crossOuterSize/2)-Math.floor(THIS.pointerThickness/2)-THIS.pointerBorderWidth+"px";p.crossBY.style.top=p.crossBX.style.left="0";p.crossLY.style.position=p.crossLX.style.position="absolute";p.crossLY.style.background=p.crossLX.style.background=THIS.pointerColor;p.crossLY.style.height=p.crossLX.style.width=crossOuterSize-2*THIS.pointerBorderWidth+"px";p.crossLY.style.width=p.crossLX.style.height=THIS.pointerThickness+"px";p.crossLY.style.left=p.crossLX.style.top=Math.floor(crossOuterSize/2)-Math.floor(THIS.pointerThickness/2)+"px";p.crossLY.style.top=p.crossLX.style.left=THIS.pointerBorderWidth+"px";p.sld.style.overflow="hidden";p.sld.style.width=THIS.sliderSize+"px";p.sld.style.height=THIS.height+"px";p.sldGrad.draw(THIS.sliderSize,THIS.height,"#000","#000");p.sldB.style.display=displaySlider?"block":"none";p.sldB.style.position="absolute";p.sldB.style.left=THIS.padding+THIS.width+2*THIS.controlBorderWidth+2*controlPadding+"px";p.sldB.style.top=THIS.padding+"px";p.sldB.style.border=THIS.controlBorderWidth+"px solid";p.sldB.style.borderColor=THIS.controlBorderColor;p.sldM.style.display=displaySlider?"block":"none";p.sldM.style.position="absolute";p.sldM.style.left=THIS.padding+THIS.width+2*THIS.controlBorderWidth+controlPadding+"px";p.sldM.style.top=0+"px";p.sldM.style.width=THIS.sliderSize+2*controlPadding+2*THIS.controlBorderWidth+(displayAlphaSlider?0:Math.max(0,THIS.padding-controlPadding))+"px";p.sldM.style.height=2*THIS.controlBorderWidth+2*THIS.padding+THIS.height+"px";p.sldM.style.cursor="default";jsc.setData(p.sldM,{instance:THIS,control:"sld"});p.sldPtrIB.style.border=p.sldPtrOB.style.border=THIS.pointerBorderWidth+"px solid "+THIS.pointerBorderColor;p.sldPtrOB.style.position="absolute";p.sldPtrOB.style.left=-(2*THIS.pointerBorderWidth+THIS.pointerThickness)+"px";p.sldPtrOB.style.top="0";p.sldPtrMB.style.border=THIS.pointerThickness+"px solid "+THIS.pointerColor;p.sldPtrS.style.width=THIS.sliderSize+"px";p.sldPtrS.style.height=jsc.pub.sliderInnerSpace+"px";p.asld.style.overflow="hidden";p.asld.style.width=THIS.sliderSize+"px";p.asld.style.height=THIS.height+"px";p.asldGrad.draw(THIS.sliderSize,THIS.height,"#000");p.asldB.style.display=displayAlphaSlider?"block":"none";p.asldB.style.position="absolute";p.asldB.style.left=THIS.padding+THIS.width+2*THIS.controlBorderWidth+controlPadding+(displaySlider?THIS.sliderSize+3*controlPadding+2*THIS.controlBorderWidth:0)+"px";p.asldB.style.top=THIS.padding+"px";p.asldB.style.border=THIS.controlBorderWidth+"px solid";p.asldB.style.borderColor=THIS.controlBorderColor;p.asldM.style.display=displayAlphaSlider?"block":"none";p.asldM.style.position="absolute";p.asldM.style.left=THIS.padding+THIS.width+2*THIS.controlBorderWidth+controlPadding+(displaySlider?THIS.sliderSize+2*controlPadding+2*THIS.controlBorderWidth:0)+"px";p.asldM.style.top=0+"px";p.asldM.style.width=THIS.sliderSize+2*controlPadding+2*THIS.controlBorderWidth+Math.max(0,THIS.padding-controlPadding)+"px";p.asldM.style.height=2*THIS.controlBorderWidth+2*THIS.padding+THIS.height+"px";p.asldM.style.cursor="default";jsc.setData(p.asldM,{instance:THIS,control:"asld"});p.asldPtrIB.style.border=p.asldPtrOB.style.border=THIS.pointerBorderWidth+"px solid "+THIS.pointerBorderColor;p.asldPtrOB.style.position="absolute";p.asldPtrOB.style.left=-(2*THIS.pointerBorderWidth+THIS.pointerThickness)+"px";p.asldPtrOB.style.top="0";p.asldPtrMB.style.border=THIS.pointerThickness+"px solid "+THIS.pointerColor;p.asldPtrS.style.width=THIS.sliderSize+"px";p.asldPtrS.style.height=jsc.pub.sliderInnerSpace+"px";p.pal.className="jscolor-palette";p.pal.style.display=pickerDims.palette.rows?"block":"none";p.pal.style.position="absolute";p.pal.style.left=THIS.padding+"px";p.pal.style.top=2*THIS.controlBorderWidth+2*THIS.padding+THIS.height+"px";p.pal.innerHTML="";var chessboard=jsc.genColorPreviewCanvas("rgba(0,0,0,0)");var si=0;for(var r=0;r<pickerDims.palette.rows;r++){for(var c=0;c<pickerDims.palette.cols&&si<THIS._palette.length;c++,si++){var sampleColor=THIS._palette[si];var sampleCssColor=jsc.rgbaColor.apply(null,sampleColor.rgba);var sc=jsc.createEl("div");sc.style.width=pickerDims.palette.cellW-2*THIS.controlBorderWidth+"px";sc.style.height=pickerDims.palette.cellH-2*THIS.controlBorderWidth+"px";sc.style.backgroundColor=sampleCssColor;var sw=jsc.createEl("div");sw.className="jscolor-palette-sample";sw.style.display="block";sw.style.position="absolute";sw.style.left=(pickerDims.palette.cols<=1?0:Math.round(10*(c*((pickerDims.contentW-pickerDims.palette.cellW)/(pickerDims.palette.cols-1))))/10)+"px";sw.style.top=r*(pickerDims.palette.cellH+THIS.paletteSpacing)+"px";sw.style.border=THIS.controlBorderWidth+"px solid";sw.style.borderColor=THIS.controlBorderColor;sw.style.cursor="pointer";if(sampleColor.rgba[3]!==null&&sampleColor.rgba[3]<1){sw.style.backgroundImage="url('"+chessboard.canvas.toDataURL()+"')";sw.style.backgroundRepeat="repeat";sw.style.backgroundPosition="center center"}jsc.setData(sw,{instance:THIS,control:"palette-sample",color:sampleColor});sw.addEventListener("click",jsc.onPaletteSampleClick,false);sw.appendChild(sc);p.pal.appendChild(sw)}}function setBtnBorder(){var insetColors=THIS.controlBorderColor.split(/\s+/);var outsetColor=insetColors.length<2?insetColors[0]:insetColors[1]+" "+insetColors[0]+" "+insetColors[0]+" "+insetColors[1];p.btn.style.borderColor=outsetColor}var btnPadding=15;p.btn.className="jscolor-btn-close";p.btn.style.display=THIS.closeButton?"block":"none";p.btn.style.position="absolute";p.btn.style.left=THIS.padding+"px";p.btn.style.bottom=THIS.padding+"px";p.btn.style.padding="0 "+btnPadding+"px";p.btn.style.maxWidth=pickerDims.contentW-2*THIS.controlBorderWidth-2*btnPadding+"px";p.btn.style.overflow="hidden";p.btn.style.height=THIS.buttonHeight+"px";p.btn.style.whiteSpace="nowrap";p.btn.style.border=THIS.controlBorderWidth+"px solid";setBtnBorder();p.btn.style.color=THIS.buttonColor;p.btn.style.font="12px sans-serif";p.btn.style.textAlign="center";p.btn.style.cursor="pointer";p.btn.onmousedown=function(){THIS.hide()};p.btnT.style.lineHeight=THIS.buttonHeight+"px";p.btnT.innerHTML="";p.btnT.appendChild(window.document.createTextNode(THIS.closeText));redrawPad();redrawSld();redrawASld();if(jsc.picker.owner&&jsc.picker.owner!==THIS){jsc.removeClass(jsc.picker.owner.targetElement,jsc.pub.activeClassName)}jsc.picker.owner=THIS;if(THIS.container===window.document.body){jsc.redrawPosition()}else{jsc._drawPosition(THIS,0,0,"relative",false)}if(p.wrap.parentNode!==THIS.container){THIS.container.appendChild(p.wrap)}jsc.addClass(THIS.targetElement,jsc.pub.activeClassName)}function redrawPad(){var yChannel=jsc.getPadYChannel(THIS);var x=Math.round(THIS.channels.h/360*(THIS.width-1));var y=Math.round((1-THIS.channels[yChannel]/100)*(THIS.height-1));var crossOuterSize=2*THIS.pointerBorderWidth+THIS.pointerThickness+2*THIS.crossSize;var ofs=-Math.floor(crossOuterSize/2);jsc.picker.cross.style.left=x+ofs+"px";jsc.picker.cross.style.top=y+ofs+"px";switch(jsc.getSliderChannel(THIS)){case"s":var rgb1=jsc.HSV_RGB(THIS.channels.h,100,THIS.channels.v);var rgb2=jsc.HSV_RGB(THIS.channels.h,0,THIS.channels.v);var color1="rgb("+Math.round(rgb1[0])+","+Math.round(rgb1[1])+","+Math.round(rgb1[2])+")";var color2="rgb("+Math.round(rgb2[0])+","+Math.round(rgb2[1])+","+Math.round(rgb2[2])+")";jsc.picker.sldGrad.draw(THIS.sliderSize,THIS.height,color1,color2);break;case"v":var rgb=jsc.HSV_RGB(THIS.channels.h,THIS.channels.s,100);var color1="rgb("+Math.round(rgb[0])+","+Math.round(rgb[1])+","+Math.round(rgb[2])+")";var color2="#000";jsc.picker.sldGrad.draw(THIS.sliderSize,THIS.height,color1,color2);break}jsc.picker.asldGrad.draw(THIS.sliderSize,THIS.height,THIS.toHEXString())}function redrawSld(){var sldChannel=jsc.getSliderChannel(THIS);if(sldChannel){var y=Math.round((1-THIS.channels[sldChannel]/100)*(THIS.height-1));jsc.picker.sldPtrOB.style.top=y-(2*THIS.pointerBorderWidth+THIS.pointerThickness)-Math.floor(jsc.pub.sliderInnerSpace/2)+"px"}jsc.picker.asldGrad.draw(THIS.sliderSize,THIS.height,THIS.toHEXString())}function redrawASld(){var y=Math.round((1-THIS.channels.a)*(THIS.height-1));jsc.picker.asldPtrOB.style.top=y-(2*THIS.pointerBorderWidth+THIS.pointerThickness)-Math.floor(jsc.pub.sliderInnerSpace/2)+"px"}function isPickerOwner(){return jsc.picker&&jsc.picker.owner===THIS}function onValueKeyDown(ev){if(jsc.eventKey(ev)==="Enter"){if(THIS.valueElement){THIS.processValueInput(THIS.valueElement.value)}THIS.tryHide()}}function onAlphaKeyDown(ev){if(jsc.eventKey(ev)==="Enter"){if(THIS.alphaElement){THIS.processAlphaInput(THIS.alphaElement.value)}THIS.tryHide()}}function onValueChange(ev){if(jsc.getData(ev,"internal")){return}var oldVal=THIS.valueElement.value;THIS.processValueInput(THIS.valueElement.value);jsc.triggerCallback(THIS,"onChange");if(THIS.valueElement.value!==oldVal){jsc.triggerInputEvent(THIS.valueElement,"change",true,true)}}function onAlphaChange(ev){if(jsc.getData(ev,"internal")){return}var oldVal=THIS.alphaElement.value;THIS.processAlphaInput(THIS.alphaElement.value);jsc.triggerCallback(THIS,"onChange");jsc.triggerInputEvent(THIS.valueElement,"change",true,true);if(THIS.alphaElement.value!==oldVal){jsc.triggerInputEvent(THIS.alphaElement,"change",true,true)}}function onValueInput(ev){if(jsc.getData(ev,"internal")){return}if(THIS.valueElement){THIS.fromString(THIS.valueElement.value,jsc.flags.leaveValue)}jsc.triggerCallback(THIS,"onInput")}function onAlphaInput(ev){if(jsc.getData(ev,"internal")){return}if(THIS.alphaElement){THIS.fromHSVA(null,null,null,parseFloat(THIS.alphaElement.value),jsc.flags.leaveAlpha)}jsc.triggerCallback(THIS,"onInput");jsc.triggerInputEvent(THIS.valueElement,"input",true,true)}if(jsc.pub.options){for(var opt in jsc.pub.options){if(jsc.pub.options.hasOwnProperty(opt)){try{setOption(opt,jsc.pub.options[opt])}catch(e){console.warn(e)}}}}var presetsArr=[];if(opts.preset){if(typeof opts.preset==="string"){presetsArr=opts.preset.split(/\s+/)}else if(Array.isArray(opts.preset)){presetsArr=opts.preset.slice()}else{console.warn("Unrecognized preset value")}}if(presetsArr.indexOf("default")===-1){presetsArr.push("default")}for(var i=presetsArr.length-1;i>=0;i-=1){var pres=presetsArr[i];if(!pres){continue}if(!jsc.pub.presets.hasOwnProperty(pres)){console.warn("Unknown preset: %s",pres);continue}for(var opt in jsc.pub.presets[pres]){if(jsc.pub.presets[pres].hasOwnProperty(opt)){try{setOption(opt,jsc.pub.presets[pres][opt])}catch(e){console.warn(e)}}}}var nonProperties=["preset"];for(var opt in opts){if(opts.hasOwnProperty(opt)){if(nonProperties.indexOf(opt)===-1){try{setOption(opt,opts[opt])}catch(e){console.warn(e)}}}}if(this.container===undefined){this.container=window.document.body}else{this.container=jsc.node(this.container)}if(!this.container){throw new Error("Cannot instantiate color picker without a container element")}this.targetElement=jsc.node(targetElement);if(!this.targetElement){if(typeof targetElement==="string"&&/^[a-zA-Z][\w:.-]*$/.test(targetElement)){var possiblyId=targetElement;throw new Error("If '"+possiblyId+"' is supposed to be an ID, please use '#"+possiblyId+"' or any valid CSS selector.")}throw new Error("Cannot instantiate color picker without a target element")}if(this.targetElement.jscolor&&this.targetElement.jscolor instanceof jsc.pub){throw new Error("Color picker already installed on this element")}this.targetElement.jscolor=this;jsc.addClass(this.targetElement,jsc.pub.className);jsc.instances.push(this);if(jsc.isButton(this.targetElement)){if(this.targetElement.type.toLowerCase()!=="button"){this.targetElement.type="button"}if(jsc.isButtonEmpty(this.targetElement)){jsc.removeChildren(this.targetElement);this.targetElement.appendChild(window.document.createTextNode(" "));var compStyle=jsc.getCompStyle(this.targetElement);var currMinWidth=parseFloat(compStyle["min-width"])||0;if(currMinWidth<this.previewSize){jsc.setStyle(this.targetElement,{"min-width":this.previewSize+"px"},this.forceStyle)}}}if(this.valueElement===undefined){if(jsc.isTextInput(this.targetElement)){this.valueElement=this.targetElement}else{}}else if(this.valueElement===null){}else{this.valueElement=jsc.node(this.valueElement)}if(this.alphaElement){this.alphaElement=jsc.node(this.alphaElement)}if(this.previewElement===undefined){this.previewElement=this.targetElement}else if(this.previewElement===null){}else{this.previewElement=jsc.node(this.previewElement)}if(this.valueElement&&jsc.isTextInput(this.valueElement)){var valueElementOrigEvents={onInput:this.valueElement.oninput};this.valueElement.oninput=null;this.valueElement.addEventListener("keydown",onValueKeyDown,false);this.valueElement.addEventListener("change",onValueChange,false);this.valueElement.addEventListener("input",onValueInput,false);if(valueElementOrigEvents.onInput){this.valueElement.addEventListener("input",valueElementOrigEvents.onInput,false)}this.valueElement.setAttribute("autocomplete","off");this.valueElement.setAttribute("autocorrect","off");this.valueElement.setAttribute("autocapitalize","off");this.valueElement.setAttribute("spellcheck",false)}if(this.alphaElement&&jsc.isTextInput(this.alphaElement)){this.alphaElement.addEventListener("keydown",onAlphaKeyDown,false);this.alphaElement.addEventListener("change",onAlphaChange,false);this.alphaElement.addEventListener("input",onAlphaInput,false);this.alphaElement.setAttribute("autocomplete","off");this.alphaElement.setAttribute("autocorrect","off");this.alphaElement.setAttribute("autocapitalize","off");this.alphaElement.setAttribute("spellcheck",false)}var initValue="FFFFFF";if(this.value!==undefined){initValue=this.value}else if(this.valueElement&&this.valueElement.value!==undefined){initValue=this.valueElement.value}var initAlpha=undefined;if(this.alpha!==undefined){initAlpha=""+this.alpha}else if(this.alphaElement&&this.alphaElement.value!==undefined){initAlpha=this.alphaElement.value}this._currentFormat=null;if(["auto","any"].indexOf(this.format.toLowerCase())>-1){var color=jsc.parseColorString(initValue);this._currentFormat=color?color.format:"hex"}else{this._currentFormat=this.format.toLowerCase()}this.processValueInput(initValue);if(initAlpha!==undefined){this.processAlphaInput(initAlpha)}}};jsc.pub.className="jscolor";jsc.pub.activeClassName="jscolor-active";jsc.pub.looseJSON=true;jsc.pub.presets={};jsc.pub.presets["default"]={};jsc.pub.presets["light"]={backgroundColor:"rgba(255,255,255,1)",controlBorderColor:"rgba(187,187,187,1)",buttonColor:"rgba(0,0,0,1)"};jsc.pub.presets["dark"]={backgroundColor:"rgba(51,51,51,1)",controlBorderColor:"rgba(153,153,153,1)",buttonColor:"rgba(240,240,240,1)"};jsc.pub.presets["small"]={width:101,height:101,padding:10,sliderSize:14,paletteCols:8};jsc.pub.presets["medium"]={width:181,height:101,padding:12,sliderSize:16,paletteCols:10};jsc.pub.presets["large"]={width:271,height:151,padding:12,sliderSize:24,paletteCols:15};jsc.pub.presets["thin"]={borderWidth:1,controlBorderWidth:1,pointerBorderWidth:1};jsc.pub.presets["thick"]={borderWidth:2,controlBorderWidth:2,pointerBorderWidth:2};jsc.pub.sliderInnerSpace=3;jsc.pub.chessboardSize=8;jsc.pub.chessboardColor1="#666666";jsc.pub.chessboardColor2="#999999";jsc.pub.previewSeparator=["rgba(255,255,255,.65)","rgba(128,128,128,.65)"];jsc.pub.init=function(){if(jsc.initialized){return}window.document.addEventListener("mousedown",jsc.onDocumentMouseDown,false);window.document.addEventListener("keyup",jsc.onDocumentKeyUp,false);window.addEventListener("resize",jsc.onWindowResize,false);window.addEventListener("scroll",jsc.onWindowScroll,false);jsc.pub.install();jsc.initialized=true;while(jsc.readyQueue.length){var func=jsc.readyQueue.shift();func()}};jsc.pub.install=function(rootNode){var success=true;try{jsc.installBySelector("[data-jscolor]",rootNode)}catch(e){success=false;console.warn(e)}if(jsc.pub.lookupClass){try{jsc.installBySelector("input."+jsc.pub.lookupClass+", "+"button."+jsc.pub.lookupClass,rootNode)}catch(e){}}return success};jsc.pub.ready=function(func){if(typeof func!=="function"){console.warn("Passed value is not a function");return false}if(jsc.initialized){func()}else{jsc.readyQueue.push(func)}return true};jsc.pub.trigger=function(eventNames){var triggerNow=function(){jsc.triggerGlobal(eventNames)};if(jsc.initialized){triggerNow()}else{jsc.pub.ready(triggerNow)}};jsc.pub.hide=function(){if(jsc.picker&&jsc.picker.owner){jsc.picker.owner.hide()}};jsc.pub.chessboard=function(color){if(!color){color="rgba(0,0,0,0)"}var preview=jsc.genColorPreviewCanvas(color);return preview.canvas.toDataURL()};jsc.pub.background=function(color){var backgrounds=[];backgrounds.push(jsc.genColorPreviewGradient(color));var preview=jsc.genColorPreviewCanvas();backgrounds.push(["url('"+preview.canvas.toDataURL()+"')","left top","repeat"].join(" "));return backgrounds.join(", ")};jsc.pub.options={};jsc.pub.lookupClass="jscolor";jsc.pub.installByClassName=function(){console.error('jscolor.installByClassName() is DEPRECATED. Use data-jscolor="" attribute instead of a class name.'+jsc.docsRef);return false};jsc.register();return jsc.pub}();if(typeof window.jscolor==="undefined"){window.jscolor=window.JSColor=jscolor}return jscolor});
]]></Script>
    <Script path="lib/lazysizes.min.js"><![CDATA[/*! lazysizes - v5.2.2 */

!function(e){var t=function(u,D,f){"use strict";var k,H;if(function(){var e;var t={lazyClass:"lazyload",loadedClass:"lazyloaded",loadingClass:"lazyloading",preloadClass:"lazypreload",errorClass:"lazyerror",autosizesClass:"lazyautosizes",srcAttr:"data-src",srcsetAttr:"data-srcset",sizesAttr:"data-sizes",minSize:40,customMedia:{},init:true,expFactor:1.5,hFac:.8,loadMode:2,loadHidden:true,ricTimeout:0,throttleDelay:125};H=u.lazySizesConfig||u.lazysizesConfig||{};for(e in t){if(!(e in H)){H[e]=t[e]}}}(),!D||!D.getElementsByClassName){return{init:function(){},cfg:H,noSupport:true}}var O=D.documentElement,a=u.HTMLPictureElement,P="addEventListener",$="getAttribute",q=u[P].bind(u),I=u.setTimeout,U=u.requestAnimationFrame||I,l=u.requestIdleCallback,j=/^picture$/i,r=["load","error","lazyincluded","_lazyloaded"],i={},G=Array.prototype.forEach,J=function(e,t){if(!i[t]){i[t]=new RegExp("(\\s|^)"+t+"(\\s|$)")}return i[t].test(e[$]("class")||"")&&i[t]},K=function(e,t){if(!J(e,t)){e.setAttribute("class",(e[$]("class")||"").trim()+" "+t)}},Q=function(e,t){var i;if(i=J(e,t)){e.setAttribute("class",(e[$]("class")||"").replace(i," "))}},V=function(t,i,e){var a=e?P:"removeEventListener";if(e){V(t,i)}r.forEach(function(e){t[a](e,i)})},X=function(e,t,i,a,r){var n=D.createEvent("Event");if(!i){i={}}i.instance=k;n.initEvent(t,!a,!r);n.detail=i;e.dispatchEvent(n);return n},Y=function(e,t){var i;if(!a&&(i=u.picturefill||H.pf)){if(t&&t.src&&!e[$]("srcset")){e.setAttribute("srcset",t.src)}i({reevaluate:true,elements:[e]})}else if(t&&t.src){e.src=t.src}},Z=function(e,t){return(getComputedStyle(e,null)||{})[t]},s=function(e,t,i){i=i||e.offsetWidth;while(i<H.minSize&&t&&!e._lazysizesWidth){i=t.offsetWidth;t=t.parentNode}return i},ee=function(){var i,a;var t=[];var r=[];var n=t;var s=function(){var e=n;n=t.length?r:t;i=true;a=false;while(e.length){e.shift()()}i=false};var e=function(e,t){if(i&&!t){e.apply(this,arguments)}else{n.push(e);if(!a){a=true;(D.hidden?I:U)(s)}}};e._lsFlush=s;return e}(),te=function(i,e){return e?function(){ee(i)}:function(){var e=this;var t=arguments;ee(function(){i.apply(e,t)})}},ie=function(e){var i;var a=0;var r=H.throttleDelay;var n=H.ricTimeout;var t=function(){i=false;a=f.now();e()};var s=l&&n>49?function(){l(t,{timeout:n});if(n!==H.ricTimeout){n=H.ricTimeout}}:te(function(){I(t)},true);return function(e){var t;if(e=e===true){n=33}if(i){return}i=true;t=r-(f.now()-a);if(t<0){t=0}if(e||t<9){s()}else{I(s,t)}}},ae=function(e){var t,i;var a=99;var r=function(){t=null;e()};var n=function(){var e=f.now()-i;if(e<a){I(n,a-e)}else{(l||r)(r)}};return function(){i=f.now();if(!t){t=I(n,a)}}},e=function(){var v,m,c,h,e;var y,z,g,p,C,b,A;var n=/^img$/i;var d=/^iframe$/i;var E="onscroll"in u&&!/(gle|ing)bot/.test(navigator.userAgent);var _=0;var w=0;var N=0;var M=-1;var x=function(e){N--;if(!e||N<0||!e.target){N=0}};var W=function(e){if(A==null){A=Z(D.body,"visibility")=="hidden"}return A||!(Z(e.parentNode,"visibility")=="hidden"&&Z(e,"visibility")=="hidden")};var S=function(e,t){var i;var a=e;var r=W(e);g-=t;b+=t;p-=t;C+=t;while(r&&(a=a.offsetParent)&&a!=D.body&&a!=O){r=(Z(a,"opacity")||1)>0;if(r&&Z(a,"overflow")!="visible"){i=a.getBoundingClientRect();r=C>i.left&&p<i.right&&b>i.top-1&&g<i.bottom+1}}return r};var t=function(){var e,t,i,a,r,n,s,l,o,u,f,c;var d=k.elements;if((h=H.loadMode)&&N<8&&(e=d.length)){t=0;M++;for(;t<e;t++){if(!d[t]||d[t]._lazyRace){continue}if(!E||k.prematureUnveil&&k.prematureUnveil(d[t])){R(d[t]);continue}if(!(l=d[t][$]("data-expand"))||!(n=l*1)){n=w}if(!u){u=!H.expand||H.expand<1?O.clientHeight>500&&O.clientWidth>500?500:370:H.expand;k._defEx=u;f=u*H.expFactor;c=H.hFac;A=null;if(w<f&&N<1&&M>2&&h>2&&!D.hidden){w=f;M=0}else if(h>1&&M>1&&N<6){w=u}else{w=_}}if(o!==n){y=innerWidth+n*c;z=innerHeight+n;s=n*-1;o=n}i=d[t].getBoundingClientRect();if((b=i.bottom)>=s&&(g=i.top)<=z&&(C=i.right)>=s*c&&(p=i.left)<=y&&(b||C||p||g)&&(H.loadHidden||W(d[t]))&&(m&&N<3&&!l&&(h<3||M<4)||S(d[t],n))){R(d[t]);r=true;if(N>9){break}}else if(!r&&m&&!a&&N<4&&M<4&&h>2&&(v[0]||H.preloadAfterLoad)&&(v[0]||!l&&(b||C||p||g||d[t][$](H.sizesAttr)!="auto"))){a=v[0]||d[t]}}if(a&&!r){R(a)}}};var i=ie(t);var B=function(e){var t=e.target;if(t._lazyCache){delete t._lazyCache;return}x(e);K(t,H.loadedClass);Q(t,H.loadingClass);V(t,L);X(t,"lazyloaded")};var a=te(B);var L=function(e){a({target:e.target})};var T=function(t,i){try{t.contentWindow.location.replace(i)}catch(e){t.src=i}};var F=function(e){var t;var i=e[$](H.srcsetAttr);if(t=H.customMedia[e[$]("data-media")||e[$]("media")]){e.setAttribute("media",t)}if(i){e.setAttribute("srcset",i)}};var s=te(function(t,e,i,a,r){var n,s,l,o,u,f;if(!(u=X(t,"lazybeforeunveil",e)).defaultPrevented){if(a){if(i){K(t,H.autosizesClass)}else{t.setAttribute("sizes",a)}}s=t[$](H.srcsetAttr);n=t[$](H.srcAttr);if(r){l=t.parentNode;o=l&&j.test(l.nodeName||"")}f=e.firesLoad||"src"in t&&(s||n||o);u={target:t};K(t,H.loadingClass);if(f){clearTimeout(c);c=I(x,2500);V(t,L,true)}if(o){G.call(l.getElementsByTagName("source"),F)}if(s){t.setAttribute("srcset",s)}else if(n&&!o){if(d.test(t.nodeName)){T(t,n)}else{t.src=n}}if(r&&(s||o)){Y(t,{src:n})}}if(t._lazyRace){delete t._lazyRace}Q(t,H.lazyClass);ee(function(){var e=t.complete&&t.naturalWidth>1;if(!f||e){if(e){K(t,"ls-is-cached")}B(u);t._lazyCache=true;I(function(){if("_lazyCache"in t){delete t._lazyCache}},9)}if(t.loading=="lazy"){N--}},true)});var R=function(e){if(e._lazyRace){return}var t;var i=n.test(e.nodeName);var a=i&&(e[$](H.sizesAttr)||e[$]("sizes"));var r=a=="auto";if((r||!m)&&i&&(e[$]("src")||e.srcset)&&!e.complete&&!J(e,H.errorClass)&&J(e,H.lazyClass)){return}t=X(e,"lazyunveilread").detail;if(r){re.updateElem(e,true,e.offsetWidth)}e._lazyRace=true;N++;s(e,t,r,a,i)};var r=ae(function(){H.loadMode=3;i()});var l=function(){if(H.loadMode==3){H.loadMode=2}r()};var o=function(){if(m){return}if(f.now()-e<999){I(o,999);return}m=true;H.loadMode=3;i();q("scroll",l,true)};return{_:function(){e=f.now();k.elements=D.getElementsByClassName(H.lazyClass);v=D.getElementsByClassName(H.lazyClass+" "+H.preloadClass);q("scroll",i,true);q("resize",i,true);q("pageshow",function(e){if(e.persisted){var t=D.querySelectorAll("."+H.loadingClass);if(t.length&&t.forEach){U(function(){t.forEach(function(e){if(e.complete){R(e)}})})}}});if(u.MutationObserver){new MutationObserver(i).observe(O,{childList:true,subtree:true,attributes:true})}else{O[P]("DOMNodeInserted",i,true);O[P]("DOMAttrModified",i,true);setInterval(i,999)}q("hashchange",i,true);["focus","mouseover","click","load","transitionend","animationend"].forEach(function(e){D[P](e,i,true)});if(/d$|^c/.test(D.readyState)){o()}else{q("load",o);D[P]("DOMContentLoaded",i);I(o,2e4)}if(k.elements.length){t();ee._lsFlush()}else{i()}},checkElems:i,unveil:R,_aLSL:l}}(),re=function(){var i;var n=te(function(e,t,i,a){var r,n,s;e._lazysizesWidth=a;a+="px";e.setAttribute("sizes",a);if(j.test(t.nodeName||"")){r=t.getElementsByTagName("source");for(n=0,s=r.length;n<s;n++){r[n].setAttribute("sizes",a)}}if(!i.detail.dataAttr){Y(e,i.detail)}});var a=function(e,t,i){var a;var r=e.parentNode;if(r){i=s(e,r,i);a=X(e,"lazybeforesizes",{width:i,dataAttr:!!t});if(!a.defaultPrevented){i=a.detail.width;if(i&&i!==e._lazysizesWidth){n(e,r,a,i)}}}};var e=function(){var e;var t=i.length;if(t){e=0;for(;e<t;e++){a(i[e])}}};var t=ae(e);return{_:function(){i=D.getElementsByClassName(H.autosizesClass);q("resize",t)},checkElems:t,updateElem:a}}(),t=function(){if(!t.i&&D.getElementsByClassName){t.i=true;re._();e._()}};return I(function(){H.init&&t()}),k={cfg:H,autoSizer:re,loader:e,init:t,uP:Y,aC:K,rC:Q,hC:J,fire:X,gW:s,rAF:ee}}(e,e.document,Date);e.lazySizes=t,"object"==typeof module&&module.exports&&(module.exports=t)}("undefined"!=typeof window?window:{});]]></Script>
    <Script path="lib/ls.bgset.min.js"><![CDATA[/*! lazysizes - v5.2.2 */

!function(e,t){var a=function(){t(e.lazySizes),e.removeEventListener("lazyunveilread",a,!0)};t=t.bind(null,e,e.document),"object"==typeof module&&module.exports?t(require("lazysizes")):"function"==typeof define&&define.amd?define(["lazysizes"],t):e.lazySizes?a():e.addEventListener("lazyunveilread",a,!0)}(window,function(e,z,g){"use strict";var c,y,b,f,i,s,n,v,m;e.addEventListener&&(c=g.cfg,y=/\s+/g,b=/\s*\|\s+|\s+\|\s*/g,f=/^(.+?)(?:\s+\[\s*(.+?)\s*\])(?:\s+\[\s*(.+?)\s*\])?$/,i=/^\s*\(*\s*type\s*:\s*(.+?)\s*\)*\s*$/,s=/\(|\)|'/,n={contain:1,cover:1},v=function(e,t){var a;t&&((a=t.match(i))&&a[1]?e.setAttribute("type",a[1]):e.setAttribute("media",c.customMedia[t]||t))},m=function(e){var t,a,i,r;e.target._lazybgset&&(a=(t=e.target)._lazybgset,(i=t.currentSrc||t.src)&&((r=g.fire(a,"bgsetproxy",{src:i,useSrc:s.test(i)?JSON.stringify(i):i})).defaultPrevented||(a.style.backgroundImage="url("+r.detail.useSrc+")")),t._lazybgsetLoading&&(g.fire(a,"_lazyloaded",{},!1,!0),delete t._lazybgsetLoading))},addEventListener("lazybeforeunveil",function(e){var t,a,i,r,s,n,l,d,o,u;!e.defaultPrevented&&(t=e.target.getAttribute("data-bgset"))&&(o=e.target,(u=z.createElement("img")).alt="",u._lazybgsetLoading=!0,e.detail.firesLoad=!0,a=t,i=o,r=u,s=z.createElement("picture"),n=i.getAttribute(c.sizesAttr),l=i.getAttribute("data-ratio"),d=i.getAttribute("data-optimumx"),i._lazybgset&&i._lazybgset.parentNode==i&&i.removeChild(i._lazybgset),Object.defineProperty(r,"_lazybgset",{value:i,writable:!0}),Object.defineProperty(i,"_lazybgset",{value:s,writable:!0}),a=a.replace(y," ").split(b),s.style.display="none",r.className=c.lazyClass,1!=a.length||n||(n="auto"),a.forEach(function(e){var t,a=z.createElement("source");n&&"auto"!=n&&a.setAttribute("sizes",n),(t=e.match(f))?(a.setAttribute(c.srcsetAttr,t[1]),v(a,t[2]),v(a,t[3])):a.setAttribute(c.srcsetAttr,e),s.appendChild(a)}),n&&(r.setAttribute(c.sizesAttr,n),i.removeAttribute(c.sizesAttr),i.removeAttribute("sizes")),d&&r.setAttribute("data-optimumx",d),l&&r.setAttribute("data-ratio",l),s.appendChild(r),i.appendChild(s),setTimeout(function(){g.loader.unveil(u),g.rAF(function(){g.fire(u,"_lazyloaded",{},!0,!0),u.complete&&m({target:u})})}))}),z.addEventListener("load",m,!0),e.addEventListener("lazybeforesizes",function(e){var t,a,i,r;e.detail.instance==g&&e.target._lazybgset&&e.detail.dataAttr&&(t=e.target._lazybgset,i=t,r=(getComputedStyle(i)||{getPropertyValue:function(){}}).getPropertyValue("background-size"),!n[r]&&n[i.style.backgroundSize]&&(r=i.style.backgroundSize),n[a=r]&&(e.target._lazysizesParentFit=a,g.rAF(function(){e.target.setAttribute("data-parent-fit",a),e.target._lazysizesParentFit&&delete e.target._lazysizesParentFit})))},!0),z.documentElement.addEventListener("lazybeforesizes",function(e){var t,a;!e.defaultPrevented&&e.target._lazybgset&&e.detail.instance==g&&(e.detail.width=(t=e.target._lazybgset,a=g.gW(t,t.parentNode),(!t._lazysizesWidth||a>t._lazysizesWidth)&&(t._lazysizesWidth=a),t._lazysizesWidth))}))});]]></Script>
    <Script path="lib/ls.respimg.min.js"><![CDATA[/*! lazysizes - v4.1.4 */
!function(a,b){var c=function(){b(a.lazySizes),a.removeEventListener("lazyunveilread",c,!0)};b=b.bind(null,a,a.document),"object"==typeof module&&module.exports?b(require("lazysizes"),require("../fix-ios-sizes/fix-ios-sizes")):a.lazySizes?c():a.addEventListener("lazyunveilread",c,!0)}(window,function(a,b,c){"use strict";var d,e=c&&c.cfg||a.lazySizesConfig,f=b.createElement("img"),g="sizes"in f&&"srcset"in f,h=/\s+\d+h/g,i=function(){var a=/\s+(\d+)(w|h)\s+(\d+)(w|h)/,c=Array.prototype.forEach;return function(){var d=b.createElement("img"),e=function(b){var c,d,e=b.getAttribute(lazySizesConfig.srcsetAttr);e&&((d=e.match(a))&&(c="w"==d[2]?d[1]/d[3]:d[3]/d[1],c&&b.setAttribute("data-aspectratio",c)),b.setAttribute(lazySizesConfig.srcsetAttr,e.replace(h,"")))},f=function(a){var b=a.target.parentNode;b&&"PICTURE"==b.nodeName&&c.call(b.getElementsByTagName("source"),e),e(a.target)},g=function(){d.currentSrc&&b.removeEventListener("lazybeforeunveil",f)};b.addEventListener("lazybeforeunveil",f),d.onload=g,d.onerror=g,d.srcset="data:,a 1w 1h",d.complete&&g()}}();if(e||(e={},a.lazySizesConfig=e),e.supportsType||(e.supportsType=function(a){return!a}),!a.picturefill&&!e.pf){if(a.HTMLPictureElement&&g)return b.msElementsFromPoint&&i(navigator.userAgent.match(/Edge\/(\d+)/)),void(e.pf=function(){});e.pf=function(b){var c,e;if(!a.picturefill)for(c=0,e=b.elements.length;e>c;c++)d(b.elements[c])},d=function(){var f=function(a,b){return a.w-b.w},i=/^\s*\d+\.*\d*px\s*$/,j=function(a){var b,c,d=a.length,e=a[d-1],f=0;for(f;d>f;f++)if(e=a[f],e.d=e.w/a.w,e.d>=a.d){!e.cached&&(b=a[f-1])&&b.d>a.d-.13*Math.pow(a.d,2.2)&&(c=Math.pow(b.d-.6,1.6),b.cached&&(b.d+=.15*c),b.d+(e.d-a.d)*c>a.d&&(e=b));break}return e},k=function(){var a,b=/(([^,\s].[^\s]+)\s+(\d+)w)/g,c=/\s/,d=function(b,c,d,e){a.push({c:c,u:d,w:1*e})};return function(e){return a=[],e=e.trim(),e.replace(h,"").replace(b,d),a.length||!e||c.test(e)||a.push({c:e,u:e,w:99}),a}}(),l=function(){l.init||(l.init=!0,addEventListener("resize",function(){var a,c=b.getElementsByClassName("lazymatchmedia"),e=function(){var a,b;for(a=0,b=c.length;b>a;a++)d(c[a])};return function(){clearTimeout(a),a=setTimeout(e,66)}}()))},m=function(b,d){var f,g=b.getAttribute("srcset")||b.getAttribute(e.srcsetAttr);!g&&d&&(g=b._lazypolyfill?b._lazypolyfill._set:b.getAttribute(e.srcAttr)||b.getAttribute("src")),b._lazypolyfill&&b._lazypolyfill._set==g||(f=k(g||""),d&&b.parentNode&&(f.isPicture="PICTURE"==b.parentNode.nodeName.toUpperCase(),f.isPicture&&a.matchMedia&&(c.aC(b,"lazymatchmedia"),l())),f._set=g,Object.defineProperty(b,"_lazypolyfill",{value:f,writable:!0}))},n=function(b){var d=a.devicePixelRatio||1,e=c.getX&&c.getX(b);return Math.min(e||d,2.5,d)},o=function(b){return a.matchMedia?(o=function(a){return!a||(matchMedia(a)||{}).matches})(b):!b},p=function(a){var b,d,g,h,k,l,p;if(h=a,m(h,!0),k=h._lazypolyfill,k.isPicture)for(d=0,b=a.parentNode.getElementsByTagName("source"),g=b.length;g>d;d++)if(e.supportsType(b[d].getAttribute("type"),a)&&o(b[d].getAttribute("media"))){h=b[d],m(h),k=h._lazypolyfill;break}return k.length>1?(p=h.getAttribute("sizes")||"",p=i.test(p)&&parseInt(p,10)||c.gW(a,a.parentNode),k.d=n(a),!k.src||!k.w||k.w<p?(k.w=p,l=j(k.sort(f)),k.src=l):l=k.src):l=k[0],l},q=function(a){if(!g||!a.parentNode||"PICTURE"==a.parentNode.nodeName.toUpperCase()){var b=p(a);b&&b.u&&a._lazypolyfill.cur!=b.u&&(a._lazypolyfill.cur=b.u,b.cached=!0,a.setAttribute(e.srcAttr,b.u),a.setAttribute("src",b.u))}};return q.parse=k,q}(),e.loadedClass&&e.loadingClass&&!function(){var a=[];['img[sizes$="px"][srcset].',"picture > img:not([srcset])."].forEach(function(b){a.push(b+e.loadedClass),a.push(b+e.loadingClass)}),e.pf({elements:b.querySelectorAll(a.join(", "))})}()}});]]></Script>
    <Script path="lib/photoswipe-ui-default.min.js"><![CDATA[/*! PhotoSwipe Default UI - 4.1.2 - 2017-04-05
* http://photoswipe.com
* Copyright (c) 2017 Dmitry Semenov; */
!function(a,b){"function"==typeof define&&define.amd?define(b):"object"==typeof exports?module.exports=b():a.PhotoSwipeUI_Default=b()}(this,function(){"use strict";var a=function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v=this,w=!1,x=!0,y=!0,z={barsSize:{top:44,bottom:"auto"},closeElClasses:["item","caption","zoom-wrap","ui","top-bar"],timeToIdle:4e3,timeToIdleOutside:1e3,loadingIndicatorDelay:1e3,addCaptionHTMLFn:function(a,b){return a.title?(b.children[0].innerHTML=a.title,!0):(b.children[0].innerHTML="",!1)},closeEl:!0,captionEl:!0,fullscreenEl:!0,zoomEl:!0,shareEl:!0,counterEl:!0,arrowEl:!0,preloaderEl:!0,tapToClose:!1,tapToToggleControls:!0,clickToCloseNonZoomable:!0,shareButtons:[{id:"facebook",label:"Share on Facebook",url:"https://www.facebook.com/sharer/sharer.php?u={{url}}"},{id:"twitter",label:"Tweet",url:"https://twitter.com/intent/tweet?text={{text}}&url={{url}}"},{id:"pinterest",label:"Pin it",url:"http://www.pinterest.com/pin/create/button/?url={{url}}&media={{image_url}}&description={{text}}"},{id:"download",label:"Download image",url:"{{raw_image_url}}",download:!0}],getImageURLForShare:function(){return a.currItem.src||""},getPageURLForShare:function(){return window.location.href},getTextForShare:function(){return a.currItem.title||""},indexIndicatorSep:" / ",fitControlsWidth:1200},A=function(a){if(r)return!0;a=a||window.event,q.timeToIdle&&q.mouseUsed&&!k&&K();for(var c,d,e=a.target||a.srcElement,f=e.getAttribute("class")||"",g=0;g<S.length;g++)c=S[g],c.onTap&&f.indexOf("pswp__"+c.name)>-1&&(c.onTap(),d=!0);if(d){a.stopPropagation&&a.stopPropagation(),r=!0;var h=b.features.isOldAndroid?600:30;s=setTimeout(function(){r=!1},h)}},B=function(){return!a.likelyTouchDevice||q.mouseUsed||screen.width>q.fitControlsWidth},C=function(a,c,d){b[(d?"add":"remove")+"Class"](a,"pswp__"+c)},D=function(){var a=1===q.getNumItemsFn();a!==p&&(C(d,"ui--one-slide",a),p=a)},E=function(){C(i,"share-modal--hidden",y)},F=function(){return y=!y,y?(b.removeClass(i,"pswp__share-modal--fade-in"),setTimeout(function(){y&&E()},300)):(E(),setTimeout(function(){y||b.addClass(i,"pswp__share-modal--fade-in")},30)),y||H(),!1},G=function(b){b=b||window.event;var c=b.target||b.srcElement;return a.shout("shareLinkClick",b,c),!!c.href&&(!!c.hasAttribute("download")||(window.open(c.href,"pswp_share","scrollbars=yes,resizable=yes,toolbar=no,location=yes,width=550,height=420,top=100,left="+(window.screen?Math.round(screen.width/2-275):100)),y||F(),!1))},H=function(){for(var a,b,c,d,e,f="",g=0;g<q.shareButtons.length;g++)a=q.shareButtons[g],c=q.getImageURLForShare(a),d=q.getPageURLForShare(a),e=q.getTextForShare(a),b=a.url.replace("{{url}}",encodeURIComponent(d)).replace("{{image_url}}",encodeURIComponent(c)).replace("{{raw_image_url}}",c).replace("{{text}}",encodeURIComponent(e)),f+='<a href="'+b+'" target="_blank" class="pswp__share--'+a.id+'"'+(a.download?"download":"")+">"+a.label+"</a>",q.parseShareButtonOut&&(f=q.parseShareButtonOut(a,f));i.children[0].innerHTML=f,i.children[0].onclick=G},I=function(a){for(var c=0;c<q.closeElClasses.length;c++)if(b.hasClass(a,"pswp__"+q.closeElClasses[c]))return!0},J=0,K=function(){clearTimeout(u),J=0,k&&v.setIdle(!1)},L=function(a){a=a?a:window.event;var b=a.relatedTarget||a.toElement;b&&"HTML"!==b.nodeName||(clearTimeout(u),u=setTimeout(function(){v.setIdle(!0)},q.timeToIdleOutside))},M=function(){q.fullscreenEl&&!b.features.isOldAndroid&&(c||(c=v.getFullscreenAPI()),c?(b.bind(document,c.eventK,v.updateFullscreen),v.updateFullscreen(),b.addClass(a.template,"pswp--supports-fs")):b.removeClass(a.template,"pswp--supports-fs"))},N=function(){q.preloaderEl&&(O(!0),l("beforeChange",function(){clearTimeout(o),o=setTimeout(function(){a.currItem&&a.currItem.loading?(!a.allowProgressiveImg()||a.currItem.img&&!a.currItem.img.naturalWidth)&&O(!1):O(!0)},q.loadingIndicatorDelay)}),l("imageLoadComplete",function(b,c){a.currItem===c&&O(!0)}))},O=function(a){n!==a&&(C(m,"preloader--active",!a),n=a)},P=function(a){var c=a.vGap;if(B()){var g=q.barsSize;if(q.captionEl&&"auto"===g.bottom)if(f||(f=b.createEl("pswp__caption pswp__caption--fake"),f.appendChild(b.createEl("pswp__caption__center")),d.insertBefore(f,e),b.addClass(d,"pswp__ui--fit")),q.addCaptionHTMLFn(a,f,!0)){var h=f.clientHeight;c.bottom=parseInt(h,10)||44}else c.bottom=g.top;else c.bottom="auto"===g.bottom?0:g.bottom;c.top=g.top}else c.top=c.bottom=0},Q=function(){q.timeToIdle&&l("mouseUsed",function(){b.bind(document,"mousemove",K),b.bind(document,"mouseout",L),t=setInterval(function(){J++,2===J&&v.setIdle(!0)},q.timeToIdle/2)})},R=function(){l("onVerticalDrag",function(a){x&&a<.95?v.hideControls():!x&&a>=.95&&v.showControls()});var a;l("onPinchClose",function(b){x&&b<.9?(v.hideControls(),a=!0):a&&!x&&b>.9&&v.showControls()}),l("zoomGestureEnded",function(){a=!1,a&&!x&&v.showControls()})},S=[{name:"caption",option:"captionEl",onInit:function(a){e=a}},{name:"share-modal",option:"shareEl",onInit:function(a){i=a},onTap:function(){F()}},{name:"button--share",option:"shareEl",onInit:function(a){h=a},onTap:function(){F()}},{name:"button--zoom",option:"zoomEl",onTap:a.toggleDesktopZoom},{name:"counter",option:"counterEl",onInit:function(a){g=a}},{name:"button--close",option:"closeEl",onTap:a.close},{name:"button--arrow--left",option:"arrowEl",onTap:a.prev},{name:"button--arrow--right",option:"arrowEl",onTap:a.next},{name:"button--fs",option:"fullscreenEl",onTap:function(){c.isFullscreen()?c.exit():c.enter()}},{name:"preloader",option:"preloaderEl",onInit:function(a){m=a}}],T=function(){var a,c,e,f=function(d){if(d)for(var f=d.length,g=0;g<f;g++){a=d[g],c=a.className;for(var h=0;h<S.length;h++)e=S[h],c.indexOf("pswp__"+e.name)>-1&&(q[e.option]?(b.removeClass(a,"pswp__element--disabled"),e.onInit&&e.onInit(a)):b.addClass(a,"pswp__element--disabled"))}};f(d.children);var g=b.getChildByClass(d,"pswp__top-bar");g&&f(g.children)};v.init=function(){b.extend(a.options,z,!0),q=a.options,d=b.getChildByClass(a.scrollWrap,"pswp__ui"),l=a.listen,R(),l("beforeChange",v.update),l("doubleTap",function(b){var c=a.currItem.initialZoomLevel;a.getZoomLevel()!==c?a.zoomTo(c,b,333):a.zoomTo(q.getDoubleTapZoom(!1,a.currItem),b,333)}),l("preventDragEvent",function(a,b,c){var d=a.target||a.srcElement;d&&d.getAttribute("class")&&a.type.indexOf("mouse")>-1&&(d.getAttribute("class").indexOf("__caption")>0||/(SMALL|STRONG|EM)/i.test(d.tagName))&&(c.prevent=!1)}),l("bindEvents",function(){b.bind(d,"pswpTap click",A),b.bind(a.scrollWrap,"pswpTap",v.onGlobalTap),a.likelyTouchDevice||b.bind(a.scrollWrap,"mouseover",v.onMouseOver)}),l("unbindEvents",function(){y||F(),t&&clearInterval(t),b.unbind(document,"mouseout",L),b.unbind(document,"mousemove",K),b.unbind(d,"pswpTap click",A),b.unbind(a.scrollWrap,"pswpTap",v.onGlobalTap),b.unbind(a.scrollWrap,"mouseover",v.onMouseOver),c&&(b.unbind(document,c.eventK,v.updateFullscreen),c.isFullscreen()&&(q.hideAnimationDuration=0,c.exit()),c=null)}),l("destroy",function(){q.captionEl&&(f&&d.removeChild(f),b.removeClass(e,"pswp__caption--empty")),i&&(i.children[0].onclick=null),b.removeClass(d,"pswp__ui--over-close"),b.addClass(d,"pswp__ui--hidden"),v.setIdle(!1)}),q.showAnimationDuration||b.removeClass(d,"pswp__ui--hidden"),l("initialZoomIn",function(){q.showAnimationDuration&&b.removeClass(d,"pswp__ui--hidden")}),l("initialZoomOut",function(){b.addClass(d,"pswp__ui--hidden")}),l("parseVerticalMargin",P),T(),q.shareEl&&h&&i&&(y=!0),D(),Q(),M(),N()},v.setIdle=function(a){k=a,C(d,"ui--idle",a)},v.update=function(){x&&a.currItem?(v.updateIndexIndicator(),q.captionEl&&(q.addCaptionHTMLFn(a.currItem,e),C(e,"caption--empty",!a.currItem.title)),w=!0):w=!1,y||F(),D()},v.updateFullscreen=function(d){d&&setTimeout(function(){a.setScrollOffset(0,b.getScrollY())},50),b[(c.isFullscreen()?"add":"remove")+"Class"](a.template,"pswp--fs")},v.updateIndexIndicator=function(){q.counterEl&&(g.innerHTML=a.getCurrentIndex()+1+q.indexIndicatorSep+q.getNumItemsFn())},v.onGlobalTap=function(c){c=c||window.event;var d=c.target||c.srcElement;if(!r)if(c.detail&&"mouse"===c.detail.pointerType){if(I(d))return void a.close();b.hasClass(d,"pswp__img")&&(1===a.getZoomLevel()&&a.getZoomLevel()<=a.currItem.fitRatio?q.clickToCloseNonZoomable&&a.close():a.toggleDesktopZoom(c.detail.releasePoint))}else if(q.tapToToggleControls&&(x?v.hideControls():v.showControls()),q.tapToClose&&(b.hasClass(d,"pswp__img")||I(d)))return void a.close()},v.onMouseOver=function(a){a=a||window.event;var b=a.target||a.srcElement;C(d,"ui--over-close",I(b))},v.hideControls=function(){b.addClass(d,"pswp__ui--hidden"),x=!1},v.showControls=function(){x=!0,w||v.update(),b.removeClass(d,"pswp__ui--hidden")},v.supportsFullscreen=function(){var a=document;return!!(a.exitFullscreen||a.mozCancelFullScreen||a.webkitExitFullscreen||a.msExitFullscreen)},v.getFullscreenAPI=function(){var b,c=document.documentElement,d="fullscreenchange";return c.requestFullscreen?b={enterK:"requestFullscreen",exitK:"exitFullscreen",elementK:"fullscreenElement",eventK:d}:c.mozRequestFullScreen?b={enterK:"mozRequestFullScreen",exitK:"mozCancelFullScreen",elementK:"mozFullScreenElement",eventK:"moz"+d}:c.webkitRequestFullscreen?b={enterK:"webkitRequestFullscreen",exitK:"webkitExitFullscreen",elementK:"webkitFullscreenElement",eventK:"webkit"+d}:c.msRequestFullscreen&&(b={enterK:"msRequestFullscreen",exitK:"msExitFullscreen",elementK:"msFullscreenElement",eventK:"MSFullscreenChange"}),b&&(b.enter=function(){return j=q.closeOnScroll,q.closeOnScroll=!1,"webkitRequestFullscreen"!==this.enterK?a.template[this.enterK]():void a.template[this.enterK](Element.ALLOW_KEYBOARD_INPUT)},b.exit=function(){return q.closeOnScroll=j,document[this.exitK]()},b.isFullscreen=function(){return document[this.elementK]}),b}};return a});]]></Script>
    <Script path="lib/photoswipe.min.js"><![CDATA[/*! PhotoSwipe - v4.1.2 - 2017-04-05
* http://photoswipe.com
* Copyright (c) 2017 Dmitry Semenov; */
!function(a,b){"function"==typeof define&&define.amd?define(b):"object"==typeof exports?module.exports=b():a.PhotoSwipe=b()}(this,function(){"use strict";var a=function(a,b,c,d){var e={features:null,bind:function(a,b,c,d){var e=(d?"remove":"add")+"EventListener";b=b.split(" ");for(var f=0;f<b.length;f++)b[f]&&a[e](b[f],c,!1)},isArray:function(a){return a instanceof Array},createEl:function(a,b){var c=document.createElement(b||"div");return a&&(c.className=a),c},getScrollY:function(){var a=window.pageYOffset;return void 0!==a?a:document.documentElement.scrollTop},unbind:function(a,b,c){e.bind(a,b,c,!0)},removeClass:function(a,b){var c=new RegExp("(\\s|^)"+b+"(\\s|$)");a.className=a.className.replace(c," ").replace(/^\s\s*/,"").replace(/\s\s*$/,"")},addClass:function(a,b){e.hasClass(a,b)||(a.className+=(a.className?" ":"")+b)},hasClass:function(a,b){return a.className&&new RegExp("(^|\\s)"+b+"(\\s|$)").test(a.className)},getChildByClass:function(a,b){for(var c=a.firstChild;c;){if(e.hasClass(c,b))return c;c=c.nextSibling}},arraySearch:function(a,b,c){for(var d=a.length;d--;)if(a[d][c]===b)return d;return-1},extend:function(a,b,c){for(var d in b)if(b.hasOwnProperty(d)){if(c&&a.hasOwnProperty(d))continue;a[d]=b[d]}},easing:{sine:{out:function(a){return Math.sin(a*(Math.PI/2))},inOut:function(a){return-(Math.cos(Math.PI*a)-1)/2}},cubic:{out:function(a){return--a*a*a+1}}},detectFeatures:function(){if(e.features)return e.features;var a=e.createEl(),b=a.style,c="",d={};if(d.oldIE=document.all&&!document.addEventListener,d.touch="ontouchstart"in window,window.requestAnimationFrame&&(d.raf=window.requestAnimationFrame,d.caf=window.cancelAnimationFrame),d.pointerEvent=navigator.pointerEnabled||navigator.msPointerEnabled,!d.pointerEvent){var f=navigator.userAgent;if(/iP(hone|od)/.test(navigator.platform)){var g=navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);g&&g.length>0&&(g=parseInt(g[1],10),g>=1&&g<8&&(d.isOldIOSPhone=!0))}var h=f.match(/Android\s([0-9\.]*)/),i=h?h[1]:0;i=parseFloat(i),i>=1&&(i<4.4&&(d.isOldAndroid=!0),d.androidVersion=i),d.isMobileOpera=/opera mini|opera mobi/i.test(f)}for(var j,k,l=["transform","perspective","animationName"],m=["","webkit","Moz","ms","O"],n=0;n<4;n++){c=m[n];for(var o=0;o<3;o++)j=l[o],k=c+(c?j.charAt(0).toUpperCase()+j.slice(1):j),!d[j]&&k in b&&(d[j]=k);c&&!d.raf&&(c=c.toLowerCase(),d.raf=window[c+"RequestAnimationFrame"],d.raf&&(d.caf=window[c+"CancelAnimationFrame"]||window[c+"CancelRequestAnimationFrame"]))}if(!d.raf){var p=0;d.raf=function(a){var b=(new Date).getTime(),c=Math.max(0,16-(b-p)),d=window.setTimeout(function(){a(b+c)},c);return p=b+c,d},d.caf=function(a){clearTimeout(a)}}return d.svg=!!document.createElementNS&&!!document.createElementNS("http://www.w3.org/2000/svg","svg").createSVGRect,e.features=d,d}};e.detectFeatures(),e.features.oldIE&&(e.bind=function(a,b,c,d){b=b.split(" ");for(var e,f=(d?"detach":"attach")+"Event",g=function(){c.handleEvent.call(c)},h=0;h<b.length;h++)if(e=b[h])if("object"==typeof c&&c.handleEvent){if(d){if(!c["oldIE"+e])return!1}else c["oldIE"+e]=g;a[f]("on"+e,c["oldIE"+e])}else a[f]("on"+e,c)});var f=this,g=25,h=3,i={allowPanToNext:!0,spacing:.12,bgOpacity:1,mouseUsed:!1,loop:!0,pinchToClose:!0,closeOnScroll:!0,closeOnVerticalDrag:!0,verticalDragRange:.75,hideAnimationDuration:333,showAnimationDuration:333,showHideOpacity:!1,focus:!0,escKey:!0,arrowKeys:!0,mainScrollEndFriction:.35,panEndFriction:.35,isClickableElement:function(a){return"A"===a.tagName},getDoubleTapZoom:function(a,b){return a?1:b.initialZoomLevel<.7?1:1.33},maxSpreadZoom:1.33,modal:!0,scaleMode:"fit"};e.extend(i,d);var j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,_,aa,ba,ca,da,ea,fa,ga,ha,ia,ja,ka,la,ma=function(){return{x:0,y:0}},na=ma(),oa=ma(),pa=ma(),qa={},ra=0,sa={},ta=ma(),ua=0,va=!0,wa=[],xa={},ya=!1,za=function(a,b){e.extend(f,b.publicMethods),wa.push(a)},Aa=function(a){var b=ac();return a>b-1?a-b:a<0?b+a:a},Ba={},Ca=function(a,b){return Ba[a]||(Ba[a]=[]),Ba[a].push(b)},Da=function(a){var b=Ba[a];if(b){var c=Array.prototype.slice.call(arguments);c.shift();for(var d=0;d<b.length;d++)b[d].apply(f,c)}},Ea=function(){return(new Date).getTime()},Fa=function(a){ja=a,f.bg.style.opacity=a*i.bgOpacity},Ga=function(a,b,c,d,e){(!ya||e&&e!==f.currItem)&&(d/=e?e.fitRatio:f.currItem.fitRatio),a[E]=u+b+"px, "+c+"px"+v+" scale("+d+")"},Ha=function(a){ea&&(a&&(s>f.currItem.fitRatio?ya||(mc(f.currItem,!1,!0),ya=!0):ya&&(mc(f.currItem),ya=!1)),Ga(ea,pa.x,pa.y,s))},Ia=function(a){a.container&&Ga(a.container.style,a.initialPosition.x,a.initialPosition.y,a.initialZoomLevel,a)},Ja=function(a,b){b[E]=u+a+"px, 0px"+v},Ka=function(a,b){if(!i.loop&&b){var c=m+(ta.x*ra-a)/ta.x,d=Math.round(a-tb.x);(c<0&&d>0||c>=ac()-1&&d<0)&&(a=tb.x+d*i.mainScrollEndFriction)}tb.x=a,Ja(a,n)},La=function(a,b){var c=ub[a]-sa[a];return oa[a]+na[a]+c-c*(b/t)},Ma=function(a,b){a.x=b.x,a.y=b.y,b.id&&(a.id=b.id)},Na=function(a){a.x=Math.round(a.x),a.y=Math.round(a.y)},Oa=null,Pa=function(){Oa&&(e.unbind(document,"mousemove",Pa),e.addClass(a,"pswp--has_mouse"),i.mouseUsed=!0,Da("mouseUsed")),Oa=setTimeout(function(){Oa=null},100)},Qa=function(){e.bind(document,"keydown",f),N.transform&&e.bind(f.scrollWrap,"click",f),i.mouseUsed||e.bind(document,"mousemove",Pa),e.bind(window,"resize scroll orientationchange",f),Da("bindEvents")},Ra=function(){e.unbind(window,"resize scroll orientationchange",f),e.unbind(window,"scroll",r.scroll),e.unbind(document,"keydown",f),e.unbind(document,"mousemove",Pa),N.transform&&e.unbind(f.scrollWrap,"click",f),V&&e.unbind(window,p,f),clearTimeout(O),Da("unbindEvents")},Sa=function(a,b){var c=ic(f.currItem,qa,a);return b&&(da=c),c},Ta=function(a){return a||(a=f.currItem),a.initialZoomLevel},Ua=function(a){return a||(a=f.currItem),a.w>0?i.maxSpreadZoom:1},Va=function(a,b,c,d){return d===f.currItem.initialZoomLevel?(c[a]=f.currItem.initialPosition[a],!0):(c[a]=La(a,d),c[a]>b.min[a]?(c[a]=b.min[a],!0):c[a]<b.max[a]&&(c[a]=b.max[a],!0))},Wa=function(){if(E){var b=N.perspective&&!G;return u="translate"+(b?"3d(":"("),void(v=N.perspective?", 0px)":")")}E="left",e.addClass(a,"pswp--ie"),Ja=function(a,b){b.left=a+"px"},Ia=function(a){var b=a.fitRatio>1?1:a.fitRatio,c=a.container.style,d=b*a.w,e=b*a.h;c.width=d+"px",c.height=e+"px",c.left=a.initialPosition.x+"px",c.top=a.initialPosition.y+"px"},Ha=function(){if(ea){var a=ea,b=f.currItem,c=b.fitRatio>1?1:b.fitRatio,d=c*b.w,e=c*b.h;a.width=d+"px",a.height=e+"px",a.left=pa.x+"px",a.top=pa.y+"px"}}},Xa=function(a){var b="";i.escKey&&27===a.keyCode?b="close":i.arrowKeys&&(37===a.keyCode?b="prev":39===a.keyCode&&(b="next")),b&&(a.ctrlKey||a.altKey||a.shiftKey||a.metaKey||(a.preventDefault?a.preventDefault():a.returnValue=!1,f[b]()))},Ya=function(a){a&&(Y||X||fa||T)&&(a.preventDefault(),a.stopPropagation())},Za=function(){f.setScrollOffset(0,e.getScrollY())},$a={},_a=0,ab=function(a){$a[a]&&($a[a].raf&&I($a[a].raf),_a--,delete $a[a])},bb=function(a){$a[a]&&ab(a),$a[a]||(_a++,$a[a]={})},cb=function(){for(var a in $a)$a.hasOwnProperty(a)&&ab(a)},db=function(a,b,c,d,e,f,g){var h,i=Ea();bb(a);var j=function(){if($a[a]){if(h=Ea()-i,h>=d)return ab(a),f(c),void(g&&g());f((c-b)*e(h/d)+b),$a[a].raf=H(j)}};j()},eb={shout:Da,listen:Ca,viewportSize:qa,options:i,isMainScrollAnimating:function(){return fa},getZoomLevel:function(){return s},getCurrentIndex:function(){return m},isDragging:function(){return V},isZooming:function(){return aa},setScrollOffset:function(a,b){sa.x=a,M=sa.y=b,Da("updateScrollOffset",sa)},applyZoomPan:function(a,b,c,d){pa.x=b,pa.y=c,s=a,Ha(d)},init:function(){if(!j&&!k){var c;f.framework=e,f.template=a,f.bg=e.getChildByClass(a,"pswp__bg"),J=a.className,j=!0,N=e.detectFeatures(),H=N.raf,I=N.caf,E=N.transform,L=N.oldIE,f.scrollWrap=e.getChildByClass(a,"pswp__scroll-wrap"),f.container=e.getChildByClass(f.scrollWrap,"pswp__container"),n=f.container.style,f.itemHolders=y=[{el:f.container.children[0],wrap:0,index:-1},{el:f.container.children[1],wrap:0,index:-1},{el:f.container.children[2],wrap:0,index:-1}],y[0].el.style.display=y[2].el.style.display="none",Wa(),r={resize:f.updateSize,orientationchange:function(){clearTimeout(O),O=setTimeout(function(){qa.x!==f.scrollWrap.clientWidth&&f.updateSize()},500)},scroll:Za,keydown:Xa,click:Ya};var d=N.isOldIOSPhone||N.isOldAndroid||N.isMobileOpera;for(N.animationName&&N.transform&&!d||(i.showAnimationDuration=i.hideAnimationDuration=0),c=0;c<wa.length;c++)f["init"+wa[c]]();if(b){var g=f.ui=new b(f,e);g.init()}Da("firstUpdate"),m=m||i.index||0,(isNaN(m)||m<0||m>=ac())&&(m=0),f.currItem=_b(m),(N.isOldIOSPhone||N.isOldAndroid)&&(va=!1),a.setAttribute("aria-hidden","false"),i.modal&&(va?a.style.position="fixed":(a.style.position="absolute",a.style.top=e.getScrollY()+"px")),void 0===M&&(Da("initialLayout"),M=K=e.getScrollY());var l="pswp--open ";for(i.mainClass&&(l+=i.mainClass+" "),i.showHideOpacity&&(l+="pswp--animate_opacity "),l+=G?"pswp--touch":"pswp--notouch",l+=N.animationName?" pswp--css_animation":"",l+=N.svg?" pswp--svg":"",e.addClass(a,l),f.updateSize(),o=-1,ua=null,c=0;c<h;c++)Ja((c+o)*ta.x,y[c].el.style);L||e.bind(f.scrollWrap,q,f),Ca("initialZoomInEnd",function(){f.setContent(y[0],m-1),f.setContent(y[2],m+1),y[0].el.style.display=y[2].el.style.display="block",i.focus&&a.focus(),Qa()}),f.setContent(y[1],m),f.updateCurrItem(),Da("afterInit"),va||(w=setInterval(function(){_a||V||aa||s!==f.currItem.initialZoomLevel||f.updateSize()},1e3)),e.addClass(a,"pswp--visible")}},close:function(){j&&(j=!1,k=!0,Da("close"),Ra(),cc(f.currItem,null,!0,f.destroy))},destroy:function(){Da("destroy"),Xb&&clearTimeout(Xb),a.setAttribute("aria-hidden","true"),a.className=J,w&&clearInterval(w),e.unbind(f.scrollWrap,q,f),e.unbind(window,"scroll",f),zb(),cb(),Ba=null},panTo:function(a,b,c){c||(a>da.min.x?a=da.min.x:a<da.max.x&&(a=da.max.x),b>da.min.y?b=da.min.y:b<da.max.y&&(b=da.max.y)),pa.x=a,pa.y=b,Ha()},handleEvent:function(a){a=a||window.event,r[a.type]&&r[a.type](a)},goTo:function(a){a=Aa(a);var b=a-m;ua=b,m=a,f.currItem=_b(m),ra-=b,Ka(ta.x*ra),cb(),fa=!1,f.updateCurrItem()},next:function(){f.goTo(m+1)},prev:function(){f.goTo(m-1)},updateCurrZoomItem:function(a){if(a&&Da("beforeChange",0),y[1].el.children.length){var b=y[1].el.children[0];ea=e.hasClass(b,"pswp__zoom-wrap")?b.style:null}else ea=null;da=f.currItem.bounds,t=s=f.currItem.initialZoomLevel,pa.x=da.center.x,pa.y=da.center.y,a&&Da("afterChange")},invalidateCurrItems:function(){x=!0;for(var a=0;a<h;a++)y[a].item&&(y[a].item.needsUpdate=!0)},updateCurrItem:function(a){if(0!==ua){var b,c=Math.abs(ua);if(!(a&&c<2)){f.currItem=_b(m),ya=!1,Da("beforeChange",ua),c>=h&&(o+=ua+(ua>0?-h:h),c=h);for(var d=0;d<c;d++)ua>0?(b=y.shift(),y[h-1]=b,o++,Ja((o+2)*ta.x,b.el.style),f.setContent(b,m-c+d+1+1)):(b=y.pop(),y.unshift(b),o--,Ja(o*ta.x,b.el.style),f.setContent(b,m+c-d-1-1));if(ea&&1===Math.abs(ua)){var e=_b(z);e.initialZoomLevel!==s&&(ic(e,qa),mc(e),Ia(e))}ua=0,f.updateCurrZoomItem(),z=m,Da("afterChange")}}},updateSize:function(b){if(!va&&i.modal){var c=e.getScrollY();if(M!==c&&(a.style.top=c+"px",M=c),!b&&xa.x===window.innerWidth&&xa.y===window.innerHeight)return;xa.x=window.innerWidth,xa.y=window.innerHeight,a.style.height=xa.y+"px"}if(qa.x=f.scrollWrap.clientWidth,qa.y=f.scrollWrap.clientHeight,Za(),ta.x=qa.x+Math.round(qa.x*i.spacing),ta.y=qa.y,Ka(ta.x*ra),Da("beforeResize"),void 0!==o){for(var d,g,j,k=0;k<h;k++)d=y[k],Ja((k+o)*ta.x,d.el.style),j=m+k-1,i.loop&&ac()>2&&(j=Aa(j)),g=_b(j),g&&(x||g.needsUpdate||!g.bounds)?(f.cleanSlide(g),f.setContent(d,j),1===k&&(f.currItem=g,f.updateCurrZoomItem(!0)),g.needsUpdate=!1):d.index===-1&&j>=0&&f.setContent(d,j),g&&g.container&&(ic(g,qa),mc(g),Ia(g));x=!1}t=s=f.currItem.initialZoomLevel,da=f.currItem.bounds,da&&(pa.x=da.center.x,pa.y=da.center.y,Ha(!0)),Da("resize")},zoomTo:function(a,b,c,d,f){b&&(t=s,ub.x=Math.abs(b.x)-pa.x,ub.y=Math.abs(b.y)-pa.y,Ma(oa,pa));var g=Sa(a,!1),h={};Va("x",g,h,a),Va("y",g,h,a);var i=s,j={x:pa.x,y:pa.y};Na(h);var k=function(b){1===b?(s=a,pa.x=h.x,pa.y=h.y):(s=(a-i)*b+i,pa.x=(h.x-j.x)*b+j.x,pa.y=(h.y-j.y)*b+j.y),f&&f(b),Ha(1===b)};c?db("customZoomTo",0,1,c,d||e.easing.sine.inOut,k):k(1)}},fb=30,gb=10,hb={},ib={},jb={},kb={},lb={},mb=[],nb={},ob=[],pb={},qb=0,rb=ma(),sb=0,tb=ma(),ub=ma(),vb=ma(),wb=function(a,b){return a.x===b.x&&a.y===b.y},xb=function(a,b){return Math.abs(a.x-b.x)<g&&Math.abs(a.y-b.y)<g},yb=function(a,b){return pb.x=Math.abs(a.x-b.x),pb.y=Math.abs(a.y-b.y),Math.sqrt(pb.x*pb.x+pb.y*pb.y)},zb=function(){Z&&(I(Z),Z=null)},Ab=function(){V&&(Z=H(Ab),Qb())},Bb=function(){return!("fit"===i.scaleMode&&s===f.currItem.initialZoomLevel)},Cb=function(a,b){return!(!a||a===document)&&(!(a.getAttribute("class")&&a.getAttribute("class").indexOf("pswp__scroll-wrap")>-1)&&(b(a)?a:Cb(a.parentNode,b)))},Db={},Eb=function(a,b){return Db.prevent=!Cb(a.target,i.isClickableElement),Da("preventDragEvent",a,b,Db),Db.prevent},Fb=function(a,b){return b.x=a.pageX,b.y=a.pageY,b.id=a.identifier,b},Gb=function(a,b,c){c.x=.5*(a.x+b.x),c.y=.5*(a.y+b.y)},Hb=function(a,b,c){if(a-Q>50){var d=ob.length>2?ob.shift():{};d.x=b,d.y=c,ob.push(d),Q=a}},Ib=function(){var a=pa.y-f.currItem.initialPosition.y;return 1-Math.abs(a/(qa.y/2))},Jb={},Kb={},Lb=[],Mb=function(a){for(;Lb.length>0;)Lb.pop();return F?(la=0,mb.forEach(function(a){0===la?Lb[0]=a:1===la&&(Lb[1]=a),la++})):a.type.indexOf("touch")>-1?a.touches&&a.touches.length>0&&(Lb[0]=Fb(a.touches[0],Jb),a.touches.length>1&&(Lb[1]=Fb(a.touches[1],Kb))):(Jb.x=a.pageX,Jb.y=a.pageY,Jb.id="",Lb[0]=Jb),Lb},Nb=function(a,b){var c,d,e,g,h=0,j=pa[a]+b[a],k=b[a]>0,l=tb.x+b.x,m=tb.x-nb.x;return c=j>da.min[a]||j<da.max[a]?i.panEndFriction:1,j=pa[a]+b[a]*c,!i.allowPanToNext&&s!==f.currItem.initialZoomLevel||(ea?"h"!==ga||"x"!==a||X||(k?(j>da.min[a]&&(c=i.panEndFriction,h=da.min[a]-j,d=da.min[a]-oa[a]),(d<=0||m<0)&&ac()>1?(g=l,m<0&&l>nb.x&&(g=nb.x)):da.min.x!==da.max.x&&(e=j)):(j<da.max[a]&&(c=i.panEndFriction,h=j-da.max[a],d=oa[a]-da.max[a]),(d<=0||m>0)&&ac()>1?(g=l,m>0&&l<nb.x&&(g=nb.x)):da.min.x!==da.max.x&&(e=j))):g=l,"x"!==a)?void(fa||$||s>f.currItem.fitRatio&&(pa[a]+=b[a]*c)):(void 0!==g&&(Ka(g,!0),$=g!==nb.x),da.min.x!==da.max.x&&(void 0!==e?pa.x=e:$||(pa.x+=b.x*c)),void 0!==g)},Ob=function(a){if(!("mousedown"===a.type&&a.button>0)){if($b)return void a.preventDefault();if(!U||"mousedown"!==a.type){if(Eb(a,!0)&&a.preventDefault(),Da("pointerDown"),F){var b=e.arraySearch(mb,a.pointerId,"id");b<0&&(b=mb.length),mb[b]={x:a.pageX,y:a.pageY,id:a.pointerId}}var c=Mb(a),d=c.length;_=null,cb(),V&&1!==d||(V=ha=!0,e.bind(window,p,f),S=ka=ia=T=$=Y=W=X=!1,ga=null,Da("firstTouchStart",c),Ma(oa,pa),na.x=na.y=0,Ma(kb,c[0]),Ma(lb,kb),nb.x=ta.x*ra,ob=[{x:kb.x,y:kb.y}],Q=P=Ea(),Sa(s,!0),zb(),Ab()),!aa&&d>1&&!fa&&!$&&(t=s,X=!1,aa=W=!0,na.y=na.x=0,Ma(oa,pa),Ma(hb,c[0]),Ma(ib,c[1]),Gb(hb,ib,vb),ub.x=Math.abs(vb.x)-pa.x,ub.y=Math.abs(vb.y)-pa.y,ba=ca=yb(hb,ib))}}},Pb=function(a){if(a.preventDefault(),F){var b=e.arraySearch(mb,a.pointerId,"id");if(b>-1){var c=mb[b];c.x=a.pageX,c.y=a.pageY}}if(V){var d=Mb(a);if(ga||Y||aa)_=d;else if(tb.x!==ta.x*ra)ga="h";else{var f=Math.abs(d[0].x-kb.x)-Math.abs(d[0].y-kb.y);Math.abs(f)>=gb&&(ga=f>0?"h":"v",_=d)}}},Qb=function(){if(_){var a=_.length;if(0!==a)if(Ma(hb,_[0]),jb.x=hb.x-kb.x,jb.y=hb.y-kb.y,aa&&a>1){if(kb.x=hb.x,kb.y=hb.y,!jb.x&&!jb.y&&wb(_[1],ib))return;Ma(ib,_[1]),X||(X=!0,Da("zoomGestureStarted"));var b=yb(hb,ib),c=Vb(b);c>f.currItem.initialZoomLevel+f.currItem.initialZoomLevel/15&&(ka=!0);var d=1,e=Ta(),g=Ua();if(c<e)if(i.pinchToClose&&!ka&&t<=f.currItem.initialZoomLevel){var h=e-c,j=1-h/(e/1.2);Fa(j),Da("onPinchClose",j),ia=!0}else d=(e-c)/e,d>1&&(d=1),c=e-d*(e/3);else c>g&&(d=(c-g)/(6*e),d>1&&(d=1),c=g+d*e);d<0&&(d=0),ba=b,Gb(hb,ib,rb),na.x+=rb.x-vb.x,na.y+=rb.y-vb.y,Ma(vb,rb),pa.x=La("x",c),pa.y=La("y",c),S=c>s,s=c,Ha()}else{if(!ga)return;if(ha&&(ha=!1,Math.abs(jb.x)>=gb&&(jb.x-=_[0].x-lb.x),Math.abs(jb.y)>=gb&&(jb.y-=_[0].y-lb.y)),kb.x=hb.x,kb.y=hb.y,0===jb.x&&0===jb.y)return;if("v"===ga&&i.closeOnVerticalDrag&&!Bb()){na.y+=jb.y,pa.y+=jb.y;var k=Ib();return T=!0,Da("onVerticalDrag",k),Fa(k),void Ha()}Hb(Ea(),hb.x,hb.y),Y=!0,da=f.currItem.bounds;var l=Nb("x",jb);l||(Nb("y",jb),Na(pa),Ha())}}},Rb=function(a){if(N.isOldAndroid){if(U&&"mouseup"===a.type)return;a.type.indexOf("touch")>-1&&(clearTimeout(U),U=setTimeout(function(){U=0},600))}Da("pointerUp"),Eb(a,!1)&&a.preventDefault();var b;if(F){var c=e.arraySearch(mb,a.pointerId,"id");if(c>-1)if(b=mb.splice(c,1)[0],navigator.pointerEnabled)b.type=a.pointerType||"mouse";else{var d={4:"mouse",2:"touch",3:"pen"};b.type=d[a.pointerType],b.type||(b.type=a.pointerType||"mouse")}}var g,h=Mb(a),j=h.length;if("mouseup"===a.type&&(j=0),2===j)return _=null,!0;1===j&&Ma(lb,h[0]),0!==j||ga||fa||(b||("mouseup"===a.type?b={x:a.pageX,y:a.pageY,type:"mouse"}:a.changedTouches&&a.changedTouches[0]&&(b={x:a.changedTouches[0].pageX,y:a.changedTouches[0].pageY,type:"touch"})),Da("touchRelease",a,b));var k=-1;if(0===j&&(V=!1,e.unbind(window,p,f),zb(),aa?k=0:sb!==-1&&(k=Ea()-sb)),sb=1===j?Ea():-1,g=k!==-1&&k<150?"zoom":"swipe",aa&&j<2&&(aa=!1,1===j&&(g="zoomPointerUp"),Da("zoomGestureEnded")),_=null,Y||X||fa||T)if(cb(),R||(R=Sb()),R.calculateSwipeSpeed("x"),T){var l=Ib();if(l<i.verticalDragRange)f.close();else{var m=pa.y,n=ja;db("verticalDrag",0,1,300,e.easing.cubic.out,function(a){pa.y=(f.currItem.initialPosition.y-m)*a+m,Fa((1-n)*a+n),Ha()}),Da("onVerticalDrag",1)}}else{if(($||fa)&&0===j){var o=Ub(g,R);if(o)return;g="zoomPointerUp"}if(!fa)return"swipe"!==g?void Wb():void(!$&&s>f.currItem.fitRatio&&Tb(R))}},Sb=function(){var a,b,c={lastFlickOffset:{},lastFlickDist:{},lastFlickSpeed:{},slowDownRatio:{},slowDownRatioReverse:{},speedDecelerationRatio:{},speedDecelerationRatioAbs:{},distanceOffset:{},backAnimDestination:{},backAnimStarted:{},calculateSwipeSpeed:function(d){ob.length>1?(a=Ea()-Q+50,b=ob[ob.length-2][d]):(a=Ea()-P,b=lb[d]),c.lastFlickOffset[d]=kb[d]-b,c.lastFlickDist[d]=Math.abs(c.lastFlickOffset[d]),c.lastFlickDist[d]>20?c.lastFlickSpeed[d]=c.lastFlickOffset[d]/a:c.lastFlickSpeed[d]=0,Math.abs(c.lastFlickSpeed[d])<.1&&(c.lastFlickSpeed[d]=0),c.slowDownRatio[d]=.95,c.slowDownRatioReverse[d]=1-c.slowDownRatio[d],c.speedDecelerationRatio[d]=1},calculateOverBoundsAnimOffset:function(a,b){c.backAnimStarted[a]||(pa[a]>da.min[a]?c.backAnimDestination[a]=da.min[a]:pa[a]<da.max[a]&&(c.backAnimDestination[a]=da.max[a]),void 0!==c.backAnimDestination[a]&&(c.slowDownRatio[a]=.7,c.slowDownRatioReverse[a]=1-c.slowDownRatio[a],c.speedDecelerationRatioAbs[a]<.05&&(c.lastFlickSpeed[a]=0,c.backAnimStarted[a]=!0,db("bounceZoomPan"+a,pa[a],c.backAnimDestination[a],b||300,e.easing.sine.out,function(b){pa[a]=b,Ha()}))))},calculateAnimOffset:function(a){c.backAnimStarted[a]||(c.speedDecelerationRatio[a]=c.speedDecelerationRatio[a]*(c.slowDownRatio[a]+c.slowDownRatioReverse[a]-c.slowDownRatioReverse[a]*c.timeDiff/10),c.speedDecelerationRatioAbs[a]=Math.abs(c.lastFlickSpeed[a]*c.speedDecelerationRatio[a]),c.distanceOffset[a]=c.lastFlickSpeed[a]*c.speedDecelerationRatio[a]*c.timeDiff,pa[a]+=c.distanceOffset[a])},panAnimLoop:function(){if($a.zoomPan&&($a.zoomPan.raf=H(c.panAnimLoop),c.now=Ea(),c.timeDiff=c.now-c.lastNow,c.lastNow=c.now,c.calculateAnimOffset("x"),c.calculateAnimOffset("y"),Ha(),c.calculateOverBoundsAnimOffset("x"),c.calculateOverBoundsAnimOffset("y"),c.speedDecelerationRatioAbs.x<.05&&c.speedDecelerationRatioAbs.y<.05))return pa.x=Math.round(pa.x),pa.y=Math.round(pa.y),Ha(),void ab("zoomPan")}};return c},Tb=function(a){return a.calculateSwipeSpeed("y"),da=f.currItem.bounds,a.backAnimDestination={},a.backAnimStarted={},Math.abs(a.lastFlickSpeed.x)<=.05&&Math.abs(a.lastFlickSpeed.y)<=.05?(a.speedDecelerationRatioAbs.x=a.speedDecelerationRatioAbs.y=0,a.calculateOverBoundsAnimOffset("x"),a.calculateOverBoundsAnimOffset("y"),!0):(bb("zoomPan"),a.lastNow=Ea(),void a.panAnimLoop())},Ub=function(a,b){var c;fa||(qb=m);var d;if("swipe"===a){var g=kb.x-lb.x,h=b.lastFlickDist.x<10;g>fb&&(h||b.lastFlickOffset.x>20)?d=-1:g<-fb&&(h||b.lastFlickOffset.x<-20)&&(d=1)}var j;d&&(m+=d,m<0?(m=i.loop?ac()-1:0,j=!0):m>=ac()&&(m=i.loop?0:ac()-1,j=!0),j&&!i.loop||(ua+=d,ra-=d,c=!0));var k,l=ta.x*ra,n=Math.abs(l-tb.x);return c||l>tb.x==b.lastFlickSpeed.x>0?(k=Math.abs(b.lastFlickSpeed.x)>0?n/Math.abs(b.lastFlickSpeed.x):333,k=Math.min(k,400),k=Math.max(k,250)):k=333,qb===m&&(c=!1),fa=!0,Da("mainScrollAnimStart"),db("mainScroll",tb.x,l,k,e.easing.cubic.out,Ka,function(){cb(),fa=!1,qb=-1,(c||qb!==m)&&f.updateCurrItem(),Da("mainScrollAnimComplete")}),c&&f.updateCurrItem(!0),c},Vb=function(a){return 1/ca*a*t},Wb=function(){var a=s,b=Ta(),c=Ua();s<b?a=b:s>c&&(a=c);var d,g=1,h=ja;return ia&&!S&&!ka&&s<b?(f.close(),!0):(ia&&(d=function(a){Fa((g-h)*a+h)}),f.zoomTo(a,0,200,e.easing.cubic.out,d),!0)};za("Gestures",{publicMethods:{initGestures:function(){var a=function(a,b,c,d,e){A=a+b,B=a+c,C=a+d,D=e?a+e:""};F=N.pointerEvent,F&&N.touch&&(N.touch=!1),F?navigator.pointerEnabled?a("pointer","down","move","up","cancel"):a("MSPointer","Down","Move","Up","Cancel"):N.touch?(a("touch","start","move","end","cancel"),G=!0):a("mouse","down","move","up"),p=B+" "+C+" "+D,q=A,F&&!G&&(G=navigator.maxTouchPoints>1||navigator.msMaxTouchPoints>1),f.likelyTouchDevice=G,r[A]=Ob,r[B]=Pb,r[C]=Rb,D&&(r[D]=r[C]),N.touch&&(q+=" mousedown",p+=" mousemove mouseup",r.mousedown=r[A],r.mousemove=r[B],r.mouseup=r[C]),G||(i.allowPanToNext=!1)}}});var Xb,Yb,Zb,$b,_b,ac,bc,cc=function(b,c,d,g){Xb&&clearTimeout(Xb),$b=!0,Zb=!0;var h;b.initialLayout?(h=b.initialLayout,b.initialLayout=null):h=i.getThumbBoundsFn&&i.getThumbBoundsFn(m);var j=d?i.hideAnimationDuration:i.showAnimationDuration,k=function(){ab("initialZoom"),d?(f.template.removeAttribute("style"),f.bg.removeAttribute("style")):(Fa(1),c&&(c.style.display="block"),e.addClass(a,"pswp--animated-in"),Da("initialZoom"+(d?"OutEnd":"InEnd"))),g&&g(),$b=!1};if(!j||!h||void 0===h.x)return Da("initialZoom"+(d?"Out":"In")),s=b.initialZoomLevel,Ma(pa,b.initialPosition),Ha(),a.style.opacity=d?0:1,Fa(1),void(j?setTimeout(function(){k()},j):k());var n=function(){var c=l,g=!f.currItem.src||f.currItem.loadError||i.showHideOpacity;b.miniImg&&(b.miniImg.style.webkitBackfaceVisibility="hidden"),d||(s=h.w/b.w,pa.x=h.x,pa.y=h.y-K,f[g?"template":"bg"].style.opacity=.001,Ha()),bb("initialZoom"),d&&!c&&e.removeClass(a,"pswp--animated-in"),g&&(d?e[(c?"remove":"add")+"Class"](a,"pswp--animate_opacity"):setTimeout(function(){e.addClass(a,"pswp--animate_opacity")},30)),Xb=setTimeout(function(){if(Da("initialZoom"+(d?"Out":"In")),d){var f=h.w/b.w,i={x:pa.x,y:pa.y},l=s,m=ja,n=function(b){1===b?(s=f,pa.x=h.x,pa.y=h.y-M):(s=(f-l)*b+l,pa.x=(h.x-i.x)*b+i.x,pa.y=(h.y-M-i.y)*b+i.y),Ha(),g?a.style.opacity=1-b:Fa(m-b*m)};c?db("initialZoom",0,1,j,e.easing.cubic.out,n,k):(n(1),Xb=setTimeout(k,j+20))}else s=b.initialZoomLevel,Ma(pa,b.initialPosition),Ha(),Fa(1),g?a.style.opacity=1:Fa(1),Xb=setTimeout(k,j+20)},d?25:90)};n()},dc={},ec=[],fc={index:0,errorMsg:'<div class="pswp__error-msg"><a href="%url%" target="_blank">The image</a> could not be loaded.</div>',forceProgressiveLoading:!1,preload:[1,1],getNumItemsFn:function(){return Yb.length}},gc=function(){return{center:{x:0,y:0},max:{x:0,y:0},min:{x:0,y:0}}},hc=function(a,b,c){var d=a.bounds;d.center.x=Math.round((dc.x-b)/2),d.center.y=Math.round((dc.y-c)/2)+a.vGap.top,d.max.x=b>dc.x?Math.round(dc.x-b):d.center.x,d.max.y=c>dc.y?Math.round(dc.y-c)+a.vGap.top:d.center.y,d.min.x=b>dc.x?0:d.center.x,d.min.y=c>dc.y?a.vGap.top:d.center.y},ic=function(a,b,c){if(a.src&&!a.loadError){var d=!c;if(d&&(a.vGap||(a.vGap={top:0,bottom:0}),Da("parseVerticalMargin",a)),dc.x=b.x,dc.y=b.y-a.vGap.top-a.vGap.bottom,d){var e=dc.x/a.w,f=dc.y/a.h;a.fitRatio=e<f?e:f;var g=i.scaleMode;"orig"===g?c=1:"fit"===g&&(c=a.fitRatio),c>1&&(c=1),a.initialZoomLevel=c,a.bounds||(a.bounds=gc())}if(!c)return;return hc(a,a.w*c,a.h*c),d&&c===a.initialZoomLevel&&(a.initialPosition=a.bounds.center),a.bounds}return a.w=a.h=0,a.initialZoomLevel=a.fitRatio=1,a.bounds=gc(),a.initialPosition=a.bounds.center,a.bounds},jc=function(a,b,c,d,e,g){b.loadError||d&&(b.imageAppended=!0,mc(b,d,b===f.currItem&&ya),c.appendChild(d),g&&setTimeout(function(){b&&b.loaded&&b.placeholder&&(b.placeholder.style.display="none",b.placeholder=null)},500))},kc=function(a){a.loading=!0,a.loaded=!1;var b=a.img=e.createEl("pswp__img","img"),c=function(){a.loading=!1,a.loaded=!0,a.loadComplete?a.loadComplete(a):a.img=null,b.onload=b.onerror=null,b=null};return b.onload=c,b.onerror=function(){a.loadError=!0,c()},b.src=a.src,b},lc=function(a,b){if(a.src&&a.loadError&&a.container)return b&&(a.container.innerHTML=""),a.container.innerHTML=i.errorMsg.replace("%url%",a.src),!0},mc=function(a,b,c){if(a.src){b||(b=a.container.lastChild);var d=c?a.w:Math.round(a.w*a.fitRatio),e=c?a.h:Math.round(a.h*a.fitRatio);a.placeholder&&!a.loaded&&(a.placeholder.style.width=d+"px",a.placeholder.style.height=e+"px"),b.style.width=d+"px",b.style.height=e+"px"}},nc=function(){if(ec.length){for(var a,b=0;b<ec.length;b++)a=ec[b],a.holder.index===a.index&&jc(a.index,a.item,a.baseDiv,a.img,!1,a.clearPlaceholder);ec=[]}};za("Controller",{publicMethods:{lazyLoadItem:function(a){a=Aa(a);var b=_b(a);b&&(!b.loaded&&!b.loading||x)&&(Da("gettingData",a,b),b.src&&kc(b))},initController:function(){e.extend(i,fc,!0),f.items=Yb=c,_b=f.getItemAt,ac=i.getNumItemsFn,bc=i.loop,ac()<3&&(i.loop=!1),Ca("beforeChange",function(a){var b,c=i.preload,d=null===a||a>=0,e=Math.min(c[0],ac()),g=Math.min(c[1],ac());for(b=1;b<=(d?g:e);b++)f.lazyLoadItem(m+b);for(b=1;b<=(d?e:g);b++)f.lazyLoadItem(m-b)}),Ca("initialLayout",function(){f.currItem.initialLayout=i.getThumbBoundsFn&&i.getThumbBoundsFn(m)}),Ca("mainScrollAnimComplete",nc),Ca("initialZoomInEnd",nc),Ca("destroy",function(){for(var a,b=0;b<Yb.length;b++)a=Yb[b],a.container&&(a.container=null),a.placeholder&&(a.placeholder=null),a.img&&(a.img=null),a.preloader&&(a.preloader=null),a.loadError&&(a.loaded=a.loadError=!1);ec=null})},getItemAt:function(a){return a>=0&&(void 0!==Yb[a]&&Yb[a])},allowProgressiveImg:function(){return i.forceProgressiveLoading||!G||i.mouseUsed||screen.width>1200},setContent:function(a,b){i.loop&&(b=Aa(b));var c=f.getItemAt(a.index);c&&(c.container=null);var d,g=f.getItemAt(b);if(!g)return void(a.el.innerHTML="");Da("gettingData",b,g),a.index=b,a.item=g;var h=g.container=e.createEl("pswp__zoom-wrap");if(!g.src&&g.html&&(g.html.tagName?h.appendChild(g.html):h.innerHTML=g.html),lc(g),ic(g,qa),!g.src||g.loadError||g.loaded)g.src&&!g.loadError&&(d=e.createEl("pswp__img","img"),d.style.opacity=1,d.src=g.src,mc(g,d),jc(b,g,h,d,!0));else{if(g.loadComplete=function(c){if(j){if(a&&a.index===b){if(lc(c,!0))return c.loadComplete=c.img=null,ic(c,qa),Ia(c),void(a.index===m&&f.updateCurrZoomItem());c.imageAppended?!$b&&c.placeholder&&(c.placeholder.style.display="none",c.placeholder=null):N.transform&&(fa||$b)?ec.push({item:c,baseDiv:h,img:c.img,index:b,holder:a,clearPlaceholder:!0}):jc(b,c,h,c.img,fa||$b,!0)}c.loadComplete=null,c.img=null,Da("imageLoadComplete",b,c)}},e.features.transform){var k="pswp__img pswp__img--placeholder";k+=g.msrc?"":" pswp__img--placeholder--blank";var l=e.createEl(k,g.msrc?"img":"");g.msrc&&(l.src=g.msrc),mc(g,l),h.appendChild(l),g.placeholder=l}g.loading||kc(g),f.allowProgressiveImg()&&(!Zb&&N.transform?ec.push({item:g,baseDiv:h,img:g.img,index:b,holder:a}):jc(b,g,h,g.img,!0,!0))}Zb||b!==m?Ia(g):(ea=h.style,cc(g,d||g.img)),a.el.innerHTML="",a.el.appendChild(h)},cleanSlide:function(a){a.img&&(a.img.onload=a.img.onerror=null),a.loaded=a.loading=a.img=a.imageAppended=!1}}});var oc,pc={},qc=function(a,b,c){var d=document.createEvent("CustomEvent"),e={origEvent:a,target:a.target,releasePoint:b,pointerType:c||"touch"};d.initCustomEvent("pswpTap",!0,!0,e),a.target.dispatchEvent(d)};za("Tap",{publicMethods:{initTap:function(){Ca("firstTouchStart",f.onTapStart),Ca("touchRelease",f.onTapRelease),Ca("destroy",function(){pc={},oc=null})},onTapStart:function(a){a.length>1&&(clearTimeout(oc),oc=null)},onTapRelease:function(a,b){if(b&&!Y&&!W&&!_a){var c=b;if(oc&&(clearTimeout(oc),oc=null,xb(c,pc)))return void Da("doubleTap",c);if("mouse"===b.type)return void qc(a,b,"mouse");var d=a.target.tagName.toUpperCase();if("BUTTON"===d||e.hasClass(a.target,"pswp__single-tap"))return void qc(a,b);Ma(pc,c),oc=setTimeout(function(){qc(a,b),oc=null},300)}}}});var rc;za("DesktopZoom",{publicMethods:{initDesktopZoom:function(){L||(G?Ca("mouseUsed",function(){f.setupDesktopZoom()}):f.setupDesktopZoom(!0))},setupDesktopZoom:function(b){rc={};var c="wheel mousewheel DOMMouseScroll";Ca("bindEvents",function(){e.bind(a,c,f.handleMouseWheel)}),Ca("unbindEvents",function(){rc&&e.unbind(a,c,f.handleMouseWheel)}),f.mouseZoomedIn=!1;var d,g=function(){f.mouseZoomedIn&&(e.removeClass(a,"pswp--zoomed-in"),f.mouseZoomedIn=!1),s<1?e.addClass(a,"pswp--zoom-allowed"):e.removeClass(a,"pswp--zoom-allowed"),h()},h=function(){d&&(e.removeClass(a,"pswp--dragging"),d=!1)};Ca("resize",g),Ca("afterChange",g),Ca("pointerDown",function(){f.mouseZoomedIn&&(d=!0,e.addClass(a,"pswp--dragging"))}),Ca("pointerUp",h),b||g()},handleMouseWheel:function(a){if(s<=f.currItem.fitRatio)return i.modal&&(!i.closeOnScroll||_a||V?a.preventDefault():E&&Math.abs(a.deltaY)>2&&(l=!0,f.close())),!0;if(a.stopPropagation(),rc.x=0,"deltaX"in a)1===a.deltaMode?(rc.x=18*a.deltaX,rc.y=18*a.deltaY):(rc.x=a.deltaX,rc.y=a.deltaY);else if("wheelDelta"in a)a.wheelDeltaX&&(rc.x=-.16*a.wheelDeltaX),a.wheelDeltaY?rc.y=-.16*a.wheelDeltaY:rc.y=-.16*a.wheelDelta;else{if(!("detail"in a))return;rc.y=a.detail}Sa(s,!0);var b=pa.x-rc.x,c=pa.y-rc.y;(i.modal||b<=da.min.x&&b>=da.max.x&&c<=da.min.y&&c>=da.max.y)&&a.preventDefault(),f.panTo(b,c)},toggleDesktopZoom:function(b){b=b||{x:qa.x/2+sa.x,y:qa.y/2+sa.y};var c=i.getDoubleTapZoom(!0,f.currItem),d=s===c;f.mouseZoomedIn=!d,f.zoomTo(d?f.currItem.initialZoomLevel:c,b,333),e[(d?"remove":"add")+"Class"](a,"pswp--zoomed-in")}}});var sc,tc,uc,vc,wc,xc,yc,zc,Ac,Bc,Cc,Dc,Ec={history:!0,galleryUID:1},Fc=function(){return Cc.hash.substring(1)},Gc=function(){sc&&clearTimeout(sc),uc&&clearTimeout(uc)},Hc=function(){var a=Fc(),b={};if(a.length<5)return b;var c,d=a.split("&");for(c=0;c<d.length;c++)if(d[c]){var e=d[c].split("=");e.length<2||(b[e[0]]=e[1])}if(i.galleryPIDs){var f=b.pid;for(b.pid=0,c=0;c<Yb.length;c++)if(Yb[c].pid===f){b.pid=c;break}}else b.pid=parseInt(b.pid,10)-1;return b.pid<0&&(b.pid=0),b},Ic=function(){if(uc&&clearTimeout(uc),_a||V)return void(uc=setTimeout(Ic,500));vc?clearTimeout(tc):vc=!0;var a=m+1,b=_b(m);b.hasOwnProperty("pid")&&(a=b.pid);var c=yc+"&gid="+i.galleryUID+"&pid="+a;zc||Cc.hash.indexOf(c)===-1&&(Bc=!0);var d=Cc.href.split("#")[0]+"#"+c;Dc?"#"+c!==window.location.hash&&history[zc?"replaceState":"pushState"]("",document.title,d):zc?Cc.replace(d):Cc.hash=c,zc=!0,tc=setTimeout(function(){vc=!1},60)};za("History",{publicMethods:{initHistory:function(){if(e.extend(i,Ec,!0),i.history){Cc=window.location,Bc=!1,Ac=!1,zc=!1,yc=Fc(),Dc="pushState"in history,yc.indexOf("gid=")>-1&&(yc=yc.split("&gid=")[0],yc=yc.split("?gid=")[0]),Ca("afterChange",f.updateURL),Ca("unbindEvents",function(){e.unbind(window,"hashchange",f.onHashChange)});var a=function(){xc=!0,Ac||(Bc?history.back():yc?Cc.hash=yc:Dc?history.pushState("",document.title,Cc.pathname+Cc.search):Cc.hash=""),Gc()};Ca("unbindEvents",function(){l&&a()}),Ca("destroy",function(){xc||a()}),Ca("firstUpdate",function(){m=Hc().pid});var b=yc.indexOf("pid=");b>-1&&(yc=yc.substring(0,b),"&"===yc.slice(-1)&&(yc=yc.slice(0,-1))),setTimeout(function(){j&&e.bind(window,"hashchange",f.onHashChange)},40)}},onHashChange:function(){return Fc()===yc?(Ac=!0,void f.close()):void(vc||(wc=!0,f.goTo(Hc().pid),wc=!1))},updateURL:function(){Gc(),wc||(zc?sc=setTimeout(Ic,800):Ic())}}}),e.extend(f,eb)};return a});]]></Script>
    <Script path="lib/theme-explorer.js"><![CDATA[/*======================================
  # Show / hide panel
======================================*/
var toggle = document.querySelector(".theme-explorer__toggle");
if (toggle) {
    toggle.addEventListener("click", function (e) {
        document.body.classList.toggle("theme-explorer-visible");
    });
}
var closeButton = document.querySelector(".theme-explorer__save .button--close");
if (closeButton) {
    closeButton.addEventListener("click", function (e) {
        document.body.classList.remove("theme-explorer-visible");
    });
}
/*======================================
  # Color pickers
======================================*/
jscolor.presets.default = {previewSize:38, width: 250, height: 150, position: 'left', borderColor: '#FFF', backgroundColor: '#FFF', controlBorderColor: '#FFF'};
var colorEditors = document.querySelectorAll(".theme-explorer__input--color");
colorEditors.forEach(function (item) {
    var prop = item.dataset.prop;
    var propValue = getComputedStyle(document.documentElement).getPropertyValue(prop);
    //Populate inputs with current value
    item.value = propValue;
    item.addEventListener("change", function (e) {
        document.documentElement.style.setProperty(prop, item.value);
        if (prop == "--theme") {
            var darker = adjustColor(item.value, -0.1);
            var rgb = hexToRgb(item.value);
            document.documentElement.style.setProperty("--theme-darker", darker);
            document.documentElement.style.setProperty("--theme-rgb", rgb.r + "," + rgb.g + "," + rgb.b);
        }
        if (prop == "--theme-alt") {
            var darker = adjustColor(item.value, -0.1);
            document.documentElement.style.setProperty("--theme-alt-darker", darker);
        }
        if (prop == "--background-dark") {
            var lighter = adjustColor(item.value, 0.1);
            document.documentElement.style.setProperty("--background-dark-lighter", lighter);
        }
    });
});
/*======================================
  # Number inputs
======================================*/
var textEditors = document.querySelectorAll(".theme-explorer__input--text");
textEditors.forEach(function (item) {
    var prop = item.dataset.prop;
    var propValue = getComputedStyle(document.documentElement).getPropertyValue(prop);
    //Populate inputs with current value if not set
    
    if (item.value == "") {
        if(item.type == "number"){
            item.value = parseFloat(propValue.replace("px", "").replace("rem", ""));
        } 
        else{
            item.value = propValue;
        }
        
    }
    item.addEventListener("input", function (e) {
        if (item.dataset.size != undefined) {
            var style = document.createElement("style");
            if(item.dataset.unit != undefined){
                
                style.innerHTML = "@media only screen and (max-width: " + item.dataset.size + "px) { :root {" + prop + ": " + item.value + item.dataset.unit + "!important;}}";
            }
            else{
                style.innerHTML = "@media only screen and (max-width: " + item.dataset.size + "px) { :root {" + prop + ": " + item.value + "px!important;}}";
            }
            document.head.appendChild(style);
            return;
        }
        if(item.dataset.unit != undefined){
            document.documentElement.style.setProperty(prop, item.value + "" + item.dataset.unit);
        }
        else{
            document.documentElement.style.setProperty(prop, item.value + "px");
        }
        
    });
});
/*======================================
  # Design mode
======================================*/
var toggleCb = document.querySelector(".toggle-design-mode");
if (toggleCb) {
    toggleCb.addEventListener("change", function (e) {
        if (toggleCb.checked) {
            document.designMode = 'on';
        }
        else {
            document.designMode = 'off';
        }
    });
}
/*======================================
  # Dropdown classes
======================================*/
var dropdowns = document.querySelectorAll(".theme-explorer__select");
dropdowns.forEach(function (item) {
    var scope = document.querySelector(item.dataset.scope);
    var options = item.options;
    var currentClass = "";
    // Populate select with current value
    for (var i = 0; i < item.length; i++) {
        if (scope && scope.classList.contains(item.options[i].value)) {
            item.options[i].selected = true;
            currentClass = item.options[i].value;
        }
    }
    item.addEventListener("change", function (e) {
        if (scope) {
            scope.classList.remove(currentClass);
            currentClass = item.value;
            scope.classList.add(item.value);
            var cIndex = e.target.selectedIndex;
            if (item.options[cIndex].dataset.extra != undefined) {
                scope.classList.add(item.options[cIndex].dataset.extra);
            }
            if (item.options[cIndex].dataset.remove != undefined) {
                scope.classList.remove(item.options[cIndex].dataset.remove);
            }
        }
    });
});
/*======================================
  # Section tabs
======================================*/
var tabs = document.querySelectorAll(".theme-explorer__nav button");
var sections = document.querySelectorAll(".theme-explorer__section");
tabs.forEach(function (item) {
    item.addEventListener("click", function (e) {
        var target = item.dataset.section;
        tabs.forEach(function (tab) {
            tab.classList.remove("active");
        });
        sections.forEach(function (section) {
            section.classList.remove("active");
        });
        item.classList.add("active");
        var current = document.getElementById(target);
        current.classList.add("active");
    });
});
/*======================================
  # Google Fonts
======================================*/
var frontDropdowns = document.querySelectorAll(".theme-explorer__font");
var fontLink = document.querySelector(".theme-explore-font");
var fonts = [];
// Get the fonts populate the dropdowns
fetch('/ig-assets/googlefonts.json')
  .then(function (response) {
    return response.json();
  }).then(data => {
    // handle success
    var rawFonts = data.items;
    rawFonts.forEach(function (fontres) {
        var apiUrl = [];
        apiUrl.push('https://fonts.googleapis.com/css?family=');
        apiUrl.push(fontres.family.replace(/ /g, '+'));
        if (fontres.variants.length > 2) {
            apiUrl.push(':');
            fontres.variants.forEach(function (weight, key, arr) {
                if (weight == "regular") {
                    return;
                }
                if (Object.is(arr.length - 1, key)) {
                    apiUrl.push(weight);
                }
                else {
                    apiUrl.push(weight + ',');
                }
            });
        }
        var url = apiUrl.join('');
        frontDropdowns.forEach(function (item) {
            var option = document.createElement("option");
            option.text = fontres.family;
            option.value = url;
            option.dataset.store = url.replace("https://fonts.googleapis.com/css?family=", "");
            item.appendChild(option);
        });
    });
}).
    then(function () {
    //Set selected in dropdown from current font
    frontDropdowns.forEach(function (item) {
        var current = getComputedStyle(document.documentElement).getPropertyValue(item.dataset.prop).toString();
        var hidden = item.parentNode.querySelector(".font-hidden");
        for (var i = 0; i < item.options.length; i++) {
            var text = item.options[i].text.toString();
            if (text.trim() === current.trim()) {
                item.options[i].selected = true;
                hidden.value = item.options[i].dataset.store;
            }
        }
    });
})
    .catch(function (error) {
    // handle error
    console.log(error);
});
frontDropdowns.forEach(function (item) {
    //On change
    item.addEventListener("change", function (e) {
        var prop = item.dataset.prop;
        var cIndex = e.target.selectedIndex;
        document.documentElement.style.setProperty(prop, item.options[cIndex].text);
        var link = document.createElement("link");
        link.href = item.value;
        link.rel = "stylesheet";
        document.head.appendChild(link);
        item.parentNode.querySelector(".font-hidden").value = link.href.replace("https://fonts.googleapis.com/css?family=", "");
    });
});
/*======================================
  # Adjust color
======================================*/
function adjustColor(hex, lum) {
    // validate hex string
    hex = String(hex).replace(/[^0-9a-f]/gi, '');
    if (hex.length < 6) {
        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
    }
    lum = lum || 0;
    // convert to decimal and change luminosity
    var rgb = "#", c, i;
    for (i = 0; i < 3; i++) {
        c = parseInt(hex.substr(i * 2, 2), 16);
        c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);
        rgb += ("00" + c).substr(c.length);
    }
    return rgb;
}
function hexToRgb(hex) {
    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return result ? {
        r: parseInt(result[1], 16),
        g: parseInt(result[2], 16),
        b: parseInt(result[3], 16)
    } : null;
}

function getWidthValue(cssClass) {
  if (cssClass.indexOf("full-width") > -1) {
    return "full width";
  } else if (cssClass.indexOf("fluid") > -1) {
    return "full width";
  } else if (cssClass.indexOf("big") > -1) {
    return "big";
  } else if (cssClass.indexOf("standard") > -1) {
    return "standard";
  } else if (cssClass.indexOf("small") > -1) {
    return "small";
  } 

  return "standard";
}

function getColorAlias(cssClass) {
  if (cssClass.indexOf("dark") > -1) {
    return "dark";
  } else if (cssClass.indexOf("light") > -1) {
    return "white";
  } 
  return "white";
}

const themeButton = document.querySelector('.theme-explorer__save .button--save');

if(themeButton){
    themeButton.addEventListener('click', () => {
    
      // Get the current page ID
      // We have stored this on a HTML data attribute set on the THEME DESIGNER HTML
      const themeExplorerDom = document.querySelector(".theme-explorer[data-current-node]");
      const currentNodeId = themeExplorerDom.dataset.currentNode;
      const themeNodeId = themeExplorerDom.dataset.themeNode;
    
      let data = {};
      data.currentPageId = Number(currentNodeId);
      data.theme = {};
    
      // Colors
      data.theme.themeColor = getComputedStyle(document.documentElement).getPropertyValue("--theme");
      data.theme.themeContrast = getComputedStyle(document.documentElement).getPropertyValue("--theme-contrast");
      data.theme.themeAltColor = getComputedStyle(document.documentElement).getPropertyValue("--theme-alt");
      data.theme.themeAltColorContrast = getComputedStyle(document.documentElement).getPropertyValue("--theme-alt-contrast");
      data.theme.headingColorDark = getComputedStyle(document.documentElement).getPropertyValue("--heading-dark");
      data.theme.textColorDark = getComputedStyle(document.documentElement).getPropertyValue("--text-dark");
      data.theme.darkBackground = getComputedStyle(document.documentElement).getPropertyValue("--background-dark");
      data.theme.textColorLight = getComputedStyle(document.documentElement).getPropertyValue("--text-light");
      data.theme.headingColorLight = getComputedStyle(document.documentElement).getPropertyValue("--heading-light");
      data.theme.grayBackground = getComputedStyle(document.documentElement).getPropertyValue("--background-light");
      data.theme.selectedNavigationItem = getComputedStyle(document.documentElement).getPropertyValue("--selected-nav-item");
      data.theme.success = getComputedStyle(document.documentElement).getPropertyValue("--success");
      data.theme.error = getComputedStyle(document.documentElement).getPropertyValue("--error");
      data.theme.borderDark = getComputedStyle(document.documentElement).getPropertyValue("--border-dark");
      data.theme.borderLight = getComputedStyle(document.documentElement).getPropertyValue("--border-light");
    
      // Grid
      data.theme.containerWidthSmall = getComputedStyle(document.documentElement).getPropertyValue("--grid-width-small");
      data.theme.containerWidth = getComputedStyle(document.documentElement).getPropertyValue("--grid-width");
      data.theme.containerWidthBig = getComputedStyle(document.documentElement).getPropertyValue("--grid-width-big");
      data.theme.gridGutter = getComputedStyle(document.documentElement).getPropertyValue("--grid-gutter");
      data.theme.gridGutterMedium = document.querySelector("input[data-alias='gridGutterMedium']").value + "px";
      data.theme.gridGutterSmall = document.querySelector("input[data-alias='gridGutterSmall']").value + "px";
      data.theme.gridGutterXS = document.querySelector("input[data-alias='gridGutterXS']").value + "px";
    
      // Header
      data.theme.headerBackgroundColor = getColorAlias(document.getElementById("--header-theme").value);
      data.theme.headerHeight = document.querySelector("input[data-alias='headerHeight']").value + "px";
      data.theme.headerContainerWidth = getWidthValue(document.getElementById("--header-container").value);
      data.theme.headerLayout = document.getElementById("--header-nav").value.substring(5);
      data.theme.headerHeightMobile = document.querySelector("input[data-alias='headerHeightMobile']").value + "px";
      data.theme.logoPadding = getComputedStyle(document.documentElement).getPropertyValue("--logo-padding") + "px";
      data.theme.logoPaddingMobile = document.querySelector("input[data-alias='logoPaddingMobile']").value + "px";
      data.theme.navigationPadding = getComputedStyle(document.documentElement).getPropertyValue("--navigation-padding");
      data.theme.navigationPaddingSmallerScreens = document.querySelector("input[data-alias='navigationPaddingSmallerScreens']").value + "px";
      data.theme.navigationFontSize = document.querySelector("input[data-alias='navigationFontSize']").value + "rem";
      data.theme.navigationFontSizeMobile = document.querySelector("input[data-alias='navigationFontSizeMobile']").value + "rem";
      data.theme.navigationFontWeight = document.querySelector("input[data-alias='navigationFontWeight']").value;
      
    
      // Footer
      data.theme.footerContainerWidth = getWidthValue(document.getElementById("--footer-container").value);
      data.theme.footerBackgroundColor = getColorAlias(document.getElementById("--footer-theme").value);
      
      //Text
      data.theme.textFontSize = document.querySelector("input[data-alias='textFontSize']").value + "rem";
      data.theme.textBigFontSize = document.querySelector("input[data-alias='textBigFontSize']").value + "rem";
      data.theme.textSmallFontSize = document.querySelector("input[data-alias='textSmallFontSize']").value + "rem";
      data.theme.textLineHeight = document.querySelector("input[data-alias='textLineHeight']").value;
      data.theme.textFontWeight = document.querySelector("input[data-alias='textFontWeight']").value;
      data.theme.textBigFontWeight = document.querySelector("input[data-alias='textBigFontWeight']").value;
      data.theme.headingLineHeight = document.querySelector("input[data-alias='headingLineHeight']").value;
      data.theme.headingFontWeight = document.querySelector("input[data-alias='headingFontWeight']").value;
      data.theme.heading1FontSize = document.querySelector("input[data-alias='heading1FontSize']").value + "rem";
      data.theme.heading2FontSize = document.querySelector("input[data-alias='heading2FontSize']").value + "rem";
      data.theme.heading3FontSize = document.querySelector("input[data-alias='heading3FontSize']").value + "rem";
      data.theme.heading4FontSize = document.querySelector("input[data-alias='heading4FontSize']").value + "rem";
      data.theme.heading5FontSize = document.querySelector("input[data-alias='heading5FontSize']").value + "rem";
      data.theme.heading6FontSize = document.querySelector("input[data-alias='heading6FontSize']").value + "rem";
      data.theme.heroHeadingFontSize = document.querySelector("input[data-alias='heroHeadingFontSize']").value + "rem";
      data.theme.heroHeadingMobileFontSize = document.querySelector("input[data-alias='heroHeadingMobileFontSize']").value + "rem";
    
      // Fonts
      const bodyFont = document.querySelector("input[name='body-font']").value;
      const headerFont = document.querySelector("input[name='heading-font']").value;
      
      if(bodyFont != "" && headerFont != ""){
        data.theme.bodyFont = getComputedStyle(document.documentElement).getPropertyValue("--body-font").replace(/\"/g, "").trim();
        data.theme.headingFont = getComputedStyle(document.documentElement).getPropertyValue("--heading-font").replace(/\"/g, "").trim();
        data.theme.embedFont = `<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=${bodyFont}|${headerFont}">`;
      }
      
      // Diverse
      data.theme.buttonBorderRadius = getComputedStyle(document.documentElement).getPropertyValue("--button-border-radius");
    
      // disable save button
      themeButton.disabled = true;
      themeButton.innerText = "Saving...";
    
      fetch('/umbraco/backoffice/Igloo/IglooThemeExplorer/Save', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      })
        .then(response => {
          console.log('OK:', response);
          themeButton.innerText = "Theme Updated!";
    
          setTimeout(function () {
            themeButton.disabled = false;
            themeButton.innerText = "Save";
          }, 2000);
    
        })
        .catch(error => {
          const response = error.response;
          if (response.status === 401) {
            // Notify user they are logged out & try to redirect back them to theme node
            alert('You are not signed into Umbaco backoffice');
            location.assign(`/umbraco/#/content/content/edit/${themeNodeId}`);
          }
        });
    });
}
]]></Script>
  </Scripts>
  <PartialViews>
    <View path="Shared/CookieConsent.cshtml"><![CDATA[@inherits UmbracoViewPage
@using Umbraco.Cms.Core.Models;
@inject Igloo.Core.Services.ISettingsService _settingsService;
@{
    var cookieDialogText = _settingsService.Get<string>(Model, "cookieDialogText");
    var cookieDialogLearnMoreLink = _settingsService.Get<Link>(Model, "cookieDialogLearnMoreLink");
    var dismissButtonText = _settingsService.Get<string>(Model, "dismissButtonText");
    var learnMoreDictionaryValue = Umbraco.GetDictionaryValue("Learn more");

    var cookieDialogTheme = _settingsService.Get<string>(Model, "cookieDialogTheme", defaultValue: "white");

    var cookieDialogPostion = _settingsService.Get<string>(Model, "cookieDialogPostion");
    if (cookieDialogPostion == "")
    {
        cookieDialogPostion = "float-left";
    }
}
<div role="dialog" arial-label="Cookie Consent" class="cookie-consent cookie-consent--@(cookieDialogTheme) cookie-consent--@(cookieDialogPostion) hide--important">
    <div class="cookie-consent__text">
        @cookieDialogText
        @if (cookieDialogLearnMoreLink != null)
        {
            <div class="cookie-consent__link">
                <a target="@cookieDialogLearnMoreLink.Target" href="@cookieDialogLearnMoreLink.Url" title="@learnMoreDictionaryValue">@learnMoreDictionaryValue</a>
            </div>
        }
    </div>
    <button class="button">@dismissButtonText</button>
</div>]]></View>
    <View path="Shared/Footer.cshtml"><![CDATA[@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.Site>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inject Igloo.Core.Services.ISettingsService _settingsService;
@using Umbraco.Cms.Web.Common.Models
@{

    var footerTheme = _settingsService.Get<string>(Umbraco.AssignedContentItem, "footerBackgroundColor") == "white" ? "footer--light" : "footer--dark light-color";
    var scrollToTopDictionaryValue = Umbraco.GetDictionaryValue("Scroll to top");

    var containerWidth = _settingsService.Get<string>(Umbraco.AssignedContentItem, "footerContainerWidth");
    var containerWidthClass = "container container--standard";
    switch (containerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container container--standard";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container container--fluid";
            break;
    }

    var toTopButtonColor = _settingsService.Get<string>(Umbraco.AssignedContentItem, "toTopButtonColor");
}

<footer class="footer @(footerTheme)">

    @if (Model.FooterColumns != null && Model.FooterColumns.Any())
    {
        <div class="@(containerWidthClass) footer-grid">
            <div class="row">

                @foreach (var column in Model.FooterColumns)
                {

                    var columnWidth = column.Settings?.Value<string>("columnWidth", "")?.Replace("%", "") ?? "100";
                    var columnType = column.Content.ContentType.Alias;

                    switch (columnWidth)
                    {
                        case "":
                            columnWidth = "col";
                            break;
                        case "25":
                            columnWidth = "col-25 col-m-50";
                            break;
                        case "20":
                            columnWidth = "col-20 col-m-33";
                            break;
                        case "10":
                            columnWidth = "col-10 col-m-20";
                            break;
                        default:
                            columnWidth = "col-" + columnWidth;
                            break;
                    }

                    <div class="@(columnWidth) col-s-100">

                        @if (columnType == "lineBreak")
                        {
                            @await Html.PartialAsync("~/Views/Partials/Shared/LineBreak.cshtml", column)
                        }
                        else
                        {
                            @await Html.PartialAsync("~/Views/Partials/Widgets/Footer/" + columnType + ".cshtml", column)
                        }

                    </div>
                }

            </div>
        </div>
    }

    @if (Model.BottomText != "")
    {
        <p class="footer__bottom-info">
            @Model.BottomText
        </p>
    }

    <a href="https://www.iglootheme.com/" target="_blank" rel="noopener" class="igloo-symbol" title="Powered by Igloo" aria-label="Powered by Igloo" tabindex="-1">
        <svg width="26px" height="14px" viewBox="0 0 26 14" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true">
            <defs></defs>
            <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                <g id="igloo_symbol" fill="#FFFFFF" fill-rule="nonzero">
                    <path d="M1.3109849,13.1780822 C1.3109849,6.63398364 6.54433521,1.3289436 13,1.3289436 C19.4556648,1.3289436 24.6890151,6.63398364 24.6890151,13.1780822 L26,13.1780822 C26,5.90002836 20.1797017,4.45652266e-16 13,0 C5.82029824,-4.45652266e-16 8.79259875e-16,5.90002836 0,13.1780822 L1.3109849,13.1780822 Z"></path>
                    <path d="M5.87840007,13.1780822 C5.87840012,9.15559265 9.1079176,5.89472064 13.0917293,5.89472064 C17.0755409,5.89472064 20.3050584,9.15559265 20.3050585,13.1780822 L22.260274,13.1780822 C22.2602738,8.06377407 18.154173,3.91780822 13.0890411,3.91780822 C8.02390909,3.91780822 3.9178083,8.06377407 3.91780822,13.1780822 L5.87840007,13.1780822 Z"></path>
                    <path d="M13.1780822,8.01369863 C10.3258719,8.01369863 8.01369863,10.3258719 8.01369863,13.1780822 L18.3424658,13.1780822 C18.3424658,10.3258719 16.0302925,8.01369863 13.1780822,8.01369863 Z"></path>
                </g>
            </g>
        </svg>
    </a>

</footer>

<a href="#content" title="@scrollToTopDictionaryValue" class="to-top to-top--@(toTopButtonColor)">
    <i class="fa fa-chevron-up" aria-hidden="true"></i>
    <span class="sr-only">@scrollToTopDictionaryValue</span>
</a> ]]></View>
    <View path="Shared/Header.cshtml"><![CDATA[@inherits UmbracoViewPage
@using Umbraco.Cms.Core.Models;
@inject Igloo.Core.Services.ISettingsService _settingsService;
@using Umbraco.Cms.Core.Models.PublishedContent;
@{
    var site = Model.Root();
    var headerLogoOnLight = _settingsService.Get<MediaWithCrops>(Umbraco.AssignedContentItem, "headerLogoOnLight");
    var headerLogoOnDark = _settingsService.Get<MediaWithCrops>(Umbraco.AssignedContentItem, "headerLogoOnDark");
    var headerTheme = _settingsService.Get<string>(Umbraco.AssignedContentItem, "headerBackgroundColor") == "white" ? "top--light" : "top--dark";

    var siteName = _settingsService.Get<string>(Umbraco.AssignedContentItem, "siteName");
    var companyName = _settingsService.Get<string>(Umbraco.AssignedContentItem, "companyName");
    var headerLayout = _settingsService.Get<string>(Umbraco.AssignedContentItem, "headerLayout");
    var searchPage = site.FirstChildOfType("search");

    var transparentHeader = Model.Value<bool>("transparentHeader");
    var scrollClass = "";

    if (transparentHeader)
    {
        var transparentHeaderColor = Model.Value<string>("transparentHeaderColor")?.ToString();
        scrollClass = transparentHeaderColor == "white" ? "top--scroll-bg top--scroll-light" : "top--scroll-bg top--scroll-dark";
    }

    var containerWidth = _settingsService.Get<string>(Model, "headerContainerWidth");
    var containerWidthClass = "";
    switch (containerWidth)
    {
        case "small":
            containerWidthClass = "top--small-width";
            break;
        case "standard":
            containerWidthClass = "top--standard-width";
            break;
        case "big":
            containerWidthClass = "top--big-width";
            break;
        case "full width":
            containerWidthClass = "top--full-width";
            break;
    }
}
<header class="top @(headerTheme) @(containerWidthClass) @(scrollClass) top--@(headerLayout)">
    <div class="top-inner">

        <div class="top__left">
            <a href="@site.Url()" class="logo logo--on-light" title="@siteName">
                <img src="@(headerLogoOnLight?.Url())" alt="@companyName">
            </a>
            <a href="@site.Url()" class="logo logo--on-dark" title="@siteName">
                <img src="@(headerLogoOnDark?.Url())" alt="@companyName">
            </a>
        </div>

        @await Html.PartialAsync("~/Views/Partials/Shared/Navigation.cshtml")

        <nav class="mobile-actions">
            <ul>
                @if (searchPage != null)
                {
                    <li class="toggle-search">
                        <a href="#" title="@Umbraco.GetDictionaryValue("Search")">
                            <i class="fa fa-search" aria-hidden="true"></i>
                        </a>
                    </li>
                }
                <li>
                    <button class="hamburger" type="button" aria-label="Show navigation">
                        <span class="hamburger-box">
                            <span class="hamburger-inner"></span>
                        </span>
                    </button>
                </li>
            </ul>
        </nav>
    </div>
</header>]]></View>
    <View path="Shared/LineBreak.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.LineBreak)Model.Content;

    var drawLine = content.DrawLine ? "line-break--divider" : "";
}
<div class="line-break @(drawLine)"
     @if (content.CustomHeight != "") { <text>
     style="height: @(content.CustomHeight);"
     </text>  }>
</div>]]></View>
    <View path="Shared/LoginForm.cshtml"><![CDATA[@inherits UmbracoViewPage<MemberLoginViewModel>
@using Igloo.Core.Models;
@using Igloo.Core.Controllers;
@{
    MemberLoginViewModel loginModel = Model;
}

@using (Html.BeginUmbracoForm<IglooMemberController>(nameof(IglooMemberController.Login)))
{
    @Html.HiddenFor(m => loginModel.RedirectUrl)

    @Html.ValidationSummary("loginModel", true)

    @Html.LabelFor(m => loginModel.Username, Umbraco.GetDictionaryValue("Username"))
    @Html.TextBoxFor(m => loginModel.Username, new { autofocus = "true" })
    @Html.ValidationMessageFor(m => loginModel.Username)

    <div class="password-input">
        @Html.LabelFor(m => loginModel.Password, Umbraco.GetDictionaryValue("Password"))
        <button class="password-input__show "><i class="fa fa-eye" aria-hidden="true"></i> @Umbraco.GetDictionaryValue("Show Password")</button>
        <button class="password-input__hide" style="display: none;"><i class="fa fa-eye-slash" aria-hidden="true"></i> @Umbraco.GetDictionaryValue("Hide Password")</button>
            
        @Html.PasswordFor(m => loginModel.Password)
    </div>
    @Html.ValidationMessageFor(m => loginModel.Password)

    <p>
        <label class="cb-wrap">
            @Html.CheckBoxFor(m => loginModel.RememberMe) @Umbraco.GetDictionaryValue("Remember Me")
            <span class="checkmark"></span>
        </label>
    </p>

    <button class="button button--block">@Umbraco.GetDictionaryValue("Login")</button>
}]]></View>
    <View path="Shared/Meta.cshtml"><![CDATA[@inherits UmbracoViewPage
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Web.Common.PublishedModels
@using System.Globalization
@inject Igloo.Core.Services.ISettingsService _settingsService;
@inject IPublishedValueFallback _publishedValueFallback;
@{
    var site = Model.Root() as ContentModels.Site;
    var theme = new Theme(Umbraco.AssignedContentItem, _publishedValueFallback);
    var page = new Page(Umbraco.AssignedContentItem, _publishedValueFallback);

    var title = (
        !string.IsNullOrEmpty(page.MetaTitle) ?
        page.MetaTitle :
        page.Name) +
        _settingsService.Get<string>(Model, "titleSignature");

    var description = !string.IsNullOrEmpty(page.MetaDescription) ?
        page.MetaDescription : site.MetaDescription;

    var ogImage = site.MetaImage?.Url(mode: UrlMode.Absolute) ?? "";
    ogImage = page.MetaImage?.Url(mode: UrlMode.Absolute) ?? ogImage;
    ogImage = page.Value<IPublishedContent>("postImage")?.Url(mode: UrlMode.Absolute) ?? ogImage;

    var twitterUsername = _settingsService.Get<string>(Model, "twitterUsername");

    var iconBackgroundColor = _settingsService.Get<string>(Model, "iconBackgroundColor") ?? "#FFFFFF";

    var favicon = _settingsService.Get<IPublishedContent>(Model, "favicon");
    var appicon = _settingsService.Get<IPublishedContent>(Model, "appIcon");

    var siteName = _settingsService.Get<string>(Model, "siteName");
    var email = _settingsService.Get<string>(Model, "companyEmail");
    var latitude = _settingsService.Get<string>(Model, "companyLatitude");
    var longitude = _settingsService.Get<string>(Model, "companyLongitude");
    var phoneNumber = _settingsService.Get<string>(Model, "companyPhoneNumber");
}
<meta charset="utf-8">
<meta http-equiv="x-ua-compatible" content="ie=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">

<title>@(title)</title>
<meta name="description" content="@(description)">

<meta property="og:title" content="@(title)" />
<meta property="og:type" content="website" />
<meta property="og:description" content="@(description)" />
<meta property="og:url" content="@(Model.Url(mode: UrlMode.Absolute))">
<meta name="twitter:card" content="summary_large_image">

@if (!string.IsNullOrEmpty(twitterUsername))
{
    <meta name="twitter:site" content="@(twitterUsername)">
}

<meta name="twitter:title" content="@(title)">
<meta name="twitter:description" content="@(description)">

@if (!string.IsNullOrEmpty(ogImage))
{
    <meta property="og:image" content="@Html.Raw(ogImage)?upscale=false&width=1200" />
    <meta name="twitter:image" content="@Html.Raw(ogImage)?upscale=false&width=1200">
}

@if (!string.IsNullOrEmpty(siteName))
{
    <meta name="og:site_name" content="@siteName" />
}
@if (!string.IsNullOrEmpty(email))
{
    <meta name="og:email" content="@email" />
}

@if (!string.IsNullOrEmpty(latitude) && !string.IsNullOrEmpty(longitude))
{
    <meta name="og:latitude" content="@latitude" />
    <meta name="og:longitude" content="@longitude" />
}

@if (!string.IsNullOrEmpty(phoneNumber))
{
    <meta name="og:phone_number" content="@phoneNumber" />
}

@if (appicon != null)
{
    <link rel="apple-touch-icon" sizes="57x57" href="@appicon.GetCropUrl(57, 57)">
    <link rel="apple-touch-icon" sizes="60x60" href="@appicon.GetCropUrl(60, 60)">
    <link rel="apple-touch-icon" sizes="72x72" href="@appicon.GetCropUrl(72, 72)">
    <link rel="apple-touch-icon" sizes="76x76" href="@appicon.GetCropUrl(76, 76)">
    <link rel="apple-touch-icon" sizes="114x114" href="@appicon.GetCropUrl(114, 114)">
    <link rel="apple-touch-icon" sizes="120x120" href="@appicon.GetCropUrl(120, 120)">
    <link rel="apple-touch-icon" sizes="144x144" href="@appicon.GetCropUrl(144, 144)">
    <link rel="apple-touch-icon" sizes="152x152" href="@appicon.GetCropUrl(152, 152)">
    <link rel="apple-touch-icon" sizes="180x180" href="@appicon.GetCropUrl(180, 180)">
}
@if (favicon != null)
{
    <link rel="icon" type="image/png" sizes="192x192" href="@favicon.GetCropUrl(192, 192)">
    <link rel="icon" type="image/png" sizes="32x32" href="@favicon.GetCropUrl(32, 32)">
    <link rel="icon" type="image/png" sizes="96x96" href="@favicon.GetCropUrl(96, 96)">
    <link rel="icon" type="image/png" sizes="16x16" href="@favicon.GetCropUrl(16, 16)">
    <meta name="msapplication-TileColor" content="@(iconBackgroundColor)">
    <meta name="msapplication-TileImage" content="@favicon.GetCropUrl(144, 144)">
}

@if (page.HideFromSearchEngines)
{
    <meta name="robots" content="noindex, nofollow">
}

@if (Model.Cultures != null && Model.Cultures.Count > 1)
{
    foreach (var (culture, infos) in Model.Cultures)
    {
        CultureInfo ci = new CultureInfo(culture);
        <link rel="alternate" href="@Model.Url(culture, mode: UrlMode.Absolute)" hreflang="@ci.Name" />
    }
}]]></View>
    <View path="Shared/Navigation.cshtml"><![CDATA[@inherits UmbracoViewPage
@using Umbraco.Cms.Core.Models.PublishedContent;
@using System.Globalization
@using System.Threading
@using System.Linq
@using Igloo.Core.Extensions;
@using Umbraco.Cms.Web;
@using Umbraco.Cms.Web.Common.PublishedModels
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inject Umbraco.Cms.Core.Security.IMemberManager _memberManager;
@{
    var site = (ContentModels.Site)Model.Root();
    var selection = site?.Children()
        ?.Where(x => x.IsVisible() && x.ContentType.Alias != "websiteSettings" && x.ContentType.Alias != "sitemap" && x.ContentType.Alias != "search")
        .ToList() ?? new List<IPublishedContent>();
    const string selectedClass = "selected";
    var searchPage = site.FirstChild<Search>();
    var searchDictionaryValue = Umbraco.GetDictionaryValue("Search");
    var expandDictionaryValue = Umbraco.GetDictionaryValue("Show Subpages");
}
<div class="top__middle">
    <nav class="main-nav main-nav--main">
        <ul class="main-nav__ul main-nav__ul--first">
            @if (site.HeaderPhoneNumber != "")
            {
                <li class="main-nav__li main-nav__li--contact">
                    <a href="tel:@(site.HeaderPhoneNumber)" class="main-nav__a">
                        <i class="fa fa-phone" aria-hidden="true"></i> @site.HeaderPhoneNumber
                    </a>
                </li>
            }
            @if (site.HeaderEmail != "")
            {
                <li class="main-nav__li main-nav__li--contact">
                    <a href="mailto:@(site.HeaderEmail)" class="main-nav__a">
                        <i class="fa fa-envelope" aria-hidden="true"></i> @site.HeaderEmail
                    </a>
                </li>
            }

            @if (site.CustomNavigation != null && site.CustomNavigation.Any())
            {
                foreach (var navItem in site.CustomNavigation)
                {
                    if (navItem.Content is BigNavigationItem bigNav)
                    {
                        var link = bigNav.NavLink != null ? bigNav.NavLink.Url : "#";
                        var name = bigNav.NavName;

                        <li class="main-nav__li main-nav__li--big @((link == Model.Url()) ? "selected" : "")">
                            <a class="main-nav__a" href="@link">@name <i class="fa fa-chevron-down" aria-hidden="true"></i><button class="expand" tabindex="0" aria-label="@expandDictionaryValue"><i class="fa fa-plus" aria-hidden="true"></i></button></a>
                            <ul class="main-nav__ul main-nav__ul--second main-nav__ul--big">
                                <li>
                                    @foreach (var grid in bigNav.NavigationGrid)
                                    {
                                        @Html.Partial("~/Views/Partials/Shared/NavigationGrid.cshtml", grid)
                                    }
                                </li>
                            </ul>
                        </li>
                    }

                    if (navItem.Content is NavigationItem nav)
                    {
                        var link = nav.NavLink?.Url ?? "#";
                        var name = nav.NavName;

                        <li class="main-nav__li @((link == Model.Url()) ? "selected" : "")">
                            @if (nav.NavChildren != null && nav.NavChildren.Any())
                            {
                                <a class="main-nav__a" href="@(link)">@(name) <i class="fa fa-chevron-down" aria-hidden="true"></i><button class="expand" tabindex="0" aria-label="@expandDictionaryValue"><i class="fa fa-plus" aria-hidden="true"></i></button></a>
                                <ul class="main-nav__ul main-nav__ul--second">
                                    @foreach (var navChild in nav.NavChildren)
                                    {
                                        if (!(navChild.Content is NavigationItem navChildContent))
                                        {
                                            continue;
                                        }

                                        var childName = navChildContent.NavName;
                                        var childLink = navChildContent.NavLink;

                                        var babys = navChildContent.NavChildren
                                            .Where(x => x.Content is NavigationItem)
                                            .Select(x => x.Content).Cast<NavigationItem>()
                                            .ToList() ?? new List<NavigationItem>();

                                        if (childLink != null)
                                        {
                                            <li class="main-nav__li @((childLink.Url == Model.Url()) ? "selected" : "")">

                                                @if (babys.Count > 0)
                                                {
                                                    <a class="main-nav__a" href="@(childLink.Url)">@(childName) <i class="fa fa-chevron-right" aria-hidden="true"></i><button class="expand" tabindex="0" aria-label="@expandDictionaryValue"><i class="fa fa-plus" aria-hidden="true"></i></button></a>
                                                    <ul class="main-nav__ul main-nav__ul--third">
                                                        @foreach (var baby in babys)
                                                        {
                                                            if (baby.NavLink != null)
                                                            {
                                                                var babyName = baby.NavName;
                                                                var babyLink = baby.NavLink;

                                                                <li class="main-nav__li @((babyLink.Url == Model.Url()) ? "selected" : "")">
                                                                    <a class="main-nav__a" href="@(babyLink.Url)">@(babyName)</a>
                                                                </li>
                                                            }

                                                        }
                                                    </ul>
                                                }
                                                else
                                                {
                                                    <a class="main-nav__a" href="@(childLink.Url)">@(childName)</a>
                                                }
                                            </li>
                                        }
                                    }
                                </ul>
                            }
                            else
                            {
                                <a class="main-nav__a" href="@(link)">@(name)</a>
                            }
                        </li>
                    }
                }
            }
            else
            {
                if (site.IsVisible())
                {
                    <li class="main-nav__li @(Model.IsAncestorOrSelf(site) ? selectedClass : null)">
                        <a class="main-nav__a" href="@site.Url()">@site.Name</a>
                    </li>
                }

                foreach (var item in selection)
                {
                    var subpages = item.Children()?.Where(x => x.IsVisible()).ToList() ?? new List<IPublishedContent>();

                    <li class="main-nav__li @(item.IsAncestorOrSelf(Model) ? selectedClass : null)">
                        @if (subpages.Count > 0 && item.ContentType.Alias != "feed")
                        {
                            <a class="main-nav__a" href="@item.Url()">@item.Name <i class="fa fa-chevron-down" aria-hidden="true"></i><button class="expand" tabindex="0" aria-label="@expandDictionaryValue"><i class="fa fa-plus" aria-hidden="true"></i></button></a>
                            <ul class="main-nav__ul main-nav__ul--second">
                                @foreach (var subpage in subpages)
                                {
                                    var babys = subpage.Children()?.Where(x => x.IsVisible()).ToList() ?? new List<IPublishedContent>();

                                    <li class="main-nav__li @(subpage.IsAncestorOrSelf(Model) ? selectedClass : null)">
                                        @if (babys.Count > 0 && subpage.ContentType.Alias != "feed")
                                        {
                                            <a class="main-nav__a" href="@subpage.Url()">@subpage.Name <i class="fa fa-chevron-right" aria-hidden="true"></i><button class="expand" tabindex="0" aria-label="@expandDictionaryValue"><i class="fa fa-plus" aria-hidden="true"></i></button></a>
                                            <ul class="main-nav__ul main-nav__ul--third">
                                                @foreach (var baby in babys)
                                                {
                                                    <li class="main-nav__li @(baby.IsAncestorOrSelf(Model) ? selectedClass : null)">
                                                        <a class="main-nav__a" href="@baby.Url()">@baby.Name</a>
                                                    </li>
                                                }
                                            </ul>
                                        }
                                        else
                                        {
                                            <a class="main-nav__a" href="@subpage.Url()">@subpage.Name</a>
                                        }

                                    </li>
                                }
                            </ul>
                        }
                        else if (item.ContentType.Alias != "sitemap")
                        {
                            <a class="main-nav__a" href="@item.Url()">@item.Name</a>
                        }
                    </li>
                }
            }

            @if (site.EnableSubHeader)
            {
                var subHeaderLeft = site.SubHeaderLeft;
                var subHeaderRight = site.SubHeaderRight;

                if (subHeaderLeft != null)
                {
                    ListMenuItems(subHeaderLeft);
                }

                if (subHeaderRight != null)
                {
                    ListMenuItems(subHeaderRight);
                }
            }

            @{RenderLanguageList(site, "show--m", expandDictionaryValue);}

            @{RenderHeaderButtons(site, "show--m");}

        </ul>

    </nav>
</div>

<div class="top__right hide--m">
    <nav class="main-nav main-nav--side">
        <ul class="main-nav__ul main-nav__ul--first">
            @if (searchPage != null)
            {
                <li class="main-nav__li toggle-search">
                    <a class="main-nav__a" href="#" title="@searchDictionaryValue" aria-label="search">
                        <i class="fa fa-search" aria-hidden="true"></i>
                    </a>
                </li>
            }

            @{RenderLanguageList(site, "", expandDictionaryValue);}

            @{RenderHeaderButtons(site, "");}
        </ul>

    </nav>
</div>

@functions {
    string Capitalize(string word)
    {
        if (!string.IsNullOrWhiteSpace(word))
        {
            return (char.ToUpper(word[0]) + word.Substring(1));
        }
        return "";
    }

    void RenderHeaderButtons(ContentModels.Site site, string classes)
    {
        if (site.HeaderButtons != null)
        {
            foreach (var button in site.HeaderButtons)
            {
                <li class="main-nav__li main-nav__li--btn @classes">
                    @Html.Partial("~/Views/Partials/Widgets/Renderbutton.cshtml", button)
                </li>
            }
        }
    }

    private void RenderLanguageList(ContentModels.Site site, string classes, string expandDictionaryValue)
    {

        if ((Model.Cultures != null && Model.Cultures.Count > 1 && !site.DisableLanguagePicker) || (site.Cultures != null && site.Cultures.Count > 1 && !site.DisableLanguagePicker))
        {
            var currentLanguageTitle = site.Value("languageName", fallback: Fallback.ToDefaultValue, defaultValue: Capitalize(Thread.CurrentThread.CurrentUICulture.NativeName).ToString());
            var currentFlagUrl = site.Value<IPublishedContent>("languageFlag")?.Url() != null ? site.Value<IPublishedContent>
            ("languageFlag").Url() : Model.GetCulture().GetFlag();

            <li class="main-nav__li main-nav__li--lang @classes">
                <a class="main-nav__a" href="#"><img src="@currentFlagUrl" alt="@currentLanguageTitle" /> <span>@currentLanguageTitle</span><button class="expand" tabindex="0" aria-label="@expandDictionaryValue"><i class="fa fa-plus" aria-hidden="true"></i></button></a>
                <ul class="main-nav__ul main-nav__ul--second go-right">
                    @foreach (var (culture, infos) in site.Cultures)
                    {
                        CultureInfo ci = new CultureInfo(culture);
                        var title = site.Value("languageName", fallback: Fallback.ToDefaultValue, defaultValue: Capitalize(ci.NativeName).ToString(), culture: ci.Name);
                        var flagUrl = site.Value<IPublishedContent>("languageFlag", culture: ci.Name)?.Url() != null ? site.Value<IPublishedContent>("languageFlag", culture: ci.Name).Url() : infos.GetFlag();

                        <li class="main-nav__li">
                            <a class="main-nav__a" href="@(!Model.Cultures.ContainsKey(culture) ? site.Url(culture) : Model.Url(culture) )" title="@title"><img src="@flagUrl" alt="@title" />&nbsp;<span>@title</span></a>
                        </li>
                    }
                </ul>
            </li>
        }
    }

    async private void ListMenuItems(Umbraco.Cms.Core.Models.Blocks.BlockListModel items)
    {
        var expandDictionaryValue = Umbraco.GetDictionaryValue("Show Subpages");

        foreach (var itemBlock in items)
        {
            if (!(itemBlock.Content is ContentModels.SubHeaderItem item))
            {
                continue;
            }

            if ((item.Visibility == null || item.Visibility.ToString() == "Always")
            || (item.Visibility.ToString() == "Logged Out" && !_memberManager.IsLoggedIn())
            || (item.Visibility.ToString() == "Logged In" && _memberManager.IsLoggedIn()))
                if (true)
                {

                    var title = item.Title;
                    if (_memberManager.IsLoggedIn())
                    {
                        var currentMember = await _memberManager.GetCurrentMemberAsync();
                        title = title.Replace("{MemberName}", currentMember?.Name);
                    }
                    var link = item.Link;
                    var icon = item.Icon;
                    var iconColor = item.CustomIconColor;
                    var navChildren = item.NavChildren;

                    if (link != null)
                    {
                        <li class="main-nav__li show--m top-nav-mobile">
                            <a class="main-nav__a" href="@link.Url" target="@link.Target"
                               @if (link.Target == "_blank") { <text> rel="noopener" </text> }>
                                @if (icon != "")
                                {
                                    <i class="fa @icon pre-top__icon" style="@(iconColor != "" ? "color:" + iconColor + "" : "")" aria-hidden="true"></i>
                                }
                                @title

                                @if (navChildren != null && navChildren.Any())
                                {
                                    <button class="expand" tabindex="0" aria-label="@expandDictionaryValue"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                }
                            </a>

                            @if (navChildren != null && navChildren.Any())
                            {
                                <ul class="main-nav__ul main-nav__ul--second">
                                    @{ListMenuItems(navChildren);}
                                </ul>
                            }
                        </li>
                    }
                }
        }
    }
}]]></View>
    <View path="Shared/NavigationGrid.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Web.Common.Models
@{
    @*=====================
    # Grid Settings
    =====================*@
    var content = (ContentModels.Grid)Model.Content;
    var settings = (ContentModels.GridSettings)Model.Settings;
    
    var containerWidthClass = "container";
    
    switch (settings.ContainerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container-fluid";
            break;
    }
    
    var removeColumnGutterClass = settings.RemoveColumnGutter ? "row--flat" : "";
    var compactClass = settings.Compact ? "grid--compact" : "";
    
    var animateClass = settings.Animate ? "animate" : "";
    
    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "white-bg" : backgroundColor + "-bg";
    
    var backgroundMediaUrl = settings.BackgroundImage != null ? settings.BackgroundImage.Url() : "";
    if (backgroundMediaUrl != "")
    {
        backgroundColorClass = "";
    }
}
@if (content.Columns != null && content.Columns.Any())
{
    <div class="grid grid--nav @(backgroundColorClass) @(textColorClass) @(removeColumnGutterClass) @(compactClass) @(animateClass)">
        <div class="@(containerWidthClass) @(settings.HorizontalScrollMobile ? "container--mobile-scroll" : "")">
            <div class="row @(removeColumnGutterClass) row--@(settings.HorizontalAlignColumns) row--v-@(settings.VerticalAlignColumns) @(settings.HorizontalScrollMobile ? "row--no-wrap-s" : "") @(settings.AdjustColumnHeight ? "row--v-grow" : "")">

                @foreach (BlockListItem column in content.Columns)
                {
                    var columnWidth = column.Settings?.Value<string>("columnWidth", "")?.Replace("%", "") ?? "100";
                    var columnType = column.Content.ContentType.Alias;
                    
                    switch (columnWidth)
                    {
                        case "":
                            columnWidth = "col";
                            break;
                        case "25":
                            columnWidth = "col-25 col-m-50";
                            break;
                        case "20":
                            columnWidth = "col-20 col-m-33";
                            break;
                        case "10":
                            columnWidth = "col-10 col-m-20";
                            break;
                        default:
                            columnWidth = "col-" + columnWidth;
                            break;
                    }

                    <div class="@(columnWidth) @(settings.HorizontalScrollMobile ? "col-s-90" : "col-s-100")">
                        @if (columnType == "lineBreak"){
                            @await Html.PartialAsync("~/Views/Partials/Shared/LineBreak.cshtml", column)
                        } else {
                            @await Html.PartialAsync("~/Views/Partials/Widgets/Grid/"+columnType+".cshtml", column, new ViewDataDictionary(ViewData) { { "containerWidth", settings.ContainerWidth }, {"order", 1} })
                        }
                    </div>
                }
            </div>
        </div>
        @if (backgroundMediaUrl != "")
        {
            <div class="block__background lazyload"
                 data-bgset="@(backgroundMediaUrl)?upscale=false&width=1280 1280w,
        		@(backgroundMediaUrl)?upscale=false&width=1600 1600w,
        		@(backgroundMediaUrl)?upscale=false&width=1920 1920w"
                 data-sizes="auto">
            </div>
        }
    </div>
}
]]></View>
    <View path="Shared/PhotoSwipe.cshtml"><![CDATA[@inherits UmbracoViewPage
<div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="pswp__bg"></div>
    <div class="pswp__scroll-wrap">
 
       <div class="pswp__container">
           <div class="pswp__item"></div>
           <div class="pswp__item"></div>
           <div class="pswp__item"></div>
        </div>
 
        <div class="pswp__ui pswp__ui--hidden">
            <div class="pswp__top-bar">
                <div class="pswp__counter"></div>
                <button class="pswp__button pswp__button--close" title="@Umbraco.GetDictionaryValue("Close") (Esc)"></button>
                <button class="pswp__button pswp__button--share" title="@Umbraco.GetDictionaryValue("Share")"></button>
                <button class="pswp__button pswp__button--fs" title="@Umbraco.GetDictionaryValue("Fullscreen")"></button>
                <button class="pswp__button pswp__button--zoom" title="Zoom"></button>
                <div class="pswp__preloader">
                    <div class="pswp__preloader__icn">
                      <div class="pswp__preloader__cut">
                        <div class="pswp__preloader__donut"></div>
                      </div>
                    </div>
                </div>
            </div>
            <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                <div class="pswp__share-tooltip"></div> 
            </div>
            <button class="pswp__button pswp__button--arrow--left" title="@Umbraco.GetDictionaryValue("Previous")">
            </button>
            <button class="pswp__button pswp__button--arrow--right" title="@Umbraco.GetDictionaryValue("Next")">
            </button>
            <div class="pswp__caption">
                <div class="pswp__caption__center"></div>
            </div>
        </div>
    </div>
</div>]]></View>
    <View path="Shared/SearchModal.cshtml"><![CDATA[@inherits UmbracoViewPage
@{
    var searchPage = Model.Root().Children<Search>()?.FirstOrDefault();
}
@if(searchPage != null){
    <div class="search" role="dialog" arial-label="@Umbraco.GetDictionaryValue("Search")">
    
    	<div class="search__stage">
    
            <form action="@searchPage.Url()" class="search__form">
                <label for="page-search-input" class="sr-only">@Umbraco.GetDictionaryValue("Search")</label>
                <i class="fa fa-search" aria-hidden="true"></i>
                <input type="text" autocomplete="off" name="search" id="page-search-input" required class="search__input" placeholder="@Umbraco.GetDictionaryValue("Search Placeholder")">
                <div class="search__loader"></div>

                <div class="search__autocomplete hide">

                    <div class="search__no-results hide">
                        @Umbraco.GetDictionaryValue("No Results Found")
                    </div>

                    <ul class="search__suggest">
                    </ul>
                    <button class="button button--block">@Umbraco.GetDictionaryValue("Show all results") <span class="search__result-count"></span></button>
                </div>
            </form>
    	</div>
    	
    	<button class="search__close" title="@Umbraco.GetDictionaryValue("Close") (Esc)" tabindex="0"><i class="fa fa-times" aria-hidden="true"></i></button>
    
    </div>
    
    <button class="search-overlay"></button>
}]]></View>
    <View path="Shared/ShareButtons.cshtml"><![CDATA[@inherits UmbracoViewPage
@{
	var shareUrl = Umbraco.AssignedContentItem.Url(mode: UrlMode.Absolute);
}
<div class="share">
	<h6>@Umbraco.GetDictionaryValue("Share")</h6>
	<ul class="share-list">
		<li class="share-facebook"><a href="http://www.facebook.com/sharer.php?u=@(shareUrl)" data-height="520" data-width="350" target="_blank" title="Facebook"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
		<li class="share-twitter"><a href="http://twitter.com/share?url=@(shareUrl)" data-height="240" data-width="450" target="_blank" title="Twitter"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
		<li class="share-linkedin"><a href="https://www.linkedin.com/shareArticle?url=@(shareUrl)" data-height="520" data-width="350" target="_blank" title="Linked In"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
		<li class="share-email"><a href="mailto:?body=@(shareUrl)" title="@Umbraco.GetDictionaryValue("Email")"><i class="fa fa-envelope-o" aria-hidden="true"></i></a></li>
	</ul>
</div>]]></View>
    <View path="Shared/SubHeader.cshtml"><![CDATA[@inherits UmbracoViewPage
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Extensions;
@inject Umbraco.Cms.Core.Security.IMemberManager _memberManager;
@inject Igloo.Core.Services.ISettingsService _settingsService;

@{
    var site = Model.AncestorOrSelf<ContentModels.Site>(1);
    var headerTheme = _settingsService.Get<string>(Model, "headerBackgroundColor") == "white" ? "pre-top--light" : "pre-top--dark";
    var scrollClass = "";
    var transparentHeader = Model.Value<bool>("transparentHeader");
    var transparentHeaderColor = Model.Value<string>("transparentHeaderColor");

    var subHeaderLeft = site.SubHeaderLeft;
    var subHeaderRight = site.SubHeaderRight;

    if (transparentHeader)
    {
        scrollClass = transparentHeaderColor == "white" ? "pre-top--scroll-bg pre-top--scroll-light" : "pre-top--scroll-bg pre-top--scroll-dark";
    }

    var containerWidth = _settingsService.Get<string>(Model, "headerContainerWidth");
    var containerWidthClass = "container";
    switch (containerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container-fluid";
            break;
    }
}

<div class="pre-top @(headerTheme) @(scrollClass)">

    <div class="@(containerWidthClass)">
        <div class="row">
            <div class="col-100">

                <div class="pre-top__inner">

                    @if (subHeaderLeft != null)
                    {
                        <ul class="pre-top__list pre-top__list--left">
                            @{ListMenuItems(subHeaderLeft);}
                        </ul>
                    }

                    @if (subHeaderRight != null)
                    {
                        <ul class="pre-top__list pre-top__list--right">
                            @{ListMenuItems(subHeaderRight);}
                        </ul>
                    }

                </div>

            </div>
        </div>
    </div>

</div>

@functions{

    async void ListMenuItems(Umbraco.Cms.Core.Models.Blocks.BlockListModel items)
    {

        foreach (var itemBlock in items)
        {

            if (!(itemBlock.Content is ContentModels.SubHeaderItem item))
            {
                continue;
            }

            if ((item.Visibility == null || item.Visibility.ToString() == "Always")
                || (item.Visibility.ToString() == "Logged Out" && !_memberManager.IsLoggedIn())
                || (item.Visibility.ToString() == "Logged In" && _memberManager.IsLoggedIn()))
            {

                var itemTitle = item.Title;
                if (_memberManager.IsLoggedIn())
                {
                    var currentMember = await _memberManager.GetCurrentMemberAsync();
                    itemTitle = itemTitle.Replace("{MemberName}", currentMember?.Name);
                }

                <li>
                    @if (item.Link != null)
                    {
                        <a href="@item.Link.Url" target="@item.Link.Target"
                           @if (item.Link.Target == "_blank") { <text> rel="noopener" </text> }>
                            @if (item.Icon != "")
                            {
                                <i class="fa @item.Icon pre-top__icon" style="@(item.CustomIconColor != "" ? "color:" + item.CustomIconColor + "" : "")" aria-hidden="true"></i>
                            }
                            @itemTitle

                            @if (item.NavChildren != null && item.NavChildren.Count() > 0)
                            {
                                <i class="fa fa-caret-down" aria-hidden="true"></i>
                            }
                        </a>
                    }
                    else
                    {
                        if (item.Icon != "")
                        {
                            <i class="fa @item.Icon pre-top__icon" style="@(item.CustomIconColor != "" ? "color:" + item.CustomIconColor + "" : "")" aria-hidden="true"></i>
                        }
                        @itemTitle
                    }

                    @if (item.NavChildren != null && item.NavChildren.Count() > 0)
                    {
                        <ul>
                            @{ListMenuItems(item.NavChildren);}
                        </ul>
                    }
                </li>
            }
        }
    }
}]]></View>
    <View path="Shared/ThemeExplorer.cshtml"><![CDATA[@inherits UmbracoViewPage
@inject Igloo.Core.Services.ISettingsService _settingsService;
<div class="theme-explorer" data-current-node="@Umbraco.AssignedContentItem.Id" data-theme-node="@(Umbraco.AssignedContentItem?.Root()?.FirstChildOfType("websiteSettings")?.FirstChildOfType("theme")?.Id)">

    <button class="theme-explorer__toggle" title="Toggle Theme Explorer">
        <i class="fa fa-paint-brush" aria-hidden="true"></i>
        <i class="fa fa-chevron-right" aria-hidden="true"></i>
    </button>

    <div class="theme-explorer__nav">
        <button class="active" data-section="color"><i class="fa fa-paint-brush" aria-hidden="true"></i> Colors</button>
        <button data-section="text"><i class="fa fa-font" aria-hidden="true"></i>Text</button>
        <button data-section="header"><i class="fa fa-arrow-up" aria-hidden="true"></i>Header</button>
        <button data-section="footer"><i class="fa fa-arrow-down" aria-hidden="true"></i>Footer</button>
        <button data-section="grid"><i class="fa fa-th" aria-hidden="true"></i>Grid</button>
        <button data-section="forms"><i class="fa fa-check-square" aria-hidden="true"></i>Forms</button>
    </div>

    <div class="theme-explorer__inner">

        <div class="theme-explorer__section active" id="color">
            <div class="theme-explorer__item">
                <label for="" class="form-label">Theme</label>
                <input data-prop="--theme" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Theme Contrast</label>
                <input data-prop="--theme-contrast" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Theme Alt</label>
                <input data-prop="--theme-alt" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Theme Alt Contrast</label>
                <input data-prop="--theme-alt-contrast" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Heading Dark</label>
                <input data-prop="--heading-dark" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Text Dark</label>
                <input data-prop="--text-dark" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Heading Light</label>
                <input data-prop="--heading-light" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Text Light</label>
                <input data-prop="--text-light" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Background Light</label>
                <input data-prop="--background-light" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Background Dark</label>
                <input data-prop="--background-dark" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Selected Nav</label>
                <input data-prop="--selected-nav-item" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
            <div class="theme-explorer__item"></div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Success</label>
                <input data-prop="--success" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Error</label>
                <input data-prop="--error" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
            <div class="theme-explorer__item theme-explorer__item--full">
                <label for="" class="form-label">Border Dark</label>
                <input data-prop="--border-dark" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
            <div class="theme-explorer__item theme-explorer__item--full">
                <label for="" class="form-label">Border Light</label>
                <input data-prop="--border-light" class="theme-explorer__input theme-explorer__input--color" data-jscolor>
            </div>
        </div>

        <div class="theme-explorer__section " id="header">
            <div class="theme-explorer__item theme-explorer__item--full">
                <label for="" class="form-label">Theme</label>
                <select id="--header-theme" name="" class="theme-explorer__select" data-scope=".top">
                    <option value="top--light">Light</option>
                    <option value="top--dark">Dark</option>
                </select>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Nav Position</label>
                <select id="--header-nav" name="" class="theme-explorer__select" data-scope=".top">
                    <option value="top--navigation-left">Left</option>
                    <option value="top--navigation-center">Center</option>
                    <option value="top--navigation-right">Right</option>
                    <option value="top--navigation-left-logo-center">Left Logo Center</option>
                </select>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Container</label>
                <select id="--header-container" name="" class="theme-explorer__select" data-scope=".top">
                    <option value="top--small-width">Small</option>
                    <option value="top--standard-width">Standard</option>
                    <option value="top--big-width">Big</option>
                    <option value="top--full-width">Full width</option>
                </select>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Height</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--header-height" data-alias="headerHeight" class="theme-explorer__input theme-explorer__input--text" type="number">
                    <div class="theme-explorer__input-unit">px</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Height Mobile</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--header-height-mobile" data-alias="headerHeightMobile" data-size="992" value="@(_settingsService.Get<string>(Model, "headerHeightMobile", defaultValue: "50").Replace("px", ""))" class="theme-explorer__input theme-explorer__input--text" type="number">
                    <div class="theme-explorer__input-unit">px</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Logo Padding</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--logo-padding" class="theme-explorer__input theme-explorer__input--text" type="number">
                    <div class="theme-explorer__input-unit">px</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Logo Padding Mobile</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--logo-padding" data-alias="logoPaddingMobile" data-size="992" value="@(_settingsService.Get<string>(Model, "logoPaddingMobile", defaultValue: "12").Replace("px", ""))" class="theme-explorer__input theme-explorer__input--text" type="number">
                    <div class="theme-explorer__input-unit">px</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Nav Padding</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--navigation-padding" class="theme-explorer__input theme-explorer__input--text" type="number">
                    <div class="theme-explorer__input-unit">px</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Nav Padding Small Screen</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--navigation-padding" data-alias="navigationPaddingSmallerScreens" data-size="1200" value="@(_settingsService.Get<string>(Model, "navigationPaddingSmallerScreens", defaultValue: "15").Replace("px", ""))" class="theme-explorer__input theme-explorer__input--text" type="number">
                    <div class="theme-explorer__input-unit">px</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Nav: Font Size</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--navigation-font-size" data-alias="navigationFontSize" class="theme-explorer__input theme-explorer__input--text" data-unit="rem" step="0.01" type="number">
                    <div class="theme-explorer__input-unit">rem</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Nav Mobile: Font Size</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--navigation-font-size" data-size="992" data-alias="navigationFontSizeMobile" value="@(_settingsService.Get<string>(Model, "navigationFontSizeMobile", defaultValue: "1").Replace("rem", ""))" class="theme-explorer__input theme-explorer__input--text" data-unit="rem" step="0.01" type="number">
                    <div class="theme-explorer__input-unit">rem</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Nav: Font Weight</label>
                <input data-prop="--navigation-font-weight" data-alias="navigationFontWeight" class="theme-explorer__input theme-explorer__input--text" data-unit="" type="text">
            </div>

        </div>

        <div class="theme-explorer__section" id="footer">

            <div class="theme-explorer__item theme-explorer__item--full">
                <label for="" class="form-label">Theme</label>
                <select id="--footer-theme" name="" class="theme-explorer__select" data-scope=".footer">
                    <option value="footer--light" data-remove="light-color">Light</option>
                    <option value="footer--dark" data-extra="light-color">Dark</option>
                </select>
            </div>
            <div class="theme-explorer__item theme-explorer__item--full">
                <label for="" class="form-label">Container</label>
                <select id="--footer-container" name="" class="theme-explorer__select" data-scope=".footer-grid">
                    <option value="container--small" data-extra="container">Small</option>
                    <option value="container">Standard</option>
                    <option value="container--big" data-extra="container">Big</option>
                    <option value="container--fluid" data-extra="container">Full width</option>
                </select>
            </div>
        </div>

        <div class="theme-explorer__section" id="grid">
            <div class="theme-explorer__item">
                <label for="" class="form-label">Container Small</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--grid-width-small" class="theme-explorer__input theme-explorer__input--text" type="number">
                    <div class="theme-explorer__input-unit">px</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Container</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--grid-width" class="theme-explorer__input theme-explorer__input--text" type="number">
                    <div class="theme-explorer__input-unit">px</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Container Big</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--grid-width-big" class="theme-explorer__input theme-explorer__input--text" type="number">
                    <div class="theme-explorer__input-unit">px</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Gutter</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--grid-gutter" class="theme-explorer__input theme-explorer__input--text" type="number">
                    <div class="theme-explorer__input-unit">px</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Gutter Medium Screen</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--grid-gutter" data-alias="gridGutterMedium" data-size="992" value="@(_settingsService.Get<string>(Model, "gridGutterMedium", defaultValue: "15").Replace("px", ""))" class="theme-explorer__input theme-explorer__input--text" type="number">
                    <div class="theme-explorer__input-unit">px</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Gutter Small Screen</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--grid-gutter" data-alias="gridGutterSmall" data-size="768" value="@(_settingsService.Get<string>(Model, "gridGutterSmall", defaultValue: "15").Replace("px", ""))" class="theme-explorer__input theme-explorer__input--text" type="number">
                    <div class="theme-explorer__input-unit">px</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Gutter XS Screen</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--grid-gutter" data-alias="gridGutterXS" data-size="480" value="@(_settingsService.Get<string>(Model, "gridGutterXS", defaultValue: "15").Replace("px", ""))" class="theme-explorer__input theme-explorer__input--text" type="number">
                    <div class="theme-explorer__input-unit">px</div>
                </div>
            </div>

        </div>

        <div class="theme-explorer__section" id="text">
            <div class="theme-explorer__item theme-explorer__item--full">
                <label for="" class="form-label">Heading Font</label>
                <select name="" class="theme-explorer__font" data-prop="--heading-font">
                    <option disabled selected>Select Font</option>
                </select>
                <input type="hidden" class="font-hidden" name="heading-font">
            </div>
            <div class="theme-explorer__item theme-explorer__item--full">
                <label for="" class="form-label">Body Font</label>
                <select name="" class="theme-explorer__font" data-prop="--body-font">
                    <option disabled selected>Select Font</option>
                </select>
                <input type="hidden" class="font-hidden" name="body-font">
            </div>
            <div class="theme-explorer__item theme-explorer__item--full">
                <label class="cb-wrap">
                    <input type="checkbox" class="toggle-design-mode"><strong>Enable Text Edit</strong><br> <span>Makes all the text on this page editable</span>
                    <span class="checkmark"></span>
                </label>
            </div>

            <div class="theme-explorer__heading">
                Text
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Text</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--font-size" data-alias="textFontSize" class="theme-explorer__input theme-explorer__input--text" data-unit="rem" step="0.01" type="number">
                    <div class="theme-explorer__input-unit">rem</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Text Big</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--font-size-big" data-alias="textBigFontSize" class="theme-explorer__input theme-explorer__input--text" data-unit="rem" step="0.01" type="number">
                    <div class="theme-explorer__input-unit">rem</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Text Small</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--font-size-small" data-alias="textSmallFontSize" class="theme-explorer__input theme-explorer__input--text" data-unit="rem" step="0.01" type="number">
                    <div class="theme-explorer__input-unit">rem</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Text: Line Height</label>
                <input data-prop="--body-line-height" data-alias="textLineHeight" class="theme-explorer__input theme-explorer__input--text" data-unit="" step="0.1" type="number">
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Text: Font Weight</label>
                <input data-prop="--body-font-weight" data-alias="textFontWeight" class="theme-explorer__input theme-explorer__input--text" data-unit="" type="text">
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Text Big: Font Weight</label>
                <input data-prop="--text-big-font-weight" data-alias="textBigFontWeight" class="theme-explorer__input theme-explorer__input--text" data-unit="" type="text">
            </div>
            <div class="theme-explorer__heading">
                Headings
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Heading: Line Height</label>
                <input data-prop="--heading-line-height" data-alias="headingLineHeight" class="theme-explorer__input theme-explorer__input--text" data-unit="" step="0.1" type="number">
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Heading: Font Weight</label>
                <input data-prop="--heading-font-weight" data-alias="headingFontWeight" class="theme-explorer__input theme-explorer__input--text" data-unit="" type="text">
            </div>

            <div class="theme-explorer__item">
                <label for="" class="form-label">Heading 1</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--font-size-h1" data-alias="heading1FontSize" class="theme-explorer__input theme-explorer__input--text" data-unit="rem" step="0.01" type="number">
                    <div class="theme-explorer__input-unit">rem</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Heading 2</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--font-size-h2" data-alias="heading2FontSize" class="theme-explorer__input theme-explorer__input--text" data-unit="rem" step="0.01" type="number">
                    <div class="theme-explorer__input-unit">rem</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Heading 3</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--font-size-h3" data-alias="heading3FontSize" class="theme-explorer__input theme-explorer__input--text" data-unit="rem" step="0.01" type="number">
                    <div class="theme-explorer__input-unit">rem</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Heading 4</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--font-size-h4" data-alias="heading4FontSize" class="theme-explorer__input theme-explorer__input--text" data-unit="rem" step="0.01" type="number">
                    <div class="theme-explorer__input-unit">rem</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Heading 5</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--font-size-h5" data-alias="heading5FontSize" class="theme-explorer__input theme-explorer__input--text" data-unit="rem" step="0.01" type="number">
                    <div class="theme-explorer__input-unit">rem</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Heading 6</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--font-size-h6" data-alias="heading6FontSize" class="theme-explorer__input theme-explorer__input--text" data-unit="rem" step="0.01" type="number">
                    <div class="theme-explorer__input-unit">rem</div>
                </div>
            </div>
            <div class="theme-explorer__item">
                <label for="" class="form-label">Hero Heading</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--hero-heading" data-alias="heroHeadingFontSize" class="theme-explorer__input theme-explorer__input--text" data-unit="rem" step="0.01" type="number">
                    <div class="theme-explorer__input-unit">rem</div>
                </div>
            </div>

            <div class="theme-explorer__item">
                <label for="" class="form-label">Hero Heading Moblie</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--hero-heading" data-alias="heroHeadingMobileFontSize" class="theme-explorer__input theme-explorer__input--text" data-alias="heroHeadingMobileFontSize" value="@(_settingsService.Get<string>(Model, "heroHeadingMobileFontSize", defaultValue: "2.5").Replace("rem", ""))" data-unit="rem" data-size="768" step="0.01" type="number">
                    <div class="theme-explorer__input-unit">rem</div>
                </div>
            </div>
        </div>

        <div class="theme-explorer__section" id="forms">
            <div class="theme-explorer__item theme-explorer__item--full">
                <label for="" class="form-label">Button Border Radius</label>
                <div class="theme-explorer__input-wrap">
                    <input data-prop="--button-border-radius" class="theme-explorer__input theme-explorer__input--text" type="number">
                    <div class="theme-explorer__input-unit">px</div>
                </div>
            </div>
        </div>

    </div>

    @if (Context.Request.Cookies["UMB-XSRF-TOKEN"] != null)
    {
        <div class="theme-explorer__save text-right">
            <button class="button button--close">Close</button>
            <button class="button button--save">Save</button>
        </div>
    }
    <div class="theme-explorer-saving">

    </div>
</div>]]></View>
    <View path="Widgets/Breadcrumbs.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.Breadcrumbs)Model.Content;

    var textColorClass = content.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = content.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "white-bg" : backgroundColor + "-bg";

    var containerWidthClass = "container";
    switch (content.ContainerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container-fluid";
            break;
    }

    var breadcrumbs = Umbraco.AssignedContentItem.Ancestors().ToArray();

    var position = 1;
}

<div class="block breadcrumbs-block @(backgroundColorClass) @(textColorClass)">

    <div class="@containerWidthClass">
        <div class="row">
            <div class="col-100">

                <nav aria-label="Breadcrumb">
                    <ul class="breadcrumbs @(content.CenterContent ? "breadcrumbs--center" : "")" itemscope itemtype="http://schema.org/BreadcrumbList">
                        @foreach (var item in breadcrumbs.OrderBy(x => x.Level))
                        {
                            <li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
                                <a itemprop="item" href="@item.Url()">
                                    <span itemprop="name">@item.Name</span>
                                </a>
                                <meta itemprop="position" content="@position" />
                            </li>
                            position++;
                        }
                        <li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
                            <a itemprop="item" href="@Umbraco.AssignedContentItem.Url()">
                                <span itemprop="name">@Umbraco.AssignedContentItem.Name</span>
                            </a>
                            <meta itemprop="position" content="@position" />
                        </li>

                    </ul>
                </nav>

            </div>
        </div>
    </div>

</div>]]></View>
    <View path="Widgets/ContactForm.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Igloo.Core.Controllers
@inject Igloo.Core.Services.ISettingsService _settingsService;
@{
    var content = (ContentModels.ContactForm)Model.Content;
    var settings = (ContentModels.ContactFormSettings)Model.Settings;

    var order = (int)ViewData["order"];

    var emailTo = _settingsService.Get<string>(Umbraco.AssignedContentItem, "contactFormEmail");
    var currentID = Umbraco.AssignedContentItem.Id;
    var currentCulture = System.Threading.Thread.CurrentThread.CurrentCulture.Name;

    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "white-bg" : backgroundColor + "-bg";

    var containerWidthClass = "container";
    switch (settings.ContainerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container-fluid";
            break;
    }

    var backgroundMediaUrl = settings.BackgroundImage != null ? settings.BackgroundImage.Url() : "";

    if (backgroundMediaUrl != "")
    {
        backgroundColorClass = "";
    }
}

@if (emailTo != "")
{

    <section class="block form @(backgroundColorClass) @(textColorClass)" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>

        @if (content.PreHeading != "" || content.Heading != "" || content.Text.ToString() != "")
        {
            <div class="block__header">
                @if (content.PreHeading != "")
                {
                    <div class="pre-head">@content.PreHeading</div>
                }
                @if (content.Heading != "")
                {
                    if (order == 0)
                    {
                        <h1>@content.Heading</h1>
                    }
                    else
                    {
                        <h2>@content.Heading</h2>
                    }
                }
                @if (content.Text.ToString() != "")
                {
                    <div class="block__header-text text-big">
                        @content.Text
                    </div>
                }
            </div>
        }

        <div class="block__body">
            <form action="@(Url.GetUmbracoApiService("HandleContactForm", "IglooContactForm"))" data-thankyoumessage="@content.MessageSentText" id="contact-form">
                @Html.AntiForgeryToken()

                <input id="ParentModelID" name="ParentModelID" type="hidden" value="@currentID">
                <input id="Culture" name="Culture" type="hidden" value="@currentCulture" />
                <div class="@containerWidthClass">
                    <div class="row">

                        <div class="col-50 col-s-100">
                            <label for="Name">@Umbraco.GetDictionaryValue("Name") <span class="error-color">*</span></label>
                            <div class="form-validate-wrap">
                                <input id="Name" name="Name" required="required" type="text" value="" autocomplete="name">
                                <i class="fa fa-check-circle" aria-hidden="true"></i>
                            </div>
                        </div>
                        <div class="col-50 col-s-100">
                            <label for="Email">@Umbraco.GetDictionaryValue("Email") <span class="error-color">*</span></label>
                            <div class="form-validate-wrap">
                                <input id="Email" name="Email" required="required" type="email" value="" autocomplete="email">
                                <i class="fa fa-check-circle" aria-hidden="true"></i>
                            </div>
                        </div>
                        <div class="col-100 col-s-100">
                            <label for="Message">@Umbraco.GetDictionaryValue("Message") <span class="error-color">*</span></label>
                            <div class="form-validate-wrap">
                                <textarea autocomplete="off" cols="30" id="Message" name="Message" required="required" rows="10"></textarea>
                                <i class="fa fa-check-circle" aria-hidden="true"></i>
                            </div>
                            <button class="button button--block" type="submit">@Umbraco.GetDictionaryValue("Send Message")</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>

        @if (backgroundMediaUrl != "")
        {
            <div class="block__background lazyload"
                 data-bgset="@(backgroundMediaUrl)?upscale=false&width=1280&quality=80 1280w,
        		@(backgroundMediaUrl)?upscale=false&width=1600&quality=80 1600w,
        		@(backgroundMediaUrl)?upscale=false&width=1920&quality=80 1920w"
                 data-sizes="auto">
            </div>
        }
    </section>
}
else
{
    <section class="block form gray-bg">
        <div class="container container--small">
            <h6 class="error-color text-center">You need to set an Contact Form Email in settings to use the contact form widget.</h6>
        </div>
    </section>
}
]]></View>
    <View path="Widgets/Footer/FooterCode.cshtml"><![CDATA[@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;

<div class="footer-item footer-item--code">
    @Html.Raw(Model.Content.Code)
</div>]]></View>
    <View path="Widgets/Footer/FooterContact.cshtml"><![CDATA[@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.FooterContact)Model.Content;
    var settings = (ContentModels.FooterContactSettings)Model.Settings;
}

<div class="footer-item footer-item--contact text-@(settings.AlignContent)">

    @if (content.Heading != "")
    {
        <h2 class="h6">@content.Heading</h2>
    }
    <address>
        <ul class="contact-list">
            @if (content.Address != "")
            {
                <li>
                    <i class="fa fa-map-marker" aria-hidden="true"></i>
                    @Html.Raw(content.Address.Replace("\n", "<br/>"))
                </li>
            }
            @if (content.Phone != "")
            {
                <li>
                    <a href="tel:@(content.Phone)"><i class="fa fa-phone" aria-hidden="true"></i> @(content.Phone)</a>
                </li>
            }
            @if (content.Email != "")
            {
                <li>
                    <a href="mailto:@(content.Email)"><i class="fa fa-envelope" aria-hidden="true"></i> @(content.Email)</a>
                </li>
            }
        </ul>
    </address>

</div>]]></View>
    <View path="Widgets/Footer/FooterLogos.cshtml"><![CDATA[@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.FooterLogos)Model.Content;
    var settings = (ContentModels.FooterLogosSettings)Model.Settings;
}

<div class="footer-item footer-item--logos text-@(settings.AlignContent)">

    @if (content.Heading != "")
    {
        <h2 class="h6">@content.Heading</h2>
    }

    @if (content.Logos != null && content.Logos.Any())
    {
        <ul>
            @foreach (var logoBlock in content.Logos)
            {
                var logo = (ContentModels.Logo)logoBlock.Content;

                if (logo.LogoImage != null)
                {
                    <li style="width: @(logo.CustomWidth == "" ? "120px" : logo.CustomWidth)">
                        @if (logo.Link != null)
                        {
                            <a href="@(logo.Link.Url)" target="@(logo.Link.Target)" title="@(logo.Link.Name)"><img src="@logo.LogoImage.Url()" alt=""></a>
                        }
                        else
                        {
                            <div><img src="@logo.LogoImage.Url()" alt=""></div>
                        }
                    </li>
                }
            }
        </ul>
    }

</div>]]></View>
    <View path="Widgets/Footer/FooterNavigation.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Web.Common.Models;
@using Umbraco.Cms.Core.Models;
@{
    var content = (ContentModels.FooterNavigation)Model.Content;
    var settings = (ContentModels.FooterNavigationSettings)Model.Settings;

    var links = content.Links;
    var levelsRendered = 0;
    var levelsOfChildren = int.Parse(settings.LevelsOfChildren.ToString());
}

<div class="footer-item footer-item--links">

    @if (content.Heading != "")
    {
        if (content.LinkHeading != null)
        {
            <h2 class="h6 navigation-link-heading">
                <a href="@(content.LinkHeading.Url)" target="@(content.LinkHeading.Target)" @if (content.LinkHeading.Target == "_blank") { <text> rel="noopener" </text> }>
                    @content.Heading
                </a>
            </h2>
        }
        else
        {
            <h2 class="h6">@content.Heading</h2>
        }
    }

    <nav class="navigation navigation--level-@levelsOfChildren" data-expand="@(settings.DisableAutoExpand ? "false" : "true")">
        <ul>
            @if (links != null && links.Any())
            {
                foreach (Link link in links)
                {
                    if (link.Udi != null && link.Type == LinkType.Content)
                    {
                        var node = Umbraco.Content(link.Udi);

                        ListChildNodes(link, node, levelsRendered, levelsOfChildren);
                    }
                    else
                    {
                        <li>
                            <div>
                                <a href="@(link.Url)" target="@(link.Target)" @if (link.Target == "_blank") { <text> rel="noopener" </text> }>@link.Name</a>
                            </div>
                        </li>
                    }
                }
            }
        </ul>
    </nav>
</div>
@functions{

    void ListChildNodes(Link link, IPublishedContent root, int levelsRendered, int levelsOfChildren)
    {
        var expandLabel = Umbraco.GetDictionaryValue("Show Subpages");
        var settings = (ContentModels.FooterNavigationSettings)Model.Settings;

        if (levelsOfChildren >= levelsRendered)
        {
            var children = root.Children
            .Where(x => x.IsVisible())
            .Where(x => x?.ContentType?.Alias != "sitemap" && x?.ContentType?.Alias != "websiteSettings").ToList();
            levelsRendered++;

            if ((settings.OnlyRenderChildren && levelsRendered > 1) || !settings.OnlyRenderChildren)
            {
                if (link != null)
                {
                    <li class="@(link.Url == Umbraco.AssignedContentItem.Url() ? "selected" : "")">
                        <div>
                            <a href="@(link.Url)" target="@(link.Target)" @if (link.Target == "_blank") { <text> rel="noopener" </text> }>@link.Name</a>
                            @if (children.Count > 0 && levelsOfChildren >= levelsRendered)
                            {
                                <button aria-expanded="false" aria-label="@expandLabel"></button>
                            }
                        </div>
                        @if (children.Count > 0)
                        {
                            <ul>
                                @foreach (var child in children)
                                {
                                    ListChildNodes(null, child, levelsRendered, levelsOfChildren);
                                }
                            </ul>
                        }
                    </li>
                }
                else
                {
                    <li class="@(root.Url() == Umbraco.AssignedContentItem.Url() ? "selected" : "")">
                        <div>
                            <a href="@(root.Url())">@root.Name</a>
                            @if (children.Count > 0 && levelsOfChildren >= levelsRendered)
                            {
                                <button aria-expanded="false" aria-label="@expandLabel"></button>
                            }
                        </div>
                        @if (children.Count > 0)
                        {
                            <ul>
                                @foreach (var child in children)
                                {
                                    ListChildNodes(null, child, levelsRendered, levelsOfChildren);
                                }
                            </ul>
                        }
                    </li>
                }
            }
            else
            {
                foreach (var child in children)
                {
                    ListChildNodes(null, child, levelsRendered, levelsOfChildren);
                }
            }
        }
    }
}]]></View>
    <View path="Widgets/Footer/FooterOpeningHours.cshtml"><![CDATA[@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.FooterOpeningHours)Model.Content;
    var settings = (ContentModels.FooterOpeningHoursSettings)Model.Settings;

    var openingHours = content.OpeningHours;
}

<div class="footer-item footer-item--open text-@(settings.AlignContent)">

    @if (content.Heading != "")
    {
        <h2 class="h6">@content.Heading</h2>
    }
    @if (openingHours != null && openingHours.Any())
    {
        <ul class="opening-hours">
            @foreach (var openingHourBlock in openingHours)
            {
                var openingHour = (ContentModels.OpeningHour)openingHourBlock.Content;

                <li>
                    <span class="time">@openingHour.Time</span>
                    <span class="day">@openingHour.Day</span>
                </li>
            }
        </ul>
    }
</div>




]]></View>
    <View path="Widgets/Footer/FooterSocialLinks.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.FooterSocialLinks)Model.Content;
    var settings = (ContentModels.FooterSocialLinksSettings)Model.Settings;
}

<div class="footer-item footer-item--social-links text-@(settings.AlignContent)">

    @if (content.Heading != "")
    {
        <h2 class="h6">@content.Heading</h2>
    }

    <ul class="social-nav" itemscope itemtype="http://schema.org/Organization">
        <link itemprop="url" href="@Umbraco.AssignedContentItem.Url(mode: UrlMode.Absolute)">

        @if (content.Facebook != "")
        {
            <li><a itemprop="sameAs" href="@(content.Facebook)" target="_blank" title="Facebook" rel="noopener"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
        }
        @if (content.Twitter != "")
        {
            <li><a itemprop="sameAs" href="@(content.Twitter)" target="_blank" title="Twitter" rel="noopener"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
        }
        @if (content.Instagram != "")
        {
            <li><a itemprop="sameAs" href="@(content.Instagram)" target="_blank" title="Instagram" rel="noopener"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
        }
        @if (content.LinkedIn != "")
        {
            <li><a itemprop="sameAs" href="@(content.LinkedIn)" target="_blank" title="Linked In" rel="noopener"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
        }
        @if (content.YouTube != "")
        {
            <li><a itemprop="sameAs" href="@(content.YouTube)" target="_blank" title="YouTube" rel="noopener"><i class="fa fa-youtube" aria-hidden="true"></i></a></li>
        }
    </ul>

</div>]]></View>
    <View path="Widgets/Footer/FooterText.cshtml"><![CDATA[@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.FooterText)Model.Content;
    var settings = (ContentModels.FooterTextSettings)Model.Settings;
}

<div class="footer-item footer-item--text text-@(settings.AlignContent)">

    @if (content.Heading != "")
    {
        <h2 class="h6">@content.Heading</h2>
    }
    <div>
        @Html.Raw(content.Text)
    </div>

    @if (content.Buttons != null && content.Buttons.Any())
    {
        <div class="button-wrap">
            @foreach (var button in content.Buttons)
            {
                @await Html.PartialAsync("~/Views/Partials/Widgets/Renderbutton.cshtml", button)
            }
        </div>

    }
</div>]]></View>
    <View path="Widgets/Gallery.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Igloo.Core.Extensions
@{
    var content = (ContentModels.Gallery)Model.Content;
    var settings = (ContentModels.GallerySettings)Model.Settings;

    var removeGutter = settings.RemoveGutter ? "gallery__group--no-gap" : "";
    var animateClass = settings.Animate ? "animate-item" : "";

    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "white-bg" : backgroundColor + "-bg";

    var containerWidthClass = "";
    switch (settings.ContainerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container container--fluid";
            break;
    }

    var images = content.Media;
    var group = Convert.ToInt32(content.Group);
    var groupDec = Convert.ToDecimal(content.Group);
    var imageCount = Convert.ToDecimal(images.Count());
    decimal loopCount = content.SimpleGrid ? 1 : imageCount / groupDec;
}
<section class="block @(settings.Compact ? "block--compact" : "") gallery @(backgroundColorClass)" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>
    <div class="@(containerWidthClass)">
        <div class="row">
            <div class="col-100">
                @if (images != null)
                {
                    for (var i = 0; i < Math.Ceiling(loopCount); i++)
                    {
                        var imageBatch = content.SimpleGrid ? images : images.ToList().Skip(group * i).Take(group);

                        <div class="gallery__group @(content.SimpleGrid ? "gallery__group--grid" : "gallery__group--"+imageBatch.Count()) @removeGutter">
                            @foreach (var mediaItem in imageBatch)
                            {
                                <div class="gallery__item @animateClass">
                                    @if (mediaItem.Url().Contains(".mp4"))
                                    {
                                        <div class="gallery__video">
                                            <video playsinline muted loop autoplay>
                                                <source src="@mediaItem.Url()" type="video/mp4">
                                            </video>
                                        </div>
                                    }
                                    else
                                    {
                                        <figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">

                                            @if (!settings.DisableGalleryZoom)
                                            {

                                                @Html.Raw("<a href=\"" + mediaItem.Url() + "\" itemprop=\"contentUrl\" class=\" gallery__link\" data-size=\"" + mediaItem.ImageCropCalculation() + "\" data-index=\"0\">");
                                            }
                                            <img class="lazyload"
                                                 data-sizes="auto"
                                                 data-srcset="@mediaItem.Url()?width=1000&upscale=false&quality=80 1000w,
        														 @mediaItem.Url()?width=1200&upscale=false&quality=80 1200w,
        														 @mediaItem.Url()?width=1500&upscale=false&quality=80 1500w,
        														 @mediaItem.Url()?width=1800&upscale=false&quality=80 1800w"
                                                 itemprop="thumbnail" alt="">
                                            @if (!settings.DisableGalleryZoom)
                                            {
                                                @Html.Raw("</a>")
                                            }
                                        </figure>
                                    }
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</section>
]]></View>
    <View path="Widgets/GlobalContentPicker.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Igloo.Core.Extensions;
@{
    var globalContentsBlock = (ContentModels.GlobalContentPicker)Model.Content;
    var globalContentNodes = globalContentsBlock.GlobalContent;
}

@if (globalContentNodes != null)
{
    foreach (var globalContentNode in globalContentNodes)
    {
        var widgets = globalContentNode.Value<IEnumerable<BlockListItem>>("widgets");
        if (widgets != null)
        {
            foreach (var widget in widgets)
            {
                @await Html.RenderWidget(widget, 1)
            }
        }
    }
}]]></View>
    <View path="Widgets/Grid.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    @*=====================
        # Grid Settings
        =====================*@
    var content = (ContentModels.Grid)Model.Content;
    var settings = (ContentModels.GridSettings)Model.Settings;

    var order = (int)ViewData["order"];
    var containerWidthClass = "container";

    switch (settings.ContainerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container-fluid";
            break;
    }

    var removeColumnGutterClass = settings.RemoveColumnGutter ? "row--flat" : "";
    var compactClass = settings.Compact ? "grid--compact" : "";
    var animateClass = settings.Animate ? "animate" : "";

    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "white-bg" : backgroundColor + "-bg";

    var backgroundMediaUrl = settings.BackgroundImage != null ? settings.BackgroundImage.Url() : "";
    if (backgroundMediaUrl != "")
    {
        backgroundColorClass = "";
    }
}

@if (content.Columns != null)
{
    <div class="block grid @(backgroundColorClass) @(textColorClass) @(removeColumnGutterClass) @(compactClass) @(animateClass)" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>
        <div class="@(containerWidthClass) @(settings.HorizontalScrollMobile ? "container--mobile-scroll" : "")">
            <div class="row @(removeColumnGutterClass) row--@(settings.HorizontalAlignColumns) row--v-@(settings.VerticalAlignColumns) @(settings.HorizontalScrollMobile ? "row--no-wrap-s" : "") @(settings.AdjustColumnHeight ? "row--v-grow" : "")">

                @foreach (BlockListItem column in content.Columns)
                {
                    var columnWidth = column.Settings?.Value<string>("columnWidth", "")?.Replace("%", "") ?? "100";
                    var columnType = column.Content.ContentType.Alias;

                    switch (columnWidth)
                    {
                        case "":
                            columnWidth = "col";
                            break;
                        case "25":
                            columnWidth = "col-25 col-m-50";
                            break;
                        case "20":
                            columnWidth = "col-20 col-m-33";
                            break;
                        case "10":
                            columnWidth = "col-10 col-m-20";
                            break;
                        default:
                            columnWidth = "col-" + columnWidth;
                            break;
                    }

                    <div class="@(columnWidth) @(settings.HorizontalScrollMobile ? "col-s-90" : "col-s-100")">
                        @if (columnType == "lineBreak")
                        {
                            @await Html.PartialAsync("~/Views/Partials/Shared/LineBreak.cshtml", column)
                        }
                        else
                        {
                            @await Html.PartialAsync("~/Views/Partials/Widgets/Grid/" + columnType + ".cshtml", column, new ViewDataDictionary(ViewData) { { "containerWidth", settings.ContainerWidth } })
                        }
                    </div>
                }
            </div>
        </div>
        @if (backgroundMediaUrl != "")
        {
            <div class="block__background lazyload"
                 data-bgset="@(backgroundMediaUrl)?upscale=false&width=1280&quality=80 1280w,
        		@(backgroundMediaUrl)?upscale=false&width=1600&quality=80 1600w,
        		@(backgroundMediaUrl)?upscale=false&width=1920&quality=80 1920w"
                 data-sizes="auto">
            </div>
        }
    </div>
}]]></View>
    <View path="Widgets/Grid/ColumnAccordion.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using System.Text.RegularExpressions;
@{
    var content = (ContentModels.ColumnAccordion)Model.Content;
    var settings = (ContentModels.ColumnAccordionSettings)Model.Settings;

    var boxedColumnClass = settings.BoxedColumn ? "grid-item--boxed" : "";
}

<div class="grid-item grid-item--acc @(boxedColumnClass)">
    @if (content.Accordion != null)
    {
        foreach (var accItemBlock in content.Accordion)
        {
            var accItem = (ContentModels.AccordionItem)accItemBlock.Content;

            <div class="acc">
                <button class="acc__head">
                    @accItem.Header
                    <i class="fa fa-chevron-down" aria-hidden="true"></i>
                </button>
                <div class="acc__body">
                    @accItem.Text
                </div>
            </div>

        }
    }
</div>

@if (settings.MarkAsFaq)
{
    <script type="application/ld+json">
    {
      "@@context": "https://schema.org",
      "@@type": "FAQPage",
      "mainEntity": [
      @foreach (var accItemBlock in content.Accordion)
      {
        var accItem = (ContentModels.AccordionItem)accItemBlock.Content;

        <text>
            {
                "@@type": "Question",
                "name": "@accItem.Header",
                "acceptedAnswer": {
                  "@@type": "Answer",
                  "text": "@(Regex.Replace(accItem?.Text?.ToString() ?? string.Empty, "<[^>]+>", string.Empty))"
                }
            }
            @if (content.Accordion.Last() != accItemBlock)
            {
                @Html.Raw(',')
            }
        </text>
      }

      ]
    }
    </script>
}]]></View>
    <View path="Widgets/Grid/ColumnButton.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.ColumnButton)Model.Content;
    var settings = (ContentModels.ColumnButtonSettings)Model.Settings;
}

<div class="grid-item grid-item--button text-@(settings.AlignContent)">
    @if (content.Buttons != null && content.Buttons.Any())
    {
        <div class="button-wrap">
            @foreach (var button in content.Buttons)
            {
                @await Html.PartialAsync("~/Views/Partials/Widgets/RenderButton.cshtml", button)
            }
        </div>
    }
</div>]]></View>
    <View path="Widgets/Grid/ColumnCard.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inject Igloo.Core.Services.ISettingsService _settingsService;
@{
    var content = (ContentModels.ColumnCard)Model.Content;
    var settings = (ContentModels.ColumnCardSettings)Model.Settings;

    var containerWidth = (string)ViewData["containerWidth"];
    var cardColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "dark-color";
    var height = string.IsNullOrWhiteSpace(settings.Height) ? "25" : settings.Height.Replace("%", "");
    var columnWidth = string.IsNullOrWhiteSpace(settings.ColumnWidth) ? "100" : settings.ColumnWidth.Replace("%", "");

    var themeContainerWidth =  _settingsService.Get<string>(Umbraco.AssignedContentItem, "containerWidth", defaultValue: "1300").Replace("px", "");
    var themeContainerWidthSmall = _settingsService.Get<string>(Umbraco.AssignedContentItem, "containerWidthSmall", defaultValue: "850").Replace("px", "");
    var themeContainerWidthBig = _settingsService.Get<string>(Umbraco.AssignedContentItem, "containerWidthBig", defaultValue: "1600").Replace("px", "");

    @*Calculate crop*@
    double targetWidth = int.Parse(themeContainerWidth);
    double targetHeight = 1080;
    double cWidth = int.Parse(columnWidth);
    double cHeight = int.Parse(height);
    if (containerWidth == "small")
    {
        targetWidth = int.Parse(themeContainerWidthSmall);
    }
    else if (containerWidth == "big")
    {
        targetWidth = int.Parse(themeContainerWidthBig);
    }
    else if (containerWidth == "full width")
    {
        targetWidth = 1920;
    }

    targetWidth = targetWidth * (cWidth / 100);
    targetHeight = targetHeight * (cHeight / 100);

    var backgroundUrl = content.Background != null ? content.Background.GetCropUrl(Convert.ToInt32(targetWidth), Convert.ToInt32(targetHeight), quality: 80) : "";

}
<div class="grid-item grid-item--card card card--@(height) @(cardColorClass) ">

    @if (content.Link != null)
    {
        <a href="@(content.Link.Url)" target="@(content.Link.Target)" class="card__text card__text--@(settings.TextSize) v-align-@(settings.VerticalTextAlignment) text-@(settings.HorizontalTextAlignment)">

            <span class="card__text-inner">
                <span class="card__header act-heading">@content.Heading</span>
                <span>@content.Text</span>
            </span>

        </a>
    }
    else
    {
        <span class="card__text card__text--@(settings.TextSize) v-align-@(settings.VerticalTextAlignment) text-@(settings.HorizontalTextAlignment)">

            <span class="card__text-inner">
                <span class="card__header act-heading">@content.Heading</span>
                <span>@content.Text</span>

                @if (content.Buttons != null && content.Buttons.Any())
                {
                    <span class="card__button">
                        @foreach (var button in content.Buttons)
                        {
                            @await Html.PartialAsync("~/Views/Partials/Widgets/RenderButton.cshtml", button)
                        }
                    </span>
                }
            </span>

        </span>

    }

    <div class="card__bg lazyload" data-bgset="@(backgroundUrl)"></div>

    @if (!string.IsNullOrWhiteSpace(settings.OverlayStrength))
    {
        <div class="card__overlay" style="opacity:0.@(settings.OverlayStrength.Replace("%", ""))"></div>
    }

</div>]]></View>
    <View path="Widgets/Grid/ColumnCode.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{ 
    var content = (ContentModels.ColumnCode)Model.Content;
}

<div class="grid-item grid-item--code">
    @Html.Raw(content.Code)
</div>]]></View>
    <View path="Widgets/Grid/ColumnHeader.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.ColumnHeader)Model.Content;
    var settings = (ContentModels.ColumnHeaderSettings)Model.Settings;

    var order = (int)ViewData["order"];
    var centerClass = settings.CenterContent ? "text-center" : "";
}
<div class="grid-item grid-item--header @(centerClass)">
    @if (content.PreHeading != "")
    {
        <div class="pre-head">@content.PreHeading</div>
    }
    @if (content.Heading != "")
    {
        if (order == 0)
        {
            <h1>@content.Heading</h1>
        }
        else
        {
            <h2>@content.Heading</h2>
        }
    }
    @if (content.Text.ToString() != "")
    {
        <div class="text-big">
            @content.Text
        </div>
    }
    @if (content.Buttons != null && content.Buttons.Any())
    {
        <div class="button-wrap">
            @foreach (var button in content.Buttons)
            {
                @await Html.PartialAsync("~/Views/Partials/Widgets/RenderButton.cshtml", button)
            }
        </div>
    }
</div>]]></View>
    <View path="Widgets/Grid/ColumnImage.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.ColumnImage)Model.Content;
    var settings = (ContentModels.ColumnImageSettings)Model.Settings;

    var imageUrl = content.Image != null ? content.Image.Url() : "";
}

<div class="grid-item grid-item--image">
    <figure>
        @if (content.Link != null)
        {
            <a href="@(content.Link.Url)" target="@(content.Link.Target)">
                <img class="lazyload"
                     src="@(imageUrl)?width=10"
                     data-sizes="auto"
                     data-srcset="@(imageUrl)?upscale=false&width=300&quality=80 300w,
            	    @(imageUrl)?upscale=false&width=500&quality=80 500w,
            	    @(imageUrl)?upscale=false&width=750&quality=80 750w,
            	    @(imageUrl)?upscale=false&width=1000&quality=80 1000w,
            	    @(imageUrl)?upscale=false&width=1200&quality=80 1200w,
            	    @(imageUrl)?upscale=false&width=1600&quality=80 1600w,
            	    @(imageUrl)?upscale=false&width=1920&quality=80 1920w"
                     alt="@content.ImageCaption">
            </a>
        }
        else
        {
            <img class="lazyload"
                 src="@(imageUrl)?width=10"
                 data-sizes="auto"
                 data-srcset="@(imageUrl)?upscale=false&width=300&quality=80 300w,
        	    @(imageUrl)?upscale=false&width=500&quality=80 500w,
        	    @(imageUrl)?upscale=false&width=750&quality=80 750w,
        	    @(imageUrl)?upscale=false&width=1000&quality=80 1000w,
        	    @(imageUrl)?upscale=false&width=1200&quality=80 1200w,
        	    @(imageUrl)?upscale=false&width=1600&quality=80 1600w,
        	    @(imageUrl)?upscale=false&width=1920&quality=80 1920w"
                 alt="@content.ImageCaption">
        }

        @if (content.ImageCaption != "")
        {
            <figcaption>@content.ImageCaption</figcaption>
        }
    </figure>
</div>
]]></View>
    <View path="Widgets/Grid/ColumnNavigation.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Web.Common.Models
@using Umbraco.Cms.Core.Models;
@{
    var content = (ContentModels.ColumnNavigation)Model.Content;
    var settings = (ContentModels.ColumnNavigationSettings)Model.Settings;

    var links = content.Links;
    var levelsRendered = 0;
    var levelsOfChildren = int.Parse(settings.LevelsOfChildren.ToString());
}

<div class="grid-item grid-item--links @(settings.BoxedColumn ? "grid-item--boxed" : "")">

    @if (content.Heading != "")
    {
        if (content.LinkHeading != null)
        {
            <h3 class="h6 navigation-link-heading">
                <a href="@(content.LinkHeading.Url)" target="@(content.LinkHeading.Target)" @if (content.LinkHeading.Target == "_blank") { <text> rel="noopener" </text> }>
                    @content.Heading
                </a>
            </h3>
        }
        else
        {
            <h3 class="h6">@content.Heading</h3>
        }
    }

    <nav class="navigation navigation--level-@levelsOfChildren" data-expand="@(settings.DisableAutoExpand ? "false" : "true")">
        <ul>
            @if (links != null && links.Any())
            {
                foreach (Link link in links)
                {
                    if (link.Udi != null && link.Type == LinkType.Content)
                    {
                        var node = Umbraco.Content(link.Udi);

                        ListChildNodes(link, node, levelsRendered, levelsOfChildren);
                    }
                    else
                    {
                        <li>
                            <div>
                                <a href="@(link.Url)" target="@(link.Target)" @if (link.Target == "_blank") { <text> rel="noopener" </text> }>@link.Name</a>
                            </div>
                        </li>
                    }
                }
            }
        </ul>
    </nav>
</div>
@functions { 
 void ListChildNodes(Link link, IPublishedContent root, int levelsRendered, int levelsOfChildren) {
    var expandLabel = Umbraco.GetDictionaryValue("Show Subpages");
    var settings = (ContentModels.ColumnNavigationSettings)Model.Settings;

    if(levelsOfChildren >= levelsRendered){
        var children = root.Children
        .Where(x => x.IsVisible())
        .Where(x => x?.ContentType?.Alias != "sitemap" && x?.ContentType?.Alias != "websiteSettings").ToList();
        levelsRendered++;

        if((settings.OnlyRenderChildren && levelsRendered > 1) || !settings.OnlyRenderChildren){
            if(link != null){
                <li class="@(link.Url == Umbraco.AssignedContentItem.Url() ? "selected" : "")">
                    <div>
                        <a href="@(link.Url)" target="@(link.Target)" @if (link.Target == "_blank") { <text> rel="noopener" </text> }>@link.Name</a>
                        @if (children.Count > 0 && levelsOfChildren >= levelsRendered)
                        {
                            <button aria-expanded="false" aria-label="@expandLabel"></button>
                        }
                    </div>
                    @if (children.Count > 0)
                    {
                        <ul>
                            @foreach (var child in children)
                            {
                                ListChildNodes(null, child, levelsRendered, levelsOfChildren);
                            }
                        </ul>
                    }
                </li>
            } else {
                <li class="@(root.Url() == Umbraco.AssignedContentItem.Url() ? "selected" : "")">
                    <div>
                        <a href="@(root.Url())">@root.Name</a>
                        @if (children.Count > 0 && levelsOfChildren >= levelsRendered)
                        {
                            <button aria-expanded="false" aria-label="@expandLabel"></button>
                        }
                    </div>
                    @if (children.Count > 0)
                    {
                        <ul>
                            @foreach (var child in children)
                            {
                                ListChildNodes(null, child, levelsRendered, levelsOfChildren);
                            }
                        </ul>
                    }
                </li>
            }
        } else {
            foreach(var child in children){
                ListChildNodes(null, child, levelsRendered, levelsOfChildren);
            }
        }
    }
}
}]]></View>
    <View path="Widgets/Grid/ColumnPerson.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Web.Common.Models
@using Umbraco.Cms.Core.Models;
@{
    var content = (ContentModels.ColumnPerson)Model.Content;
    var settings = (ContentModels.ColumnPersonSettings)Model.Settings;
    
    var person = content.Person as ContentModels.Person;
}

<div class="grid-item grid-item--person">
    @if(content.Heading != ""){
        <h3 class="h6 @(settings.CenterText ? "text-center" : "")">@content.Heading</h3>
    }
    
    @if(person != null){
        <div class="person @(settings.CenterText ? "text-center" : "") @(settings.Boxed ? "person--boxed" : "")">
		    @if(person.Image != null){
		        <div class="person__image @(settings.CircleImage ? "person__image--circle" :"")">
				    <img class="lazyload"
				    src="@(person.Image.GetCropUrl(10,10))"
				    data-sizes="auto"
				    data-srcset="@(person.Image.GetCropUrl(300,300, quality: 80)) 300w,
				    @(person.Image.GetCropUrl(500,500, quality: 80)) 500w,
				    @(person.Image.GetCropUrl(750,750, quality: 80)) 750w,
				    @(person.Image.GetCropUrl(1000,1000, quality: 80)) 1000w" 
				    alt="@person.FullName">	
				</div>   
		    }
			<div class="person__text">
				<h4 class="nm">@person.FullName</h4>
				@if(person.Title != ""){
				    <h5 class="section-head">@person.Title</h5>
				}
				@if(person.Description != "" && !settings.HideDescription){
				    <p class="person__description">
						@person.Description
					</p>
				}
				<ul class="contact-list">
				    @if(!settings.HidePhoneNumbers){
				        if(person.Phone != ""){
				            <li>
								<a href="tel:@person.Phone"><i class="fa fa-phone" aria-hidden="true"></i> @person.Phone</a>
							</li>
				        }
				        if(person.Mobile != ""){
				            <li>
								<a href="tel:@person.Mobile"><i class="fa fa-mobile" aria-hidden="true"></i> @person.Mobile</a>
							</li>
				        }
				    }
					@if(!settings.HideEmail && person.Email != ""){
					    <li>
							<a href="mailto:@person.Email"><i class="fa fa-envelope" aria-hidden="true"></i> @person.Email</a>
						</li>
					}
				</ul>
				@if(!settings.HideSocialLinks){
				    <ul class="social-nav social-nav--small">
				        @if(person.Facebook != ""){
				            <li><a href="@person.Facebook" target="_blank" title="Facebook"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
				        }
				        @if(person.Twitter != ""){
				            <li><a href="@person.Twitter" target="_blank" title="Twitter"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
				        }
				        @if(person.Instagram != ""){
				            <li><a href="@person.Instagram" target="_blank" title="Instagram"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
				        }
				        @if(person.LinkedIn != ""){
				            <li><a href="@person.LinkedIn" target="_blank" title="LinkedIn"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
				        }
				        @if(person.Youtube != ""){
				            <li><a href="@person.Youtube" target="_blank" title="Youtube"><i class="fa fa-youtube-play" aria-hidden="true"></i></a></li>
				        }
					</ul>
				}
				
			</div>
		</div>
    }
    
</div>
]]></View>
    <View path="Widgets/Grid/ColumnPod.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.ColumnPod)Model.Content;
    var settings = (ContentModels.ColumnPodSettings)Model.Settings;
}

<div class="grid-item grid-item--pod pod @(settings.BoxedColumn ? "grid-item--boxed" : "") @(settings.CenterContent ? "text-center" : "" ) @(settings.PodMediaLeft ? "pod--compact" : "")">
    <article>
        @if (content.Icon != null || content.Image != null)
        {
            <div class="pod__image">
                @if (content.Link != null)
                {
                    <a href="@content.Link.Url" target="@content.Link.Target" title="@content.Heading">
                        @if (content.Icon != null)
                        {
                            <i class="fa @(content.Icon)" aria-hidden="true"></i>
                        }
                        else
                        {
                            <img class="lazyload"
                                 src="@(content.Image.Url())?width=10"
                                 data-sizes="auto"
                                 data-srcset="@(content.Image.Url())?upscale=false&width=300&quality=80 300w,
                        	    @(content.Image.Url())?upscale=false&width=500&quality=80 500w,
                        	    @(content.Image.Url())?upscale=false&width=750&quality=80 750w,
                        	    @(content.Image.Url())?upscale=false&width=1000&quality=80 1000w"
                                 alt="@content.Heading">
                        }
                    </a>
                }
                else
                {
                    if (content.Icon != null)
                    {
                        <i class="fa @(content.Icon)" aria-hidden="true"></i>
                    }
                    else
                    {
                        <img class="lazyload"
                             src="@(content.Image.Url())?width=10"
                             data-sizes="auto"
                             data-srcset="@(content.Image.Url())?upscale=false&width=300&quality=80 300w,
                    	    @(content.Image.Url())?upscale=false&width=500&quality=80 500w,
                    	    @(content.Image.Url())?upscale=false&width=750&quality=80 750w,
                    	    @(content.Image.Url())?upscale=false&width=1000&quality=80 1000w"
                             alt="@content.Heading">
                    }
                }
            </div>
        }
        <div class="pod__text">
            @if (content.Link != null)
            {
                <h3 class="h5"><a href="@content.Link.Url" target="@content.Link.Target" title="@content.Heading">@content.Heading</a></h3>
            }
            else
            {
                <h3 class="h5">@content.Heading</h3>
            }
            @Html.Raw(content.Text)

            @if (content.Buttons != null & content.Buttons.Any())
            {
                <div class="button-wrap">
                    @foreach (var button in content.Buttons)
                    {
                        @Html.Partial("~/Views/Partials/Widgets/RenderButton.cshtml", button)
                    }
                </div>
            }
        </div>
    </article>
</div>]]></View>
    <View path="Widgets/Grid/ColumnPriceList.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.ColumnPriceList)Model.Content;
    var settings = (ContentModels.ColumnPriceListSettings)Model.Settings;
}

<div class="grid-item grid-item--price-list @(settings.BoxedColumn ? "grid-item--boxed" : "")">

    @if (content.Items != null && content.Items.Any())
    {
        if (content.Heading != "")
        {
            <legend>@content.Heading</legend>
        }
        foreach (var itemBlock in content.Items)
        {
            var item = (ContentModels.PriceListItem)itemBlock.Content;

            <article>
                <div class="row">
                    <div class="menu-info col-80">
                        @if (item.Title != "")
                        {
                            <h5>@item.Title</h5>
                        }
                        @if (item.Description != "")
                        {
                            <p>@item.Description</p>
                        }
                    </div>
                    @if (item.Price != "")
                    {
                        <div class="menu-price col-20">
                            @item.Price
                        </div>
                    }
                </div>
            </article>
        }
    }
</div>
]]></View>
    <View path="Widgets/Grid/ColumnPriceTable.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.ColumnPriceTable)Model.Content;
    var settings = (ContentModels.ColumnPriceTableSettings)Model.Settings;
}

<div class="grid-item @(settings.BoxedColumn ? "grid-item--boxed" : "") grid-item--price-table">

    <div class="price-table @(settings.CenterContent ? "text-center" : "")">

        @if (content.Image != null)
        {
            <div class="price-table__image">
                <img src="@content.Image.Url()" alt="">
            </div>
        }

        @if (content.PriceTableName != "")
        {
            <h4 class="price-table__heading">@content.PriceTableName</h4>
        }
        <div class="price-table__price">@content.Price<span> @content.PriceUnit</span></div>


        @if (content.Features != null && content.Features.Any())
        {
            <div class="price-table__features">
                <ul>
                    @foreach (var feature in content.Features)
                    {
                        <li><i class="fa fa-check" aria-hidden="true"></i> @feature</li>
                    }
                </ul>
            </div>
        }

        @if (content.Buttons != null && content.Buttons.Any())
        {
            <div class="button-wrap">
                @foreach (var button in content.Buttons)
                {
                    @Html.Partial("~/Views/Partials/Widgets/RenderButton.cshtml", button)
                }
            </div>
        }

        @if (content.Disclaimer != "")
        {
            <div class="price-table__disclaimer">
                @content.Disclaimer
            </div>
        }

    </div>

</div>]]></View>
    <View path="Widgets/Grid/ColumnQuote.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.ColumnQuote)Model.Content;
    var settings = (ContentModels.ColumnQuoteSettings)Model.Settings;
}

<div class="grid-item grid-item--quote @(settings.BoxedColumn ? "grid-item--boxed" : "")">
    <blockquote>
        @content.Quote
        <footer>
            @if (content.AuthorImage != null)
            {
                <img src="@(content.AuthorImage.GetCropUrl(100,100,quality: 80))" alt="@content.Author">
            }
            <div>
                @content.Author
                <div>
                    @content.AuthorTitle
                </div>
            </div>
        </footer>
    </blockquote>
</div>]]></View>
    <View path="Widgets/Grid/ColumnSlider.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.ColumnSlider)Model.Content;
    var settings = (ContentModels.ColumnSliderSettings)Model.Settings;
}

<div class="grid-item grid-item--slider">
    <div class="slider js-flickity"
         data-flickity-options='
    		{
    			"cellAlign": "left",
    			"contain": 1,
    			"prevNextButtons": @(settings.ShowNextPrevArrows ? "1" : "0"),
    			"pageDots": @(settings.ShowPageDots ? "1" : "0"),
    			"setGallerySize": 1,
    			"imagesLoaded": 1,
    			"wrapAround": @(settings.WrapAround ? "1" : "0"),
    			"autoPlay": @(settings.Autoplay),
    			"pauseAutoPlayOnHover": @(settings.PauseAutoplayOnHover ? "1" : "0"),
    			"adaptiveHeight": 1,
    			"fade": @(settings.FadeAnimation ? "1" : "0")
    		}
    	'>

        @if (content.Columns != null)
        {
            foreach (BlockListItem column in content.Columns)
            {
                var columnWidth = column.Settings?.Value<string>("columnWidth", "")?.Replace("%", "") ?? "100";
                var columnType = column.Content.ContentType.Alias;

                if (columnWidth == "25")
                {
                    columnWidth = "25 col-m-50";
                }
                else if (columnWidth == "20")
                {
                    columnWidth = "20 col-m-33";
                }
                else if (columnWidth == "10")
                {
                    columnWidth = "10 col-m-20";
                }

                <div class="row row--flat" style="width:100%">

                    <div class="col-@(columnWidth) col-s-100">
                        @if (columnType == "lineBreak")
                        {
                            @Html.Partial("~/Views/Partials/Shared/LineBreak.cshtml", column)
                        }
                        else
                        {
                            @Html.Partial("~/Views/Partials/Widgets/Grid/" + columnType + ".cshtml", column, new ViewDataDictionary(ViewData) { { "containerWidth", "standard" }, { "order", 2 } })
                        }
                    </div>

                </div>
            }

        }
    </div>
</div>]]></View>
    <View path="Widgets/Grid/ColumnSubGrid.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.ColumnSubGrid)Model.Content;
    var settings = (ContentModels.ColumnSubGridSettings)Model.Settings;
}

@if (content.Columns != null && content.Columns.Any())
{
    <div class="row sub-grid">

        @foreach (BlockListItem column in content.Columns)
        {
            var columnWidth = column.Settings?.Value<string>("columnWidth", "")?.Replace("%", "") ?? "100";
            var columnType = column.Content.ContentType.Alias;

            switch (columnWidth)
            {
                case "":
                    columnWidth = "col";
                    break;
                case "25":
                    columnWidth = "col-25 col-m-50";
                    break;
                case "20":
                    columnWidth = "col-20 col-m-33";
                    break;
                case "10":
                    columnWidth = "col-10 col-m-20";
                    break;
                default:
                    columnWidth = "col-" + columnWidth;
                    break;
            }

            <div class="@(columnWidth) col-s-100">
                @if (columnType == "lineBreak")
                {
                    @Html.Partial("~/Views/Partials/Shared/LineBreak.cshtml", column)
                }
                else
                {
                    @Html.Partial("~/Views/Partials/Widgets/Grid/" + columnType + ".cshtml", column, new ViewDataDictionary(ViewData))
                }
            </div>
        }

    </div>
}
]]></View>
    <View path="Widgets/Grid/ColumnText.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.ColumnText)Model.Content;
    var settings = (ContentModels.ColumnTextSettings)Model.Settings;
}

<div class="grid-item grid-item--text @(settings.BoxedColumn ? "grid-item--boxed" : "")">
    @content.Text
</div>]]></View>
    <View path="Widgets/Grid/ColumnUmbracoForm.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.ColumnUmbracoForm)Model.Content;
    var settings = (ContentModels.ColumnUmbracoFormSettings)Model.Settings;
}

<div class="grid-item grid-item--form @(settings.BoxedColumn ? "grid-item--boxed" : "")">
    @if (content.Form != null)
    {
        @Umbraco.RenderMacroAsync("renderUmbracoForm", new { FormGuid = content.Form, FormTheme = "igloo", ExcludeScripts = "0" })
    }
</div>]]></View>
    <View path="Widgets/Grid/ColumnVideo.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.ColumnVideo)Model.Content;
    var settings = (ContentModels.ColumnVideoSettings)Model.Settings;

    var videoUrl = content.Video != null ? content.Video.Url() : "";
    var posterUrl = content.Poster != null ? content.Poster.Url() : "";
    var mute = settings.Mute ? "muted" : "";
    var autoplay = settings.Autoplay ? "autoplay playsinline" : "";
    var hideControls = settings.HideControls ? "" : "controls";
    var loop = settings.Loop ? "loop" : "";
    var videoShadow = settings.VideoShadow ? "video-shadow" : "";
}

<div class="grid-item grid-item--video @videoShadow">

    @if (videoUrl != "")
    {
        <video @(mute) @(autoplay) @(hideControls) @(loop)
               @if (posterUrl != "") { <text> poster="@posterUrl" </text> }>
            <source src="@(videoUrl)" type="video/mp4">
        </video>
    }
    else if (content.VideoEmbedCode != "")
    {
        @Html.Raw(content.VideoEmbedCode)
    }

</div>]]></View>
    <View path="Widgets/Hero.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@{
    var content = (Hero)Model.Content;
    var settings = (HeroSettings)Model.Settings;
    
    var order = (int)ViewData["order"];
   
    var textColorClass = settings.TextColor?.ToString() == "dark" ? "" : "light-color"; 
    var overlayClass = settings.TextColor?.ToString() == "dark" ? "overlay--light" : ""; 
    
    var animateClass = settings.Animate ? "animate" : "";
    var containerWidthClass = "container";

    switch (settings.ContainerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container-fluid";
            break;
    }
    
    var height = settings.Height == null ? "" : settings.Height.Replace("%", "");
    var textWidth = settings.TextWidth == null ? "100" : settings.TextWidth.Replace("%", "");
}
<section class="hero hero--@(height) @(overlayClass) @(animateClass) hero--v-@(settings.VerticalTextAlignment)" @if(!string.IsNullOrEmpty(settings.AnchorID)){ <text>id="@settings.AnchorID"</text> }>

    <div class="hero__inner">
        <div class="@(containerWidthClass)">
            <div class="row row--@settings.TextAlignment">
                <div class="hero__inner @(textColorClass) col-@(textWidth) col-m-100">

                    @if (content.PreHeading != "")
                    {
                        <div class="pre-head">@content.PreHeading</div>
                    }
                    @if (content.Heading != "")
                    {
                        if (order == 0)
                        {
                            <h1>@content.Heading</h1>
                        }
                        else
                        {
                            <h2>@content.Heading</h2>
                        }
                    }
                    @if(content.Text.ToString() != "")
                    {
                        <div class="hero__text text-big">
                            @content.Text
                        </div>
                    }
                    
                    @if(content.Buttons != null & content.Buttons.Any()){
                        <div class="button-wrap">
                            @foreach(var button in content.Buttons){
                                @Html.Partial("~/Views/Partials/Widgets/RenderButton.cshtml", button)
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    
    
    @if(content.Background != null){
    
        var backgroundMediaUrl = content.Background.Url();
        
        var background = content.Background;
    
        if(backgroundMediaUrl.Contains(".mp4")){
            <div class="hero__video">
                <video class="hero__video-player" playsinline muted loop autoplay>
                    <source src="@(backgroundMediaUrl)" type="video/mp4">
                </video>
            </div>
        }
        else{
          
            double heroHeight = 0.5;
            
            if(height != ""){
                heroHeight = (Convert.ToDouble(height) / 100);
            }
            
            <div class="hero__background hide--m lazyload"
                data-bgset="
                    @background.GetCropUrl(2560, Convert.ToInt32(1440 * heroHeight), quality: 80) 2560w,
        		    @background.GetCropUrl(1920, Convert.ToInt32(1080 * heroHeight), quality: 80) 1920w,
        		    @background.GetCropUrl(1600, Convert.ToInt32(900 * heroHeight), quality: 80) 1600w"
                 data-sizes="auto">
            </div>
            
            <div class="hero__background show--m lazyload"
                data-bgset="
        		    @background.GetCropUrl(1800, Convert.ToInt32(3200 * heroHeight), quality: 80) 1800w,
        		    @background.GetCropUrl(1440, Convert.ToInt32(2560 * heroHeight), quality: 80) 1440w,
        		    @background.GetCropUrl(1080, Convert.ToInt32(1920 * heroHeight), quality: 80) 1080w,
        		    @background.GetCropUrl(750, Convert.ToInt32(1334 * heroHeight), quality: 80) 750w"
                 data-sizes="auto">
            </div>
        }
    
    }
    
    
    @if(!string.IsNullOrWhiteSpace(settings.OverlayStrength)){
        <div class="overlay @(overlayClass)" style="opacity:0.@(settings.OverlayStrength.Replace("%", ""))"></div>
    }

    @if (order == 0 && height == "100")
    {
        <i class="icon-scroll fa fa-chevron-down @(overlayClass)" aria-hidden="true"></i>
    }

</section>
]]></View>
    <View path="Widgets/ImageWidget.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.ImageWidget)Model.Content;
    var settings = (ContentModels.ImageWidgetSettings)Model.Settings;

    var compactClass = settings.Compact ? "block--compact" : "";

    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "white-bg" : backgroundColor + "-bg";

    var containerWidthClass = "container";
    switch (settings.ImageSize)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "";
            break;
    }
}

@if (content.ImageBlock != null)
{
    <div class="block @(compactClass) @(backgroundColorClass) @(textColorClass)" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>

        <div class="@containerWidthClass">
            <div class="@(containerWidthClass == "" ? "row row--flat" : "row")">

                <div class="col-100">

                    <figure class="image-block">

                        <img class="lazyload"
                             src="@(content.ImageBlock.Url())?width=50"
                             data-sizes="auto"
                             data-srcset="@(content.ImageBlock.Url())?upscale=false&width=480&quality=80 480w,
                    	    @(content.ImageBlock.Url())?upscale=false&width=768&quality=80 768w,
                    	    @(content.ImageBlock.Url())?upscale=false&width=1000&quality=80 1000w,
                    	    @(content.ImageBlock.Url())?upscale=false&width=1300&quality=80 1300w,
                    	    @(content.ImageBlock.Url())?upscale=false&width=1600&quality=80 1600w,
                    	    @(content.ImageBlock.Url())?upscale=false&width=1920&quality=80 1920w" alt="@content.ImageCaption" />

                        @if (content.ImageCaption != "")
                        {
                            <figcaption>@content.ImageCaption</figcaption>
                        }
                    </figure>

                </div>

            </div>
        </div>

    </div>

}]]></View>
    <View path="Widgets/InstagramFeed.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inject Igloo.Core.Services.ISettingsService _settingsService;
@{
    var content = (ContentModels.InstagramFeed)Model.Content;
    var settings = (ContentModels.InstagramFeedSettings)Model.Settings;

    var instagramUsername = _settingsService.Get<string>(Umbraco.AssignedContentItem, "instagramUsername");
    var instagramAccessToken = _settingsService.Get<string>(Umbraco.AssignedContentItem, "instagramAccessToken");
    var removeImageBorder = settings.RemoveImageBorder ? "gallery__group--no-gap" : "";

    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "white-bg" : backgroundColor + "-bg";

    var containerWidthClass = "";
    switch (settings.ContainerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container container--fluid";
            break;
    }


}

<section class="block gallery @(settings.Compact ? "block--compact" : "") @(backgroundColorClass)" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>
    <div class="@(containerWidthClass)">
        <div class="row">
            <div class="col-100">
                <div class="gallery__group gallery__group--grid gallery--instagram @(removeImageBorder)" id="instafeed"
                     data-token="@(instagramAccessToken)"
                     data-username="@(instagramUsername)"
                     data-count="@(content.ImageCount)"
                     data-link="@(settings.LinkImages ? 1 : 0)"
                     data-icon="@(settings.LinkToInstagramAccount ? 1 : 0)">
                </div>
            </div>
        </div>
    </div>
</section>]]></View>
    <View path="Widgets/LatestFromFeed.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.LatestFromFeed)Model.Content;
    var settings = (ContentModels.LatestFromFeedSettings)Model.Settings;

    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "gray-bg" : backgroundColor + "-bg";
}
<section class="block feed @(backgroundColorClass) @(textColorClass)" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>

    @if (content.PreHeading != "" || content.Heading != "" || content.IntroText.ToString() != "")
    {

        <div class="block__header">
            @if (content.PreHeading != "")
            {
                <div class="pre-head">@content.PreHeading</div>
            }
            @if (content.Heading != "")
            {
                <h2>@content.Heading</h2>
            }
            @if (content.IntroText.ToString() != "")
            {
                <div class="block__header-text text-big">
                    @content.IntroText
                </div>
            }
        </div>
    }

    @if (content.FeedPage != null)
    {
        ContentModels.Feed FeedPage = content.FeedPage as ContentModels.Feed;

        int numberOfPosts = (settings.NumberOfPosts != "" ? int.Parse(settings.NumberOfPosts) : 3);

        var posts = content.FeedPage.Children<ContentModels.Post>().Where(x => x.IsVisible()).OrderByDescending(x => x.Date).Take(numberOfPosts).ToList();

        <div class="block__body">

            <div class="container">

                <div class="row row--center row--no-wrap-s box-wrap">

                    @foreach (var post in posts)
                    {
                        <div class="col-33 col-s-80">
                            <article class="box">
                                @if (post.PostImage != null)
                                {
                                    <div class="box__image">
                                        <a href="@post.Url()" title="@post.Heading" tabindex="-1">
                                            <img class="lazyload"
                                                 src="@(post.PostImage.GetCropUrl(10,7))"
                                                 data-sizes="auto"
                                                 data-srcset="@(post.PostImage.GetCropUrl(300,210, quality: 80)) 300w,
                                        	    @(post.PostImage.GetCropUrl(500,350, quality: 80)) 500w,
                                        	    @(post.PostImage.GetCropUrl(1000,700, quality: 80)) 1000w"
                                                 alt="@post.Heading">
                                        </a>
                                    </div>
                                }
                                <div class="box__text">
                                    <h3 class="h5"><a title="@post.Heading" href="@post.Url()">@post.Heading</a></h3>
                                    @if (!FeedPage.HideDates)
                                    {
                                        <div class="box__meta">
                                            @String.Format("{0: dd MMMM yyyy}", post.Date)
                                        </div>
                                    }
                                    <p>@post.PostDescription</p>
                                </div>
                            </article>
                        </div>
                    }

                </div>

            </div>

        </div>

        if (content.Buttons != null && content.Buttons.Any())
        {
            <div class="text-center">
                <div class="button-wrap">
                    @foreach (var button in content.Buttons)
                    {
                        @await Html.PartialAsync("~/Views/Partials/Widgets/Renderbutton.cshtml", button)
                    }
                </div>
            </div>
        }
    }
</section>]]></View>
    <View path="Widgets/Login.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using Igloo.Core.Models
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inject Igloo.Core.Services.ISettingsService _settingsService;
@{
    var content = (ContentModels.Login)Model.Content;
    var settings = (ContentModels.LoginSettings)Model.Settings;

    var order = (int)ViewData["order"];

    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "gray-bg" : backgroundColor + "-bg";
    var location = new Uri($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}");

    var isProtectedPage = Umbraco.AssignedContentItem.Url(mode: UrlMode.Absolute) != location.AbsoluteUri; // test if this is the real login page or a protected page so we can redirect the user to the protected page after login

    var loginModel = new MemberLoginViewModel();
    loginModel.RedirectUrl = settings.RedirectUrl != null ? settings.RedirectUrl.Url : "/";
    loginModel.RedirectUrl = isProtectedPage ? location.AbsolutePath : loginModel.RedirectUrl;
}

<section class="account-form" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>
    <div class="account-form__inner @backgroundColorClass @textColorClass">
        <div class="account-form__content">

            @if (content.Heading != "")
            {
                if (order == 0)
                {
                    <h1 class="h2">@content.Heading</h1>
                }
                else
                {
                    <h2>@content.Heading</h2>
                }
            }
            @content.Text
            
            @ViewData["errors"]

            @await Html.PartialAsync("~/Views/Partials/Shared/LoginForm.cshtml", loginModel)

        </div>
    </div>

    @if (content.Image != null)
    {
        <div class="account-form__media lazyload hide--m"
             data-bgset="@(content.Image.Url())?upscale=false&width=1280&quality=80 1280w,
    		@(content.Image.Url())?upscale=false&width=1600&quality=80 1600w,
    		@(content.Image.Url())?upscale=false&width=1920&quality=80 1920w"
             data-sizes="auto">
        </div>
    }

</section>

]]></View>
    <View path="Widgets/Logos.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.Logos)Model.Content;
    var settings = (ContentModels.LogosSettings)Model.Settings;

    var containerWidthClass = "container";
    switch (settings.ContainerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container-fluid";
            break;
    }

    var compactClass = settings.Compact ? "block--compact" : "";
    var blackWhiteClass = settings.BlackWhite ? "black-and-white" : "";

    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "gray-bg" : backgroundColor + "-bg";

}
<section class="block logos @(backgroundColorClass) @(textColorClass) @(compactClass)" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>

    @if (content.PreHeading != "" || content.Heading != "" || content.Text.ToString() != "")
    {

        <div class="block__header">
            @if (content.PreHeading != "")
            {
                <div class="pre-head">@content.PreHeading</div>
            }
            @if (content.Heading != "")
            {
                <h2>@content.Heading</h2>
            }
            @if (content.Text.ToString() != "")
            {
                <div class="block__header-text text-big">
                    @content.Text
                </div>
            }
        </div>
    }

    <div class="block__body">

        <div class="@(containerWidthClass)">

            <div class="row row--center">

                <div class="col-100">

                    @if (content.LogoItems != null)
                    {
                        <ul class="logos @(blackWhiteClass)">
                            @foreach (var logo in content.LogoItems)
                            {
                                var logoContent = (ContentModels.Logo)logo.Content;

                                if (logoContent.LogoImage != null)
                                {
                                    <li style="width: @(logoContent.CustomWidth == "" ? "120px" : logoContent.CustomWidth)">
                                        @if (logoContent.Link != null)
                                        {
                                            <a href="@(logoContent.Link.Url)" target="@(logoContent.Link.Target)" title="@(logoContent.Link.Name)"><img class="lazyload" data-src="@logoContent.LogoImage.Url()"></a>
                                        }
                                        else
                                        {
                                            <div><img class="lazyload" data-src="@logoContent.LogoImage.Url()"></div>
                                        }
                                    </li>
                                }
                            }
                        </ul>
                    }

                </div>
            </div>
        </div>
    </div>
</section>]]></View>
    <View path="Widgets/Map.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inject Igloo.Core.Services.ISettingsService _settingsService;
@{
    var content = (ContentModels.Map)Model.Content;
    var settings = (ContentModels.MapSettings)Model.Settings;

    var googleMapsAPIKey = _settingsService.Get<string>(Umbraco.AssignedContentItem, "googleMapsApikey");
    var height = settings.Height == null ? "" : settings.Height.Replace("%", "");
}

@if (!content.ShowContentNextToMap)
{
    <section class="map map--@(height)">

        <div class="map__canvas"
             data-lat="@(content.Latitude)"
             data-long="@(content.Longitude)"
             data-zoom="@(settings.MapZoom)"
             data-pin="@(settings.CustomMapPinIcon != null ? settings.CustomMapPinIcon.Url() : "no")">
        </div>

    </section>
}
else
{
    var order = (int)ViewData["order"];

    var openingHours = content.OpeningHours;

    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "gray-bg" : backgroundColor + "-bg";

    <section class="map map--@(height) map--split map--text-@(settings.TextPlacement)" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>

        <div class="map__content @(backgroundColorClass) @(textColorClass)">

            <div class="map__content-inner">

                @if (content.PreHeading != "")
                {
                    <div class="pre-head">@content.PreHeading</div>
                }
                @if (content.Heading != "")
                {
                    if (order == 0)
                    {
                        <h1>@content.Heading</h1>
                    }
                    else
                    {
                        <h2>@content.Heading</h2>
                    }
                }
                @if (content.Text.ToString() != "")
                {
                    @content.Text
                }

                <address>
                    <ul class="contact-list">
                        @if (content.Address != "")
                        {
                            <li>
                                <i class="fa fa-map-marker" aria-hidden="true"></i>
                                @Html.Raw(content.Address.Replace("\n", "<br/>"))
                            </li>
                        }
                        @if (content.PhoneNumber != "")
                        {
                            <li>
                                <a href="tel:@(content.PhoneNumber)"><i class="fa fa-phone" aria-hidden="true"></i> @content.PhoneNumber</a>
                            </li>
                        }
                        @if (content.Email != "")
                        {
                            <li>
                                <a href="mailto:@(content.Email)"><i class="fa fa-envelope" aria-hidden="true"></i> @content.Email</a>
                            </li>
                        }
                    </ul>
                </address>

                @if (openingHours != null)
                {
                    <ul class="opening-hours">
                        @foreach (var openingHourBlock in openingHours)
                        {
                            var openingHour = (ContentModels.OpeningHour)openingHourBlock.Content;

                            <li>
                                <span class="time">@openingHour.Time</span>
                                <span class="day">@openingHour.Day</span>
                            </li>
                        }
                    </ul>
                }

                @if (content.Buttons != null && content.Buttons.Any())
                {
                    <div class="button-wrap">
                        @foreach (var button in content.Buttons)
                        {
                            @await Html.PartialAsync("~/Views/Partials/Widgets/RenderButton.cshtml", button)
                        }
                    </div>
                }

            </div>

        </div>

        <div class="map__canvas"
             data-lat="@(content.Latitude)"
             data-long="@(content.Longitude)"
             data-zoom="@(settings.MapZoom)"
             data-pin="@(settings.CustomMapPinIcon != null ? settings.CustomMapPinIcon.Url() : "no")">
        </div>

    </section>
}
<script src="//maps.googleapis.com/maps/api/js?key=@(googleMapsAPIKey)"></script>

]]></View>
    <View path="Widgets/Newsletter.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Igloo.Core.Controllers
@inject Igloo.Core.Services.ISettingsService _settingsService;
@{
    var content = (ContentModels.Newsletter)Model.Content;
    var settings = (ContentModels.NewsletterSettings)Model.Settings;

    var buttonColor = settings.ButtonColor?.ToString();
    var buttonClass = string.IsNullOrWhiteSpace(buttonColor) ? "button--theme" : "button--" + buttonColor;

    var newsletterEmailMarketingProvider = _settingsService.Get<string>(Umbraco.AssignedContentItem, "newsletterEmailMarketingProvider");
    var newsletterDefaultSubscriberListID = _settingsService.Get<string>(Umbraco.AssignedContentItem, "newsletterDefaultSubscriberListID");
    var animateClass = settings.Animate ? "animate" : "";
    var thankYouMessage = Umbraco.GetDictionaryValue("Thank you");
    var emailLabel = Umbraco.GetDictionaryValue("Email");

    if (settings.ListID != "")
    {
        newsletterDefaultSubscriberListID = settings.ListID;
    }

    var pageID = Umbraco.AssignedContentItem.Id;

    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "gray-bg" : backgroundColor + "-bg";

    var backgroundMediaUrl = settings.BackgroundImage != null ? settings.BackgroundImage.Url() : "";

    if (backgroundMediaUrl != "")
    {
        backgroundColorClass = "";
    }
}

<section class="block newsletter @(backgroundColorClass) @(textColorClass) @(animateClass)" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>
    <div class="newsletter__inner">
        @if (content.Heading != "")
        {
            <h2 class="h3">@content.Heading</h2>
        }
        <div class="text-big">
            @content.Text
        </div>

        @if (newsletterEmailMarketingProvider == "MailChimp")
        {
            <form action="@(Url.GetUmbracoApiService("AddMailchimpMember", "IglooNewsletter"))" data-thankyoumessage="@thankYouMessage">
                @Html.AntiForgeryToken()
                <input type="hidden" name="ListID" value="@(newsletterDefaultSubscriberListID)" />
                <input type="hidden" name="PageID" value="@(pageID)" />
                <label for="newsletter-email" class="sr-only">@emailLabel</label>
                <input type="email" name="Email" autocomplete="email" id="newsletter-email" required placeholder="@content.PlaceholderText">
                <button class="button button--block @(buttonClass)" aria-label="Sign up for newsletter"><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
            </form>
        }
        else if (newsletterEmailMarketingProvider == "Campaign Monitor")
        {
            <form action="@(Url.GetUmbracoApiService("AddCampaignMonitorMember", "IglooNewsletter"))" data-thankyoumessage="@thankYouMessage">
                @Html.AntiForgeryToken()
                <input type="hidden" name="ListID" value="@(newsletterDefaultSubscriberListID)" />
                <input type="hidden" name="PageID" value="@(pageID)" />
                <label for="newsletter-email" class="sr-only">@emailLabel</label>
                <input type="email" name="Email" autocomplete="email" id="newsletter-email" required placeholder="@content.PlaceholderText">
                <button class="button button--block @(buttonClass)" aria-label="Sign up for newsletter"><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
            </form>
        }
        @if (content.SmallText != "")
        {
            <p class="newsletter__disclaimer">
                @content.SmallText
            </p>
        }
    </div>

    @if (backgroundMediaUrl != "")
    {
        <div class="block__background lazyload"
             data-bgset="@(backgroundMediaUrl)?upscale=false&width=1280&quality=80 1280w,
    		@(backgroundMediaUrl)?upscale=false&width=1600&quality=80 1600w,
    		@(backgroundMediaUrl)?upscale=false&width=1920&quality=80 1920w"
             data-sizes="auto">
        </div>
    }
</section>]]></View>
    <View path="Widgets/PeopleWidget.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.PeopleWidget)Model.Content;
    var settings = (ContentModels.PeopleWidgetSettings)Model.Settings;

    var containerWidthClass = "container";
    switch (settings.ContainerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container-fluid";
            break;
    }

    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "white-bg" : backgroundColor + "-bg";

    var columnWidth = "";

    switch (settings.PeoplePerRow)
    {
        case "2":
            columnWidth = "col-50 col-s-100";
            break;
        case "3":
            columnWidth = "col-33 col-s-100";
            break;
        case "4":
            columnWidth = "col-25 col-m-50 col-s-100";
            break;
        case "5":
            columnWidth = "col-20 col-m-33 col-s-50";
            break;
    }
}

<section class="block people @backgroundColorClass @textColorClass" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>

    @if (content.PreHeading != "" || content.Heading != "" || content.Text.ToString() != "")
    {

        <div class="block__header">
            @if (content.PreHeading != "")
            {
                <div class="pre-head">@content.PreHeading</div>
            }
            @if (content.Heading != "")
            {
                <h2>@content.Heading</h2>
            }
            @if (content.Text.ToString() != "")
            {
                <div class="block__header-text text-big">
                    @content.Text
                </div>
            }
        </div>
    }

    <div class="block__body">

        <div class="@containerWidthClass">

            <div class="row row--center people-wrap">

                @if (content.People != null)
                {

                    foreach (ContentModels.Person person in content.People)
                    {
                        <div class="@(columnWidth)">

                            <div class="person @(settings.CenterText ? "text-center" : "") @(settings.Boxed ? "person--boxed" : "")">
                                @if (person.Image != null)
                                {
                                    <div class="person__image @(settings.CircleImage ? "person__image--circle" :"")">
                                        <img class="lazyload"
                                             src="@(person.Image.GetCropUrl(10,10))"
                                             data-sizes="auto"
                                             data-srcset="@(person.Image.GetCropUrl(300,300, quality: 80)) 300w,
    								    @(person.Image.GetCropUrl(500,500, quality: 80)) 500w,
    								    @(person.Image.GetCropUrl(750,750, quality: 80)) 750w,
    								    @(person.Image.GetCropUrl(1000,1000, quality: 80)) 1000w"
                                             alt="@person.FullName">
                                    </div>
                                }
                                <div class="person__text">
                                    <h3 class="nm">@person.FullName</h3>
                                    @if (person.Title != "")
                                    {
                                        <h4 class="section-head">@person.Title</h4>
                                    }
                                    @if (person.Description != "" && !settings.HideDescriptions)
                                    {
                                        <p class="person__description">
                                            @person.Description
                                        </p>
                                    }
                                    <ul class="contact-list">
                                        @if (!settings.HidePhoneNumbers)
                                        {
                                            if (person.Phone != "")
                                            {
                                                <li>
                                                    <a href="tel:@person.Phone"><i class="fa fa-phone" aria-hidden="true"></i> @person.Phone</a>
                                                </li>
                                            }
                                            if (person.Mobile != "")
                                            {
                                                <li>
                                                    <a href="tel:@person.Mobile"><i class="fa fa-mobile" aria-hidden="true"></i> @person.Mobile</a>
                                                </li>
                                            }
                                        }
                                        @if (!settings.HideEmails && person.Email != "")
                                        {
                                            <li>
                                                <a href="mailto:@person.Email"><i class="fa fa-envelope" aria-hidden="true"></i> @person.Email</a>
                                            </li>
                                        }
                                    </ul>
                                    @if (!settings.HideSocialLinks)
                                    {
                                        <ul class="social-nav social-nav--small">
                                            @if (person.Facebook != "")
                                            {
                                                <li><a href="@person.Facebook" target="_blank" title="Facebook"><i class="fa fa-facebook" aria-hidden="true"></i></a></li>
                                            }
                                            @if (person.Twitter != "")
                                            {
                                                <li><a href="@person.Twitter" target="_blank" title="Twitter"><i class="fa fa-twitter" aria-hidden="true"></i></a></li>
                                            }
                                            @if (person.Instagram != "")
                                            {
                                                <li><a href="@person.Instagram" target="_blank" title="Instagram"><i class="fa fa-instagram" aria-hidden="true"></i></a></li>
                                            }
                                            @if (person.LinkedIn != "")
                                            {
                                                <li><a href="@person.LinkedIn" target="_blank" title="LinkedIn"><i class="fa fa-linkedin" aria-hidden="true"></i></a></li>
                                            }
                                            @if (person.Youtube != "")
                                            {
                                                <li><a href="@person.Youtube" target="_blank" title="Youtube"><i class="fa fa-youtube-play" aria-hidden="true"></i></a></li>
                                            }
                                        </ul>
                                    }

                                </div>
                            </div>

                        </div>
                    }

                }

            </div>

        </div>

    </div>

</section>]]></View>
    <View path="Widgets/Register.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Igloo.Core.Controllers; 
@{
    var content = (ContentModels.Register)Model.Content;
    var settings = (ContentModels.RegisterSettings)Model.Settings;

    var order = (int)ViewData["order"];
    var registerModel = new MemberRegisterModel();

    //registerModel.MemberTypeAlias = Services.MemberService.GetDefaultMemberType();

    @*
        Configurable here:

        registerModel.RedirectUrl       - Optional. What path to redirect to if registration is successful.
                                          By default the member will be redirected to the current umbraco page
                                          unless this is specified.

        registerModel.UsernameIsEmail   - the default is true
                                          if you want the username to be different from the email
                                          address, set this to true and add a new Username field in
                                          the form below

                                          @Html.LabelFor(m => registerModel.Username)
                                          @Html.TextBoxFor(m => registerModel.Username)
                                          @Html.ValidationMessageFor(m => registerModel.Username)
    *@

    //Html.EnableClientValidation();
    //Html.EnableUnobtrusiveJavaScript();


    var success = TempData["FormSuccess"] != null;

    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "white-bg" : backgroundColor + "-bg";
}

<section class="account-form" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>
    <div class="account-form__inner @backgroundColorClass @textColorClass">
        <div class="account-form__content">

            @if (success)
            {
                @* This message will show if RedirectOnSucces is set to false (default) *@
                <div class="text-center">
                    <svg class="checkmark-svg" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52"><circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none"></circle><path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8"></path></svg>
                    <h4 class="success-color">@content.SuccessMessageHeading</h4>
                    @content.SuccessMessageText
                </div>
            }
            else
            {
                if (content.Heading != "")
                {
                    if (order == 0)
                    {
                        <h1 class="h2">@content.Heading</h1>
                    }
                    else
                    {
                        <h2>@content.Heading</h2>
                    }
                }

                @content.Text

                @ViewData["errors"]

                @using (Html.BeginUmbracoForm<IglooMemberController>("HandleRegisterMember"))
                {

                    @Html.LabelFor(m => registerModel.Name, Umbraco.GetDictionaryValue("Name"))
                    @Html.TextBoxFor(m => registerModel.Name)
                    @Html.ValidationMessageFor(m => registerModel.Name)

                    @Html.LabelFor(m => registerModel.Email, Umbraco.GetDictionaryValue("Email"))
                    @Html.TextBoxFor(m => registerModel.Email)
                    @Html.ValidationMessageFor(m => registerModel.Email)



                    @*
                if (registerModel.MemberProperties != null)
                {

                    for (var i = 0; i < registerModel.MemberProperties.Count; i++)
                    {
                        @Html.LabelFor(m => registerModel.MemberProperties[i].Value, registerModel.MemberProperties[i].Name)

                        @Html.EditorFor(m => registerModel.MemberProperties[i].Value)
                        @Html.HiddenFor(m => registerModel.MemberProperties[i].Alias)

                    }
                }
                    *@
                    <div class="password-input">
                        @Html.LabelFor(m => registerModel.Password, Umbraco.GetDictionaryValue("Password"))
                        <button class="password-input__show "><i class="fa fa-eye" aria-hidden="true"></i> @Umbraco.GetDictionaryValue("Show Password")</button>
                        <button class="password-input__hide" style="display: none;"><i class="fa fa-eye-slash" aria-hidden="true"></i> @Umbraco.GetDictionaryValue("Hide Password")</button>
                        @Html.PasswordFor(m => registerModel.Password)
                    </div>
                    @Html.ValidationMessageFor(m => registerModel.Password)

                    <div class="password-input">
                        @Html.LabelFor(m => registerModel.ConfirmPassword, Umbraco.GetDictionaryValue("Confirm Password"))
                        <button class="password-input__show "><i class="fa fa-eye" aria-hidden="true"></i> @Umbraco.GetDictionaryValue("Show Password")</button>
                        <button class="password-input__hide" style="display: none;"><i class="fa fa-eye-slash" aria-hidden="true"></i> @Umbraco.GetDictionaryValue("Hide Password")</button>
                        @Html.PasswordFor(m => registerModel.ConfirmPassword)
                    </div>
                    @Html.ValidationMessageFor(m => registerModel.ConfirmPassword)


                    @Html.HiddenFor(m => registerModel.MemberTypeAlias)
                    @Html.HiddenFor(m => registerModel.RedirectUrl)
                    @Html.HiddenFor(m => registerModel.UsernameIsEmail)

                    <button class="button button--block">@Umbraco.GetDictionaryValue("Register")</button>

                }
            }

        </div>
    </div>

    @if (content.Image != null)
    {
        <div class="account-form__media lazyload hide--m"
             data-bgset="@(content.Image.Url())?upscale=false&width=1280&quality=80 1280w,
    		@(content.Image.Url())?upscale=false&width=1600&quality=80 1600w,
    		@(content.Image.Url())?upscale=false&width=1920&quality=80 1920w"
             data-sizes="auto">
        </div>
    }

</section>



]]></View>
    <View path="Widgets/RenderButton.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var button = (ContentModels.Button)Model.Content;
    var buttonColor = button.ButtonColor?.ToString();
    var buttonClass = string.IsNullOrWhiteSpace(buttonColor) ? "button--theme" : "button--" + buttonColor;
}
@if (button.ButtonLink != null)
{
    <a href="@(button.ButtonLink.Url)" target="@(button.ButtonLink.Target)" @if (button.ButtonLink.Target == "_blank") { <text> rel="noopener" </text> } title="@(button.ButtonLink.Name)" class="button button--@(button.ButtonSize) @(buttonClass) button--@(button.Style)">@(button.ButtonText)</a>
}]]></View>
    <View path="Widgets/RenderWidgets.cshtml"><![CDATA[@using Igloo.Core.Extensions;
@using Umbraco.Cms.Core.Models.Blocks;
@using Microsoft.AspNetCore.Html;
@inherits UmbracoViewPage
@{
    Layout = null;
    var widgets = Model.Value<IEnumerable<BlockListItem>>("widgets");
    var indexNumberResult = this.ViewData.ContainsKey("indexNumber") ? this.ViewData["indexNumber"].ToString() : string.Empty;
    var useIndexNumber = int.TryParse(indexNumberResult, out int indexNumber);
}

@if (widgets != null)
{
    int index = useIndexNumber ? indexNumber : 0;
    foreach (var widget in widgets)
    {
        @await Html.RenderWidget(widget, WidgetIndex: index)
        index++;
    }
}]]></View>
    <View path="Widgets/SectionNavigation.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.SectionNavigation)Model.Content;
    var settings = (ContentModels.SectionNavigationSettings)Model.Settings;

    var theme = settings.Theme?.ToString();
    var themeClass = string.IsNullOrWhiteSpace(theme) ? "section-nav--white" : "section-nav--" + theme;

    var containerWidthClass = "section-nav--standard";
    switch (settings.ContainerWidth)
    {
        case "small":
            containerWidthClass = "section-nav--small";
            break;
        case "standard":
            containerWidthClass = "section-nav--standard";
            break;
        case "big":
            containerWidthClass = "section-nav--big";
            break;
        case "full width":
            containerWidthClass = "section-nav--full";
            break;
    }
}
<nav class="section-nav @(themeClass) @(containerWidthClass)" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>
    <ul>
        @foreach (var navItem in content.Items)
        {
            var item = (ContentModels.SectionNavigationItem)navItem.Content;

            if (item.Link != null)
            {
                <li>
                    <a href="@item.Link.Url" class="@(item.Link.Url == Umbraco.AssignedContentItem.Url() ? "active" : "")" target="@(item.Link.Target)" @if (item.Link.Target == "_blank") { <text> rel="noopener" </text> }>
                        <i class="fa @(item.Icon)" aria-hidden="true"></i>
                        <span class="section-nav__label">@item.LinkName</span>
                    </a>
                </li>
            }

        }
    </ul>
</nav>
]]></View>
    <View path="Widgets/Slider.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Igloo.Core.Extensions
@{
    var content = (ContentModels.Slider)Model.Content;
    var settings = (ContentModels.SliderSettings)Model.Settings;

    var order = (int)ViewData["order"];
}

<div class="slider js-flickity"
     data-flickity-options='
		{
			"cellAlign": "left",
			"contain": 1,
			"prevNextButtons": @(settings.ShowNextPrevArrows ? "1" : "0"),
			"pageDots": @(settings.ShowPageDots ? "1" : "0"),
			"setGallerySize": 1,
			"imagesLoaded": 1,
			"wrapAround": @(settings.WrapAround ? "1" : "0"),
			"autoPlay": @(settings.Autoplay),
			"pauseAutoPlayOnHover": @(settings.PauseAutoplayOnHover ? "1" : "0"),
			"adaptiveHeight": 1,
			"fade": @(settings.FadeAnimation ? "1" : "0")
		}
	' @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>

    @if (content.Widgets != null)
    {
        var index = 0;

        foreach (BlockListItem widget in content.Widgets)
        {
            if (order == 0 && index == 0)
            {
                <div class="slide">
                    @await Html.RenderWidget(widget, 0)
                </div>
            }
            else
            {
                <div class="slide">@await Html.RenderWidget(widget, 1)</div>
            }
            index++;
        }
        }
    </div>]]></View>
    <View path="Widgets/Tabs.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Igloo.Core.Extensions
@{
    var content = (ContentModels.Tabs)Model.Content;
    var settings = (ContentModels.TabsSettings)Model.Settings;

    var order = (int)ViewData["order"];
    var theme = settings.ThemeColor?.ToString();
    var themeClass = string.IsNullOrWhiteSpace(theme) ? "tabs--white" : "tabs--" + theme;
}

<section class="tabs @themeClass @(settings.TabNavigationPills ? "tabs--pills" : "")" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>

    <nav class="tabs__nav">
        @if (content.TabsList != null)
        {
            <ul>
                @{var i = 0;}
                @foreach (var tabBlock in content.TabsList)
                {
                    var tab = (ContentModels.Tab)tabBlock.Content;

                    <li><a href="#tab--@formatLink(tab.Title)" class="@(i == 0 ? "active" : "")">@tab.Title</a></li>
                    i++;
                }
            </ul>
        }
    </nav>

    <div class="tabs__container">

        @if (content.TabsList != null)
        {
            var x = 0;
            foreach (var tabBlock in content.TabsList)
            {

                var tab = (ContentModels.Tab)tabBlock.Content;

                <div id="tab--@formatLink(tab.Title)" class="tab @(x == 0 ? "tab--active" : "")">
                    <div class="tab__body">

                        @{ var widgets = tab.Widgets; }

                        @if (widgets != null)
                        {
                            foreach (var widget in widgets)
                            {
                                @await Html.RenderWidget(widget)
                            }
                        }

                    </div>
                </div>
                x++;
            }
        }

    </div>

</section>

@functions {

    private string formatLink(string word)
    {
        return word.Replace(" ", "-").Replace("&", "").Replace("?", "").Replace("/", "").Replace(".", "").Replace(",", "").ToLower();
    }
}]]></View>
    <View path="Widgets/Text.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.Text)Model.Content;
    var settings = (ContentModels.TextSettings)Model.Settings;

    var containerWidthClass = "container";
    switch (settings.ContainerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container-fluid";
            break;
    }

    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "white-bg" : backgroundColor + "-bg";
}

<section class="block text @backgroundColorClass @textColorClass" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>

    @if (content.SidebarWidgets != null && content.SidebarWidgets.Any())
    {
        <div class="block-text block-text--sidebar">
            <div class="@containerWidthClass">
                <div class="row">
                    <div class="col-66 col-s-100 @(settings.SidebarLeft ? "col-order-2 col-s-order-1" : "") block-text__main">
                        @content.RichText

                        @if (content.ContentWidgets != null && content.ContentWidgets.Any())
                        {
                            <div class="row sub-grid">

                                @foreach (BlockListItem column in content.ContentWidgets)
                                {
                                    var columnWidth = column.Settings?.Value<string>("columnWidth", "")?.Replace("%", "") ?? "100";
                                    var columnType = column.Content.ContentType.Alias;

                                    if (columnWidth == "25")
                                    {
                                        columnWidth = "25 col-m-50";
                                    }
                                    else if (columnWidth == "20")
                                    {
                                        columnWidth = "20 col-m-33";
                                    }
                                    else if (columnWidth == "10")
                                    {
                                        columnWidth = "10 col-m-20";
                                    }

                                    <div class="col-@(columnWidth) col-s-100">
                                        @if (columnType == "lineBreak")
                                        {
                                            @await Html.PartialAsync("~/Views/Partials/Shared/LineBreak.cshtml", column)
                                        }
                                        else
                                        {
                                            @await Html.PartialAsync("~/Views/Partials/Widgets/Grid/" + columnType + ".cshtml", column, new ViewDataDictionary(ViewData) { { "containerWidth", "standard" }, { "order", 2 } })
                                        }
                                    </div>
                                }

                            </div>
                        }
                    </div>
                    <aside class="col-30 col-s-100 @(settings.SidebarLeft ? "col-order-1 col-s-order-2" : "")  block-text__aside">

                        <div class="block-text__aside-inner @(settings.StickySidebar ? "block-text__aside-inner--sticky" : "")">

                            @foreach (BlockListItem sidebarWidget in content.SidebarWidgets)
                            {
                                var sidebarWidgetType = sidebarWidget.Content.ContentType.Alias;

                                @*=====================
                                    # Text
                                    =====================*@
                                if (sidebarWidgetType == "textSidebar")
                                {
                                    @await Html.PartialAsync("~/Views/Partials/Widgets/Text/SidebarText.cshtml", sidebarWidget)
                                }

                                @*=====================
                                    # Navigation
                                    =====================*@
                                if (sidebarWidgetType == "navigationSidebar")
                                {
                                    @await Html.PartialAsync("~/Views/Partials/Widgets/Text/NavigationSidebar.cshtml", sidebarWidget)
                                }

                                @*=====================
                                    # Button
                                    =====================*@
                                if (sidebarWidgetType == "button")
                                {
                                    <div class="block-text__aside-item block-text__aside-item--button">
                                        @await Html.PartialAsync("~/Views/Partials/Widgets/Renderbutton.cshtml", sidebarWidget)
                                    </div>
                                }
                            }

                        </div>

                    </aside>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="block-text block-text--single">
            <div class="@containerWidthClass">
                <div class="row">
                    <div class="col-100">
                        @content.RichText

                        @if (content.ContentWidgets != null && content.ContentWidgets.Any())
                        {
                            <div class="row sub-grid">

                                @foreach (BlockListItem column in content.ContentWidgets)
                                {
                                    var columnWidth = column.Settings?.Value<string>("columnWidth", "")?.Replace("%", "") ?? "100";
                                    var columnType = column.Content.ContentType.Alias;

                                    if (columnWidth == "25")
                                    {
                                        columnWidth = "25 col-m-50";
                                    }
                                    else if (columnWidth == "20")
                                    {
                                        columnWidth = "20 col-m-33";
                                    }
                                    else if (columnWidth == "10")
                                    {
                                        columnWidth = "10 col-m-20";
                                    }

                                    <div class="col-@(columnWidth) col-s-100">
                                        @if (columnType == "lineBreak")
                                        {
                                            @await Html.PartialAsync("~/Views/Partials/Shared/LineBreak.cshtml", column)
                                        }
                                        else
                                        {
                                            @await Html.PartialAsync("~/Views/Partials/Widgets/Grid/" + columnType + ".cshtml", column, new ViewDataDictionary(ViewData) { { "containerWidth", "standard" }, { "order", 2 } })
                                        }
                                    </div>
                                }

                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</section>]]></View>
    <View path="Widgets/Text/NavigationSidebar.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models;
@{
    var content = (ContentModels.NavigationSidebar)Model.Content;

    var links = content.Links;
    var levelsRendered = 0;
    var levelsOfChildren = int.Parse(content.LevelsOfChildren.ToString());
}

<div class="block-text__aside-item block-text__aside-item--links @(content.Boxed ? "block-text__aside-item--boxed" : "")">

    @if (content.Heading != "")
    {
        if (content.LinkHeading != null)
        {
            <h2 class="h6 navigation-link-heading">
                <a href="@(content.LinkHeading.Url)" target="@(content.LinkHeading.Target)" @if (content.LinkHeading.Target == "_blank") { <text> rel="noopener" </text> }>
                    @content.Heading
                </a>
            </h2>
        }
        else
        {
            <h2 class="h6">@content.Heading</h2>
        }
    }

    <nav class="navigation navigation--level-@levelsOfChildren" data-expand="@(content.DisableAutoExpand ? "false" : "true")">
        <ul>
            @if (links != null && links.Any())
            {
                foreach (Link link in links)
                {
                    if (link.Udi != null && link.Type == LinkType.Content)
                    {
                        var node = Umbraco.Content(link.Udi);

                        ListChildNodes(link, node, levelsRendered, levelsOfChildren);
                    }
                    else
                    {
                        <li>
                            <div>
                                <a href="@(link.Url)" target="@(link.Target)" @if (link.Target == "_blank") { <text> rel="noopener" </text> }>@link.Name</a>
                            </div>
                        </li>
                    }
                }
            }
        </ul>
    </nav>
</div>
@functions {
    void ListChildNodes(Link link, IPublishedContent root, int levelsRendered, int levelsOfChildren)
    {
        var expandLabel = Umbraco.GetDictionaryValue("Show Subpages");
        var content = (ContentModels.NavigationSidebar)Model.Content;

        if (levelsOfChildren >= levelsRendered)
        {
            var children = root.Children
            .Where(x => x.IsVisible())
            .Where(x => x?.ContentType?.Alias != "sitemap" && x?.ContentType?.Alias != "websiteSettings").ToList();
            levelsRendered++;

            if ((content.OnlyRenderChildren && levelsRendered > 1) || !content.OnlyRenderChildren)
            {
                if (link != null)
                {
                    <li class="@(link.Url == Umbraco.AssignedContentItem.Url() ? "selected" : "")">
                        <div>
                            <a href="@(link.Url)" target="@(link.Target)" @if (link.Target == "_blank") { <text> rel="noopener" </text> }>@link.Name</a>
                            @if (children.Count > 0 && levelsOfChildren >= levelsRendered)
                            {
                                <button aria-expanded="false" aria-label="@expandLabel"></button>
                            }
                        </div>
                        @if (children.Count > 0)
                        {
                            <ul>
                                @foreach (var child in children)
                                {
                                    ListChildNodes(null, child, levelsRendered, levelsOfChildren);
                                }
                            </ul>
                        }
                    </li>
                }
                else
                {
                    <li class="@(root.Url() == Umbraco.AssignedContentItem.Url() ? "selected" : "")">
                        <div>
                            <a href="@(root.Url())">@root.Name</a>
                            @if (children.Count > 0 && levelsOfChildren >= levelsRendered)
                            {
                                <button aria-expanded="false" aria-label="@expandLabel"></button>
                            }
                        </div>
                        @if (children.Count > 0)
                        {
                            <ul>
                                @foreach (var child in children)
                                {
                                    ListChildNodes(null, child, levelsRendered, levelsOfChildren);
                                }
                            </ul>
                        }
                    </li>
                        }
                    }
                    else
                    {
                        foreach (var child in children)
                        {
                            ListChildNodes(null, child, levelsRendered, levelsOfChildren);
                        }
                    }
                }
            }
        }]]></View>
    <View path="Widgets/Text/SidebarText.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.TextSidebar)Model.Content;
}

<div class="block-text__aside-item block-text__aside-item--text @(content.Boxed ? "block-text__aside-item--boxed" : "")">
    @if (content.Heading != "")
    {
        <h2 class="h6">@content.Heading</h2>
    }
    @content.Text
</div>]]></View>
    <View path="Widgets/TextAndImages.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.TextAndImages)Model.Content;
    var settings = (ContentModels.TextAndImagesSettings)Model.Settings;

    var order = (int)ViewData["order"];
    var removeImageBorder = settings.RemoveImageBorder ? "split__image--no-border" : "";
    var containImage = settings.ContainImage ? "split__image--contain" : "";
    var height = settings.Height == null ? "" : settings.Height.Replace("%", "");
    var animateClass = settings.Animate ? "animate" : "";

    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "white-bg" : backgroundColor + "-bg";

    var containerWidthClass = "split--full";
    switch (settings.ContainerWidth)
    {
        case "small":
            containerWidthClass = "split--small";
            break;
        case "standard":
            containerWidthClass = "split--standard";
            break;
        case "big":
            containerWidthClass = "split--big";
            break;
        case "full width":
            containerWidthClass = "split--full";
            break;
    }
}

<section class="split-wrap @(settings.Compact ? "" : "block") @(backgroundColorClass) @(textColorClass) @(animateClass)" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>

    <div class="split split--@(height) split--text-@(settings.TextBlockPlacement) @(containerWidthClass)">

        <div class="split__text split__text--v-@(settings.VerticalTextAlignment) split__text--text-@(settings.TextAlignment)">

            <div class="split__text-inner">

                @if (content.PreHeading != "")
                {
                    <div class="pre-head">@content.PreHeading</div>
                }
                @if (content.Heading != "")
                {
                    if (order == 0)
                    {
                        <h1>@content.Heading</h1>
                    }
                    else
                    {
                        <h2>@content.Heading</h2>
                    }
                }
                @if (content.Text.ToString() != "")
                {
                    @content.Text
                }

                @if (content.Buttons != null && content.Buttons.Any())
                {
                    <div class="button-wrap">
                        @foreach (var button in content.Buttons)
                        {
                            @await Html.PartialAsync("~/Views/Partials/Widgets/RenderButton.cshtml", button)
                        }
                    </div>
                }

            </div>

        </div>


        @if (content.Images != null)
        {
            <div class="split__image split__image--@content.Images.Count() @removeImageBorder @containImage">
                @foreach (var mediaItem in content.Images)
                {
                    if (settings.ContainImage)
                    {
                        <div class="split__image-item lazyload"
                             data-sizes="auto"
                             data-bgset="@(mediaItem.Url())?upscale=false&width=700&quality=80 700w,
                    		@(mediaItem.Url())?upscale=false&width=1000&quality=80 1000w,
                    		@(mediaItem.Url())?upscale=false&width=1500&quality=80 1500w"></div>
                    }
                    else
                    {
                        <div class="split__image-item lazyload"
                             data-sizes="auto"
                             data-bgset="
        				    @mediaItem.GetCropUrl(700, 700, quality: 80) 700w,
                    		@mediaItem.GetCropUrl(1000, 1000, quality: 80) 1000w,
                    		@mediaItem.GetCropUrl(1500, 1500, quality: 80) 1500w"></div>
                    }
                }
            </div>
        }

    </div>

</section>]]></View>
    <View path="Widgets/UmbracoForm.cshtml"><![CDATA[@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels
@{
    var content = (ContentModels.UmbracoForm)Model.Content;
    var settings = (ContentModels.UmbracoFormSettings)Model.Settings;

    var order = (int)ViewData["order"];

    var textColorClass = settings.TextColor?.ToString() == "white" ? "light-color" : "";
    var backgroundColor = settings.BackgroundColor?.ToString();
    var backgroundColorClass = string.IsNullOrWhiteSpace(backgroundColor) ? "white-bg" : backgroundColor + "-bg";

    var containerWidthClass = "container";
    switch (settings.ContainerWidth)
    {
        case "small":
            containerWidthClass = "container container--small";
            break;
        case "standard":
            containerWidthClass = "container";
            break;
        case "big":
            containerWidthClass = "container container--big";
            break;
        case "full width":
            containerWidthClass = "container-fluid";
            break;
    }

    var backgroundMediaUrl = settings.BackgroundImage != null ? settings.BackgroundImage.Url() : "";

    if (backgroundMediaUrl != "")
    {
        backgroundColorClass = "";
    }
}


<section class="block form @(backgroundColorClass) @(textColorClass)" @if (!string.IsNullOrEmpty(settings.AnchorID)) { <text> id="@settings.AnchorID" </text> }>

    @if (content.PreHeading != "" || content.Heading != "" || content.Text.ToString() != "")
    {
        <div class="block__header">
            @if (content.PreHeading != "")
            {
                <div class="pre-head">@content.PreHeading</div>
            }
            @if (content.Heading != "")
            {
                if (order == 0)
                {
                    <h1>@content.Heading</h1>
                }
                else
                {
                    <h2>@content.Heading</h2>
                }
            }
            @if (content.Text.ToString() != "")
            {
                <div class="block__header-text text-big">
                    @content.Text
                </div>
            }
        </div>
    }

    <div class="block__body">
        <div class="@containerWidthClass">
            @if (content.Form != null)
            {
                @await Umbraco.RenderMacroAsync("renderUmbracoForm", new { FormGuid = content.Form, FormTheme = "igloo", ExcludeScripts = "0" })
            }
        </div>
    </div>

    @if (backgroundMediaUrl != "")
    {
        <div class="block__background lazyload"
             data-bgset="@(backgroundMediaUrl)?upscale=false&width=1200&quality=80 1200w,
    		@(backgroundMediaUrl)?upscale=false&width=1600&quality=80 1600w,
    		@(backgroundMediaUrl)?upscale=false&width=1920&quality=80 1920w"
             data-sizes="auto">
        </div>
    }

</section>]]></View>
  </PartialViews>
  <Macros />
  <MacroPartialViews />
  <DictionaryItems>
    <DictionaryItem Key="d440e396-c178-4d5d-a293-d82a61adb8bc" Name="A member with this e-mail address already exists">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[A member with this e-mail address already exists.]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[En medlem med denna e-postadress finns redan.]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="3df5320c-c510-4f89-ae65-c4fe8da61d40" Name="A member with this username already exists">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[A member with this username already exists]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[En medlem med detta användarnamn finns redan]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="1015e398-5441-4119-9252-a69a6fbd68eb" Name="Account">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Account]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Konto]]></Value>
      <DictionaryItem Key="35648703-91f8-4ed9-9b32-d569e86540f5" Name="Login">
        <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Login]]></Value>
        <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Logga in]]></Value>
      </DictionaryItem>
      <DictionaryItem Key="db3ea082-ee01-43a6-acb3-eb09be3ecaf0" Name="Password">
        <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Password]]></Value>
        <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Lösenord]]></Value>
      </DictionaryItem>
      <DictionaryItem Key="34f7876f-4f13-40c8-816f-d5247ca8426b" Name="Register">
        <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Register]]></Value>
        <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Registrera]]></Value>
      </DictionaryItem>
      <DictionaryItem Key="4efb3a2b-bd9f-492f-a762-cbbca046bb34" Name="Remember Me">
        <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Remember Me]]></Value>
        <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Kom ihåg mig]]></Value>
      </DictionaryItem>
      <DictionaryItem Key="12893742-ec63-4b87-a7ff-c08ab9d56059" Name="Username">
        <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Username]]></Value>
        <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Användarnamn]]></Value>
      </DictionaryItem>
    </DictionaryItem>
    <DictionaryItem Key="3d6f96cc-1760-4724-ae54-6e0f04369381" Name="A password is required">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[A password is required]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Ett lösenord krävs]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="fb5743c5-ecb5-49e7-875c-7468b7086fa4" Name="Close">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Close]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Stäng]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="c9846fb2-a217-4c72-b624-a04bbe48f030" Name="Email">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Email]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[E-post]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="f0b1fc44-14ab-4765-8fe8-b6e9f7daf417" Name="Email is invalid">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Email is invalid]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Ogiltig e-post]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="0edb9f6c-0829-4e66-8180-789f36969a87" Name="Email Not Sent">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Email Not Sent]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Email Not Sent]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="cb834359-41b9-4eaf-b20b-66521c993fc8" Name="Email Sent">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Email Sent]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Email Sent]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="a36d8f3e-e8a0-4fb3-baaf-cf50c6cfe930" Name="Fullscreen">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Fullscreen]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Helskärm]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="6270fcfb-65df-49a6-958a-f4afa0693806" Name="Hide Password">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Hide Password]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Dölj lösenord]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="173ac945-7a01-434c-a80d-9e4b99f34ff9" Name="Invalid Auth">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Invalid Auth]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Invalid Auth]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="61e5035c-3ded-41b8-9beb-23be5497c90a" Name="Invalid username or password">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Invalid username or password]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Fel användarnamn eller lösenord]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="05920eca-0009-47ba-b8fa-2d7b7a7b18f0" Name="Jump to content">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Jump to content]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Hoppa till huvudinnehåll]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="b0533c1a-46f7-43d6-9751-9e937bac60e5" Name="Learn More">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Learn more]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Läs mer]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="750a5c63-eba8-4621-b8c0-0a233d4a00eb" Name="Load More">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Load More]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Ladda fler]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="40ba1486-3e81-4baf-bef5-471e261a1350" Name="Message">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Message]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Meddelande]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="2120e1e3-49c3-4276-9bdf-01aaafe0bf69" Name="Name">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Name]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Namn]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="665c2a06-65c9-4054-83fc-484386c06e32" Name="Newsletter Invalid Email">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Invalid Email]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Invalid Email]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="bd9f2966-fe6b-4645-b03b-4419ca0aa607" Name="Next">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Next (right arrow)]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Nästa (höger pil)]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="3422c59a-cc69-46e2-bed9-afff6cd6070e" Name="No Settings Node">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[No Settings Node]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[No Settings Node]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="72a5b611-ceea-4cea-959e-7ee31f53449e" Name="No Site Node">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[No Site Node]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[No Site Node]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="50238031-cae1-4a58-83e3-c057cbd89f08" Name="Previous">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Previous (left arrow)]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Föregående (vänster pil)]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="0989d21a-1060-436f-89f7-a02272428e90" Name="Scroll to top">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Scroll to top]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Åk till toppen]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="159004f6-b310-4477-9411-5a411d1d2e04" Name="Search">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Search]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Sök]]></Value>
      <DictionaryItem Key="13ca2ec2-8940-472f-b3cd-28c523137e34" Name="Search Placeholder">
        <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Search the site...]]></Value>
        <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Sök på sidan...]]></Value>
      </DictionaryItem>
      <DictionaryItem Key="4a274a5c-2aa3-48fa-adde-1864fe1084d1" Name="Show all results">
        <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Show all results]]></Value>
        <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Visa alla resultat]]></Value>
      </DictionaryItem>
      <DictionaryItem Key="6c010462-dc56-4ec5-98a6-7d6a53fb01ec" Name="Your Search">
        <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Your search]]></Value>
        <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Din sökning]]></Value>
      </DictionaryItem>
      <DictionaryItem Key="8da166ba-5b24-4609-b725-4937084f8d3b" Name="Gave">
        <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[gave]]></Value>
        <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[gav]]></Value>
      </DictionaryItem>
      <DictionaryItem Key="e6a908d1-d33e-46d9-8198-2ead7f2e2c54" Name="No Results Found">
        <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[No results found]]></Value>
        <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Hittade inga resultat]]></Value>
      </DictionaryItem>
      <DictionaryItem Key="cbdca2c3-6eca-46b8-8a8c-469e6cef68b9" Name="Result">
        <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[result]]></Value>
        <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[resultat]]></Value>
      </DictionaryItem>
      <DictionaryItem Key="f4906fb0-90a7-436f-b797-81661c5c3c6e" Name="Results">
        <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[results]]></Value>
        <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[resultat]]></Value>
      </DictionaryItem>
    </DictionaryItem>
    <DictionaryItem Key="7e2c637b-367f-4921-bc7c-375fdeab298e" Name="Send Message">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Send message]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Skicka meddelande]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="135d2379-965e-476c-882e-9efe5090c5b0" Name="Share">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Share]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Dela]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="dc80142d-0fa3-4c7c-a6df-8a3b15920aa0" Name="Show more">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Show more]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Visa fler]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="ddb91bb6-9610-4783-883a-fca69443f5a4" Name="Show Password">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Show password]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Visa lösenord]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="12268cde-6390-43ab-9b57-5b8b4a2f948f" Name="Show Subpages">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Show subpages]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Visa undersidor]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="d1af8cfb-aa0f-4df7-8836-336aba1ba850" Name="Subscriber Added">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Subscriber successfully added]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Subscriber successfully added]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="eb2ed586-72c1-4688-8ca0-b2f5139b4c9d" Name="Subscriber Not Added">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Subscriber could not be added]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Subscriber could not be added]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="4827dcab-eefe-4537-9b5e-9d85e0a60a4a" Name="Thank you">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Thank you]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Tack]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="d6367eea-3406-49bb-9fb4-8feb5c52423d" Name="The password is not strong enough">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[The password is not strong enough]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Ditt lösenord är inte tillräckligt starkt]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="890c68e5-bd30-4249-ab8c-6ebd07b6bb30" Name="Your email is required">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Your email is required]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Fyll i e-postadress]]></Value>
    </DictionaryItem>
    <DictionaryItem Key="9fb3652c-84ed-4b2d-9666-46583a4dadc7" Name="Confirm Password">
      <Value LanguageId="1" LanguageCultureAlias="en-US"><![CDATA[Confirm Password]]></Value>
      <Value LanguageId="2" LanguageCultureAlias="sv-SE"><![CDATA[Bekräfta lösenord]]></Value>
    </DictionaryItem>
  </DictionaryItems>
  <Languages>
    <Language Id="1" CultureAlias="en-US" FriendlyName="English (United States)" />
    <Language Id="2" CultureAlias="sv-SE" FriendlyName="Swedish (Sweden)" />
  </Languages>
  <DataTypes>
    <DataType Name="IG - Accordion - Block List" Id="Umbraco.BlockList" Definition="519a298b-ec72-4084-9146-4a92e4ee46ec" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;2737d440-ebb1-4b84-a8e0-d3da441b495d&quot;,&quot;label&quot;:&quot;{{header}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:true}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - App Icon - Image Cropper" Id="Umbraco.ImageCropper" Definition="817b2c5d-e9d3-4388-8310-3abf403b4fef" DatabaseType="Ntext" Configuration="{&quot;crops&quot;:[{&quot;alias&quot;:&quot;57x57&quot;,&quot;width&quot;:57,&quot;height&quot;:57},{&quot;alias&quot;:&quot;60x60&quot;,&quot;width&quot;:60,&quot;height&quot;:60},{&quot;alias&quot;:&quot;72x72&quot;,&quot;width&quot;:72,&quot;height&quot;:72},{&quot;alias&quot;:&quot;76x76&quot;,&quot;width&quot;:76,&quot;height&quot;:76},{&quot;alias&quot;:&quot;114x114&quot;,&quot;width&quot;:144,&quot;height&quot;:144},{&quot;alias&quot;:&quot;120x120&quot;,&quot;width&quot;:120,&quot;height&quot;:120},{&quot;alias&quot;:&quot;144x144&quot;,&quot;width&quot;:144,&quot;height&quot;:144},{&quot;alias&quot;:&quot;152x152&quot;,&quot;width&quot;:152,&quot;height&quot;:152},{&quot;alias&quot;:&quot;180x180&quot;,&quot;width&quot;:180,&quot;height&quot;:180}]}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Approved Color Picker" Id="IglooApprovedColorPicker" Definition="fab3daf9-11d0-453d-870a-386a109d8b6e" DatabaseType="Nvarchar" Configuration="{&quot;useTextColors&quot;:&quot;0&quot;,&quot;displayDark&quot;:&quot;1&quot;,&quot;displayWhite&quot;:&quot;1&quot;,&quot;displayGray&quot;:&quot;1&quot;,&quot;displayTheme&quot;:&quot;1&quot;,&quot;displayThemeAlt&quot;:&quot;1&quot;}" />
    <DataType Name="IG - Background - Approved Color" Id="IglooApprovedColorPicker" Definition="7d2401a5-67f0-4b78-bf39-df3e39c0bf7c" DatabaseType="Nvarchar" Configuration="{&quot;useTextColors&quot;:&quot;0&quot;,&quot;displayDark&quot;:&quot;1&quot;,&quot;displayWhite&quot;:&quot;1&quot;,&quot;displayGray&quot;:&quot;1&quot;,&quot;displayTheme&quot;:&quot;1&quot;,&quot;displayThemeAlt&quot;:&quot;1&quot;}" Folders="IG+-+Color+Pickers" FolderKeys="5e819d70-4553-42e0-a01b-d7d0880e1e26" />
    <DataType Name="IG - Button - Block List" Id="Umbraco.BlockList" Definition="69bc5d28-8798-44fc-9369-9e9763028592" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;40c9bce0-d361-4fbe-bc99-0aa78e403bcc&quot;,&quot;label&quot;:&quot;Button: {{buttonText}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:true}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - Button Color - Approved Color" Id="IglooApprovedColorPicker" Definition="84cfeaea-7c19-4bc1-a69f-51c0d38215c2" DatabaseType="Nvarchar" Configuration="{&quot;useTextColors&quot;:&quot;0&quot;,&quot;displayDark&quot;:&quot;1&quot;,&quot;displayWhite&quot;:&quot;1&quot;,&quot;displayGray&quot;:&quot;1&quot;,&quot;displayTheme&quot;:&quot;1&quot;,&quot;displayThemeAlt&quot;:&quot;1&quot;}" Folders="IG+-+Color+Pickers" FolderKeys="5e819d70-4553-42e0-a01b-d7d0880e1e26" />
    <DataType Name="IG - Button Size - Buttons" Id="BBB.ButtonPicker" Definition="b732e22b-fbe1-4861-873e-b8b9e2b8c1d6" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;default&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;small&quot;},{&quot;value&quot;:&quot;default&quot;},{&quot;value&quot;:&quot;big&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Button Style - Buttons" Id="BBB.ButtonPicker" Definition="34139324-442d-4453-96d4-59bfc1e0c3dc" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;solid&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;solid&quot;},{&quot;value&quot;:&quot;border&quot;},{&quot;value&quot;:&quot;underline&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Butttons butttons" Id="BBB.ButtonPicker" Definition="a58e1031-ba3a-465d-ba0f-5d8e253b6a49" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;test 1&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;test 1&quot;},{&quot;value&quot;:&quot;test 2&quot;}],&quot;small&quot;:&quot;0&quot;}" />
    <DataType Name="IG - Color Value" Id="ColorValue" Definition="ca5d09cb-6193-4b95-b7c1-bc3de01fea8d" DatabaseType="Nvarchar" Configuration="{}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Column Width - Dropdown" Id="Umbraco.DropDown.Flexible" Definition="8038005e-959e-4bd1-b958-59d9395b0fd9" DatabaseType="Nvarchar" Configuration="{&quot;multiple&quot;:false,&quot;items&quot;:[{&quot;id&quot;:1,&quot;value&quot;:&quot;10%&quot;},{&quot;id&quot;:2,&quot;value&quot;:&quot;20%&quot;},{&quot;id&quot;:3,&quot;value&quot;:&quot;25%&quot;},{&quot;id&quot;:4,&quot;value&quot;:&quot;30%&quot;},{&quot;id&quot;:5,&quot;value&quot;:&quot;33%&quot;},{&quot;id&quot;:6,&quot;value&quot;:&quot;40%&quot;},{&quot;id&quot;:7,&quot;value&quot;:&quot;50%&quot;},{&quot;id&quot;:8,&quot;value&quot;:&quot;60%&quot;},{&quot;id&quot;:9,&quot;value&quot;:&quot;66%&quot;},{&quot;id&quot;:10,&quot;value&quot;:&quot;70%&quot;},{&quot;id&quot;:11,&quot;value&quot;:&quot;75%&quot;},{&quot;id&quot;:12,&quot;value&quot;:&quot;80%&quot;},{&quot;id&quot;:13,&quot;value&quot;:&quot;90%&quot;},{&quot;id&quot;:14,&quot;value&quot;:&quot;100%&quot;}]}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Container Width - Buttons" Id="BBB.ButtonPicker" Definition="6cf36ab1-264f-48f4-8265-217127b86e25" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;standard&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;small&quot;},{&quot;value&quot;:&quot;standard&quot;},{&quot;value&quot;:&quot;big&quot;},{&quot;value&quot;:&quot;full width&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Content - Block List" Id="Umbraco.BlockList" Definition="e52e988a-65e8-45b0-87d7-dfa013357177" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;65c1e575-f011-4ed9-a381-45ba3e999dfd&quot;,&quot;settingsElementTypeKey&quot;:&quot;205e3278-edcb-408f-9441-b6e640a16994&quot;,&quot;label&quot;:&quot;Hero: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;b8e5a252-9cd9-4721-8042-e4cdcf53ccb5&quot;,&quot;settingsElementTypeKey&quot;:&quot;8c70fdc7-7f8b-4066-8597-685040b57eb8&quot;,&quot;label&quot;:&quot;Text: {{$settings.alias}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;e2514343-a1ac-4add-9c94-0144155314e1&quot;,&quot;settingsElementTypeKey&quot;:&quot;8ce0cf7e-d7ac-44e9-9a41-43b1c2b5e218&quot;,&quot;label&quot;:&quot;Grid: {{$settings.alias}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;3299ef93-f66e-40a2-9332-58999d727f8b&quot;,&quot;settingsElementTypeKey&quot;:&quot;36cd13aa-28fd-4794-9b0e-93130a836279&quot;,&quot;label&quot;:&quot;Image: {{$settings.alias}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;784a1ce7-6f10-4193-b38e-d2fcc40a6723&quot;,&quot;settingsElementTypeKey&quot;:&quot;d3f88ebb-9632-4a34-9e72-cd5ac01662be&quot;,&quot;label&quot;:&quot;Text &amp; Images: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;ce7a82e6-ae7e-42d1-93b5-4ad9a63adea3&quot;,&quot;settingsElementTypeKey&quot;:&quot;f7c9b96c-df58-4731-b5b3-6b68889f143f&quot;,&quot;label&quot;:&quot;Gallery: {{$settings.alias}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;81f47d43-e8ee-4c88-8dae-dab1026aa279&quot;,&quot;settingsElementTypeKey&quot;:&quot;24355ffa-4374-4572-9294-cb80bd36d4b5&quot;,&quot;label&quot;:&quot;Slider: {{$settings.alias}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;0fe6bab2-72e8-43de-85b1-440b5e69c9d2&quot;,&quot;settingsElementTypeKey&quot;:&quot;c9698ce7-9139-47dc-a425-55bd4a69be02&quot;,&quot;label&quot;:&quot;Tabs: {{$settings.alias}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;5b873ab9-b1f6-437e-a032-f27e3ef54b18&quot;,&quot;settingsElementTypeKey&quot;:&quot;23e47290-aa01-4ca2-8628-2e615650d1e3&quot;,&quot;label&quot;:&quot;Latest From Feed: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;a132d844-c400-4fa9-b89a-050d44c926ae&quot;,&quot;settingsElementTypeKey&quot;:&quot;cd3f0432-c88d-4445-8528-5ba949a6ffb9&quot;,&quot;label&quot;:&quot;Map&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;97c328b5-9396-474d-82f2-d9a3b5e48ffb&quot;,&quot;settingsElementTypeKey&quot;:&quot;aecb7749-9a41-4ee7-8b2b-9ac7399914fe&quot;,&quot;label&quot;:&quot;Form: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;b6cc6342-7e07-4f50-b9e2-9885cb30afd7&quot;,&quot;settingsElementTypeKey&quot;:&quot;e3f0d8eb-2d79-47a6-be02-c4ef39fad55e&quot;,&quot;label&quot;:&quot;Contact Form: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;f866582e-db2d-4860-a921-125b29d350d5&quot;,&quot;settingsElementTypeKey&quot;:&quot;e121803f-1163-45cb-b2cb-06afb0fdd1b4&quot;,&quot;label&quot;:&quot;Newsletter&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;7ff19af0-db86-4b10-b9d8-d3c6f605da5a&quot;,&quot;settingsElementTypeKey&quot;:&quot;93d0e548-cf13-43cf-8a7e-5413f9d7b5ec&quot;,&quot;label&quot;:&quot;Logos: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;07eb60f2-2b59-4bbf-9625-a5f7cd415873&quot;,&quot;settingsElementTypeKey&quot;:&quot;5a8a306a-7e32-458c-ae28-47ed276c5be1&quot;,&quot;label&quot;:&quot;{{imageCount}} images from Instagram&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;2dea4559-e7f4-43c9-b555-89905254e4c2&quot;,&quot;label&quot;:&quot;Global Content: {{alias}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;0df9634c-e387-4869-a2c6-b062d12b01ac&quot;,&quot;settingsElementTypeKey&quot;:&quot;f7f9ddaa-d847-4306-9120-c0f0732b2c15&quot;,&quot;label&quot;:&quot;Login&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;dad141d0-e5ec-4f4a-8203-a17354815eda&quot;,&quot;settingsElementTypeKey&quot;:&quot;4e50b1f9-06f4-4ddb-84cb-be81af4ba9a3&quot;,&quot;label&quot;:&quot;Register&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;86aae496-d228-4e4b-8da0-6a345ad9c1e1&quot;,&quot;label&quot;:&quot;Breadcrumbs&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;31a8bca8-8b5b-478e-b953-e1d898e2a9a0&quot;,&quot;settingsElementTypeKey&quot;:&quot;32a64675-aabe-437d-af11-f4c9bcc05cd4&quot;,&quot;label&quot;:&quot;People: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;75cb10ff-d704-4dc4-a1f0-4176cf2002d7&quot;,&quot;settingsElementTypeKey&quot;:&quot;e1b0b64d-57a8-46d8-9229-aa588f4b6269&quot;,&quot;label&quot;:&quot;Section Navigation&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:false}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - Cookie Consent Dialog Position - Buttons" Id="BBB.ButtonPicker" Definition="c631ac82-9d68-4a38-bf50-7e59676ef8fe" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;float-left&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;float-left&quot;},{&quot;value&quot;:&quot;float-right&quot;},{&quot;value&quot;:&quot;banner-bottom&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Dark Light - Approved Color" Id="IglooApprovedColorPicker" Definition="1b288bec-2cf1-42f0-a445-97bed308e0f3" DatabaseType="Nvarchar" Configuration="{&quot;useTextColors&quot;:&quot;0&quot;,&quot;displayDark&quot;:&quot;1&quot;,&quot;displayWhite&quot;:&quot;1&quot;,&quot;displayGray&quot;:&quot;0&quot;,&quot;displayTheme&quot;:&quot;0&quot;,&quot;displayThemeAlt&quot;:&quot;0&quot;}" Folders="IG+-+Color+Pickers" FolderKeys="5e819d70-4553-42e0-a01b-d7d0880e1e26" />
    <DataType Name="IG - Empty" Id="IglooMeasurmentValue" Definition="69d8e3b0-a7b1-4b31-bba3-bba3942ba5eb" DatabaseType="Nvarchar" Configuration="{}" Folders="IG+-+Measurement+Values" FolderKeys="4548e363-4101-4807-9c5d-9230e51379fd" />
    <DataType Name="IG - Favicon - Image Cropper" Id="Umbraco.ImageCropper" Definition="f7d04efb-bffb-4c18-9c12-eadbec579e65" DatabaseType="Ntext" Configuration="{&quot;crops&quot;:[{&quot;alias&quot;:&quot;16x16&quot;,&quot;width&quot;:16,&quot;height&quot;:16},{&quot;alias&quot;:&quot;32x32&quot;,&quot;width&quot;:32,&quot;height&quot;:32},{&quot;alias&quot;:&quot;96x96&quot;,&quot;width&quot;:96,&quot;height&quot;:96},{&quot;alias&quot;:&quot;144x144&quot;,&quot;width&quot;:144,&quot;height&quot;:144},{&quot;alias&quot;:&quot;192x192&quot;,&quot;width&quot;:192,&quot;height&quot;:192}]}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Feed Picker - Multinode Treepicker" Id="Umbraco.MultiNodeTreePicker" Definition="65560ed5-25bf-4647-825b-8386096daa7f" DatabaseType="Ntext" Configuration="{&quot;startNode&quot;:{&quot;type&quot;:&quot;content&quot;},&quot;filter&quot;:&quot;feed&quot;,&quot;minNumber&quot;:1,&quot;maxNumber&quot;:1,&quot;showOpenButton&quot;:false,&quot;ignoreUserStartNodes&quot;:false}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Footer - Block List" Id="Umbraco.BlockList" Definition="c1827e31-bbb9-4873-8baf-f74e14e2f9cc" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;b76c2c24-eed7-486c-992f-bf822ebd0c44&quot;,&quot;settingsElementTypeKey&quot;:&quot;7e62e411-c121-493f-aed6-85c7d3f2f4c9&quot;,&quot;label&quot;:&quot;Contact: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;2d7b51ca-1992-4664-8a44-740abd1fd523&quot;,&quot;settingsElementTypeKey&quot;:&quot;7a5e0631-1d73-45e5-b521-6199880a639a&quot;,&quot;label&quot;:&quot;Navigation: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;ac377d56-9d30-4fdd-ab43-4e1daa10c977&quot;,&quot;settingsElementTypeKey&quot;:&quot;a2a2cb54-457b-49e4-92a7-169172f50072&quot;,&quot;label&quot;:&quot;Text: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;1fe385ec-077d-4203-a320-5bf2e90952db&quot;,&quot;settingsElementTypeKey&quot;:&quot;51d6f169-d8a2-417e-b610-4660bd2905c9&quot;,&quot;label&quot;:&quot;Opening Hours: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;5fe24843-0d8c-4203-aa70-88beeeb15a9b&quot;,&quot;settingsElementTypeKey&quot;:&quot;8f19ef94-3611-4498-baa7-d7a7a3bfa829&quot;,&quot;label&quot;:&quot;Social Links: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;6d514a6c-208c-439e-bae9-7d978770a83a&quot;,&quot;settingsElementTypeKey&quot;:&quot;24ee4f4a-e7ad-40af-b2d6-b97713ae35a9&quot;,&quot;label&quot;:&quot;Logos: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;df7e9574-9031-42b1-9242-4f38afcafd17&quot;,&quot;label&quot;:&quot;Line Break&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;96653479-502e-4b35-80db-b284f009660b&quot;,&quot;settingsElementTypeKey&quot;:&quot;400528d9-878f-460a-b524-33ffe4f609b2&quot;,&quot;label&quot;:&quot;Code: {{alias}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:false}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - Form Picker" Id="UmbracoForms.FormPicker" Definition="ba334926-a94e-4c21-b392-9011ae9c7596" DatabaseType="Nvarchar" Configuration="{&quot;allowedForms&quot;:[]}" />
    <DataType Name="IG - Gallery Group - Buttons" Id="BBB.ButtonPicker" Definition="832cf79a-85c5-4bce-b481-32fd19df842d" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;2&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;1&quot;},{&quot;value&quot;:&quot;2&quot;},{&quot;value&quot;:&quot;3&quot;},{&quot;value&quot;:&quot;4&quot;},{&quot;value&quot;:&quot;5&quot;},{&quot;value&quot;:&quot;6&quot;},{&quot;value&quot;:&quot;7&quot;},{&quot;value&quot;:&quot;8&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Global Content - Multinode Treepicker" Id="Umbraco.MultiNodeTreePicker" Definition="e44641d3-fb9a-40a6-99f4-4ced0d4e27d0" DatabaseType="Ntext" Configuration="{&quot;startNode&quot;:{&quot;type&quot;:&quot;content&quot;},&quot;filter&quot;:&quot;globalContent&quot;,&quot;minNumber&quot;:1,&quot;maxNumber&quot;:0,&quot;showOpenButton&quot;:false,&quot;ignoreUserStartNodes&quot;:false}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Grid - Block List" Id="Umbraco.BlockList" Definition="469835c1-85cf-4c69-9adf-abe321ae0c19" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;cd1ea4e8-1ebf-4b28-8741-1249db54e0de&quot;,&quot;settingsElementTypeKey&quot;:&quot;6b3ac4fc-f278-4a14-a494-31bee51d3535&quot;,&quot;label&quot;:&quot;Header: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;b7cc25f0-bba4-4277-b86c-6a1a7fb79e60&quot;,&quot;settingsElementTypeKey&quot;:&quot;39028863-be61-49b2-8c0a-ec957ed7bb14&quot;,&quot;label&quot;:&quot;Text: {{$settings.alias}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;d5caef96-f8b6-49c5-b9a7-d677bbd2a2ce&quot;,&quot;settingsElementTypeKey&quot;:&quot;fd0e14f8-4a27-42bb-a222-9ce61f53ad4a&quot;,&quot;label&quot;:&quot;Image: {{$settings.alias}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;6575bbfd-80a8-4858-b768-f132008c512a&quot;,&quot;settingsElementTypeKey&quot;:&quot;eff38b8a-ed21-422b-a183-51d5cc1ecbfd&quot;,&quot;label&quot;:&quot;Quote: {{author}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;4c147893-6ed5-4cfe-94b0-e5e1abd47bc5&quot;,&quot;settingsElementTypeKey&quot;:&quot;4eb78ece-3148-43ff-a2d9-05f978b73136&quot;,&quot;label&quot;:&quot;Pod: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;7d9b889c-a1ec-439f-ab8a-5751cdcd1bc8&quot;,&quot;settingsElementTypeKey&quot;:&quot;dd238527-6f11-4ae5-a6e1-82ed10973c80&quot;,&quot;label&quot;:&quot;Card: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;4d69a51a-9228-47bd-889a-a096cc462494&quot;,&quot;settingsElementTypeKey&quot;:&quot;0dc099b3-93f5-4efc-9b63-59dbbe3ea2b2&quot;,&quot;label&quot;:&quot;Code: {{$settings.alias}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;e75583e7-d4fb-43ad-b9a7-19e24c9cab94&quot;,&quot;settingsElementTypeKey&quot;:&quot;7c3885db-6a34-47a0-9f11-68d39911ef95&quot;,&quot;label&quot;:&quot;Accordion&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;d7cf324f-8b85-479b-8602-8c27c2923062&quot;,&quot;settingsElementTypeKey&quot;:&quot;af3a038a-321a-4e18-91fd-482294b6b49a&quot;,&quot;label&quot;:&quot;Price List: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;df7e9574-9031-42b1-9242-4f38afcafd17&quot;,&quot;label&quot;:&quot;Line Break&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;2837c09e-0f5d-4f45-a54f-7d916c78b624&quot;,&quot;settingsElementTypeKey&quot;:&quot;dc62c23f-3370-416e-9842-e137404eefbb&quot;,&quot;label&quot;:&quot;Button&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;3f39d34e-5a92-4314-9575-6aa4f22a1972&quot;,&quot;settingsElementTypeKey&quot;:&quot;a62fc95e-4f14-4511-9963-7dec8ca9b652&quot;,&quot;label&quot;:&quot;Video&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;95506bd0-a381-46ae-93d0-13b08d64468a&quot;,&quot;settingsElementTypeKey&quot;:&quot;0b43179e-f066-497b-9bab-d79e252baf22&quot;,&quot;label&quot;:&quot;Umbraco Form&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;fbe4c615-cbcf-4e73-97cf-d7c39d9da36d&quot;,&quot;settingsElementTypeKey&quot;:&quot;b3966f22-bbcc-4c52-ae80-fc4861f8c360&quot;,&quot;label&quot;:&quot;Price Table: {{priceTableName}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;c55309d0-b610-4982-af8d-476277b67d28&quot;,&quot;settingsElementTypeKey&quot;:&quot;c21ca0cf-b285-419d-a454-bb2834de77d9&quot;,&quot;label&quot;:&quot;Navigation&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;d617d105-7b12-4d7f-9089-00655499ea53&quot;,&quot;settingsElementTypeKey&quot;:&quot;05bcf02e-cd17-428a-b2ea-166215471797&quot;,&quot;label&quot;:&quot;Sub Grid: {{$settings.alias}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;54671d17-27be-4e11-b40c-cf7cb63e4c41&quot;,&quot;settingsElementTypeKey&quot;:&quot;fa54a149-a1e9-4df1-8db1-7cb8f2ab3e8b&quot;,&quot;label&quot;:&quot;Slider&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;46351328-7d3d-4934-a822-c6eb5994f8ac&quot;,&quot;settingsElementTypeKey&quot;:&quot;b94eddd7-fdf4-4240-ade3-2991c934bc3a&quot;,&quot;label&quot;:&quot;Person: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:false}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - Header Layout - Buttons" Id="BBB.ButtonPicker" Definition="85c53ccd-7fac-4c2a-8203-033165986ab3" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;navigation-right&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;navigation-left&quot;},{&quot;value&quot;:&quot;navigation-center&quot;},{&quot;value&quot;:&quot;navigation-right&quot;},{&quot;value&quot;:&quot;navigation-left-logo-center&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Height - Dropdown" Id="Umbraco.DropDown.Flexible" Definition="35b8f870-24ec-4b5c-81f3-03ef5a755c31" DatabaseType="Nvarchar" Configuration="{&quot;multiple&quot;:false,&quot;items&quot;:[{&quot;id&quot;:1,&quot;value&quot;:&quot;25%&quot;},{&quot;id&quot;:2,&quot;value&quot;:&quot;30%&quot;},{&quot;id&quot;:3,&quot;value&quot;:&quot;35%&quot;},{&quot;id&quot;:4,&quot;value&quot;:&quot;40%&quot;},{&quot;id&quot;:5,&quot;value&quot;:&quot;45%&quot;},{&quot;id&quot;:6,&quot;value&quot;:&quot;50%&quot;},{&quot;id&quot;:7,&quot;value&quot;:&quot;55%&quot;},{&quot;id&quot;:8,&quot;value&quot;:&quot;60%&quot;},{&quot;id&quot;:9,&quot;value&quot;:&quot;65%&quot;},{&quot;id&quot;:10,&quot;value&quot;:&quot;70%&quot;},{&quot;id&quot;:11,&quot;value&quot;:&quot;75%&quot;},{&quot;id&quot;:12,&quot;value&quot;:&quot;80%&quot;},{&quot;id&quot;:13,&quot;value&quot;:&quot;85%&quot;},{&quot;id&quot;:14,&quot;value&quot;:&quot;90%&quot;},{&quot;id&quot;:15,&quot;value&quot;:&quot;95%&quot;},{&quot;id&quot;:16,&quot;value&quot;:&quot;100%&quot;}]}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Horizontal Align Columns - Buttons" Id="BBB.ButtonPicker" Definition="5099d81b-7b38-4c8c-8c14-802c86fe2a31" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;left&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;left&quot;},{&quot;value&quot;:&quot;center&quot;},{&quot;value&quot;:&quot;right&quot;},{&quot;value&quot;:&quot;space-around&quot;},{&quot;value&quot;:&quot;space-between&quot;},{&quot;value&quot;:&quot;space-evenly&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Horizontal Alignment - Buttons" Id="BBB.ButtonPicker" Definition="70b5690f-87e8-47e3-a346-487e1adca9eb" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;left&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;left&quot;},{&quot;value&quot;:&quot;center&quot;},{&quot;value&quot;:&quot;right&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Icon Picker" Id="IconPicker" Definition="bca16803-e645-46ea-ae32-26d7d4d98456" DatabaseType="Nvarchar" Configuration="{}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Left and Right - Buttons" Id="BBB.ButtonPicker" Definition="a013a3d1-0483-4a72-9ff5-0b29f5a9638c" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;left&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;left&quot;},{&quot;value&quot;:&quot;right&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Level of Children - Buttons" Id="BBB.ButtonPicker" Definition="0435cc8d-1265-4aee-baa8-0318af998e11" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;0&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;0&quot;},{&quot;value&quot;:&quot;1&quot;},{&quot;value&quot;:&quot;2&quot;},{&quot;value&quot;:&quot;3&quot;},{&quot;value&quot;:&quot;4&quot;},{&quot;value&quot;:&quot;5&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Link - Multi Url Picker" Id="Umbraco.MultiUrlPicker" Definition="ded9b564-0a63-4fe5-84bf-606d84e5d55e" DatabaseType="Ntext" Configuration="{&quot;minNumber&quot;:0,&quot;maxNumber&quot;:1,&quot;ignoreUserStartNodes&quot;:false,&quot;hideAnchor&quot;:false}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Links - Multi Url Picker" Id="Umbraco.MultiUrlPicker" Definition="83017a20-dd69-4616-ac8c-c435cda4aef4" DatabaseType="Ntext" Configuration="{&quot;minNumber&quot;:0,&quot;maxNumber&quot;:0,&quot;ignoreUserStartNodes&quot;:false,&quot;hideAnchor&quot;:false}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Logo - Block List" Id="Umbraco.BlockList" Definition="3a7d14c4-0cd2-4dfe-9b46-4efd25c06ee5" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;ca8f8a77-c960-41e1-9053-94867eb436ec&quot;,&quot;label&quot;:&quot;Logo: {{alias}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:true}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - Media Picker" Id="Umbraco.MediaPicker3" Definition="d195af77-4fe1-41ed-a70e-91cad8f35595" DatabaseType="Ntext" Configuration="{&quot;filter&quot;:&quot;Image,umbracoMediaVectorGraphics,umbracoMediaVideo&quot;,&quot;multiple&quot;:false,&quot;validationLimit&quot;:{},&quot;enableLocalFocalPoint&quot;:true,&quot;crops&quot;:[],&quot;ignoreUserStartNodes&quot;:false}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Member Group - Member Group Picker" Id="Umbraco.MemberGroupPicker" Definition="ddd26c18-7ec2-4e12-83a2-8586e0da446a" DatabaseType="Ntext" Configuration="{}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Member Group - Member Group Picker (1)" Id="Umbraco.MemberGroupPicker" Definition="351a542a-c814-44b0-a040-719907207538" DatabaseType="Ntext" Configuration="{}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Member Visibility - Buttons" Id="BBB.ButtonPicker" Definition="34e4fb07-73b4-4967-90d4-909288dc6a12" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;Always&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;Always&quot;},{&quot;value&quot;:&quot;Logged In&quot;},{&quot;value&quot;:&quot;Logged Out&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Navigation - Block List" Id="Umbraco.BlockList" Definition="15892b2e-f3f9-4f67-947e-a1609b519b7e" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;501d90c0-b088-46db-9599-9114a812abfd&quot;,&quot;label&quot;:&quot;{{navName}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;405b2bf6-f99b-4a73-9e4c-b69559b10add&quot;,&quot;label&quot;:&quot;{{navName}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:true}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - Navigation Children - Block List" Id="Umbraco.BlockList" Definition="320cbdcb-48b3-4c62-83f9-12713bff5380" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;501d90c0-b088-46db-9599-9114a812abfd&quot;,&quot;label&quot;:&quot;{{navName}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:true}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - Navigation Grid - Block List" Id="Umbraco.BlockList" Definition="7a2cdb0d-0ef4-4ec4-946a-100ec591147a" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;e2514343-a1ac-4add-9c94-0144155314e1&quot;,&quot;settingsElementTypeKey&quot;:&quot;8ce0cf7e-d7ac-44e9-9a41-43b1c2b5e218&quot;,&quot;label&quot;:&quot;Navigation Grid: {{alias}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:false}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - Newsletter Provider - Dropdown" Id="Umbraco.DropDown.Flexible" Definition="41796c33-e07a-4eb7-aa6c-2617d0af0b9b" DatabaseType="Nvarchar" Configuration="{&quot;multiple&quot;:false,&quot;items&quot;:[{&quot;id&quot;:1,&quot;value&quot;:&quot;MailChimp&quot;},{&quot;id&quot;:2,&quot;value&quot;:&quot;Campaign Monitor&quot;}]}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Opening Hours - Block List" Id="Umbraco.BlockList" Definition="023fd8c5-910a-4988-86c0-409bcaf5c00a" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;d4696222-fde5-4bdb-9a56-38154ee9adca&quot;,&quot;label&quot;:&quot;{{day}} - {{time}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:true}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - Overlay Opacity - Dropdown" Id="Umbraco.DropDown.Flexible" Definition="c9c4631b-7987-40d5-aa06-a8da7cc783ff" DatabaseType="Nvarchar" Configuration="{&quot;multiple&quot;:false,&quot;items&quot;:[{&quot;id&quot;:1,&quot;value&quot;:&quot;10%&quot;},{&quot;id&quot;:2,&quot;value&quot;:&quot;15%&quot;},{&quot;id&quot;:3,&quot;value&quot;:&quot;20%&quot;},{&quot;id&quot;:4,&quot;value&quot;:&quot;25%&quot;},{&quot;id&quot;:5,&quot;value&quot;:&quot;30%&quot;},{&quot;id&quot;:6,&quot;value&quot;:&quot;35%&quot;},{&quot;id&quot;:7,&quot;value&quot;:&quot;40%&quot;},{&quot;id&quot;:8,&quot;value&quot;:&quot;45%&quot;},{&quot;id&quot;:9,&quot;value&quot;:&quot;50%&quot;},{&quot;id&quot;:10,&quot;value&quot;:&quot;55%&quot;},{&quot;id&quot;:11,&quot;value&quot;:&quot;60%&quot;},{&quot;id&quot;:12,&quot;value&quot;:&quot;65%&quot;},{&quot;id&quot;:13,&quot;value&quot;:&quot;70%&quot;},{&quot;id&quot;:14,&quot;value&quot;:&quot;75%&quot;},{&quot;id&quot;:15,&quot;value&quot;:&quot;80%&quot;},{&quot;id&quot;:16,&quot;value&quot;:&quot;85%&quot;},{&quot;id&quot;:17,&quot;value&quot;:&quot;90%&quot;},{&quot;id&quot;:18,&quot;value&quot;:&quot;95%&quot;}]}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - People - Multinode Treepicker" Id="Umbraco.MultiNodeTreePicker" Definition="e6fa976b-569e-43b6-98e5-64330b8d8e68" DatabaseType="Ntext" Configuration="{&quot;startNode&quot;:{&quot;type&quot;:&quot;content&quot;},&quot;filter&quot;:&quot;person&quot;,&quot;minNumber&quot;:0,&quot;maxNumber&quot;:0,&quot;showOpenButton&quot;:false,&quot;ignoreUserStartNodes&quot;:false}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - People Per Row - Buttons" Id="BBB.ButtonPicker" Definition="3abfdf86-5f14-4c80-9918-60f8a2cd7a89" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;3&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;2&quot;},{&quot;value&quot;:&quot;3&quot;},{&quot;value&quot;:&quot;4&quot;},{&quot;value&quot;:&quot;5&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Person - Multinode Treepicker" Id="Umbraco.MultiNodeTreePicker" Definition="96ad0c2e-0bbf-4efe-8fa0-fc3efe7c97a3" DatabaseType="Ntext" Configuration="{&quot;startNode&quot;:{&quot;type&quot;:&quot;content&quot;},&quot;filter&quot;:&quot;person&quot;,&quot;minNumber&quot;:1,&quot;maxNumber&quot;:1,&quot;showOpenButton&quot;:false,&quot;ignoreUserStartNodes&quot;:false}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Pixel Value" Id="IglooMeasurmentValue" Definition="c5babca9-845d-484f-a896-0aacd90ba311" DatabaseType="Nvarchar" Configuration="{&quot;measurment&quot;:&quot;px&quot;}" Folders="IG+-+Measurement+Values" FolderKeys="4548e363-4101-4807-9c5d-9230e51379fd" />
    <DataType Name="IG - Pixels" Id="IglooMeasurmentValue" Definition="0e5332d8-5b2d-4bf6-bafa-2a8db971a722" DatabaseType="Nvarchar" Configuration="{&quot;measurment&quot;:&quot;px&quot;}" />
    <DataType Name="IG - Price List - Block List" Id="Umbraco.BlockList" Definition="0f476df4-ec39-43b4-b1f4-61c04318af4a" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;c271f6bb-ca52-4da6-acff-c7f2307b8659&quot;,&quot;label&quot;:&quot;Item: {{title}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:true}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - Price Table Features - Repeatable textstrings" Id="Umbraco.MultipleTextstring" Definition="212a6026-cc0a-440d-bacc-8e10a464ce60" DatabaseType="Ntext" Configuration="{&quot;Minimum&quot;:0,&quot;Maximum&quot;:0}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Rem Value" Id="IglooMeasurmentValue" Definition="a87d223b-7045-40d5-97ba-ec9bd4d5ea3d" DatabaseType="Nvarchar" Configuration="{&quot;measurment&quot;:&quot;rem&quot;}" Folders="IG+-+Measurement+Values" FolderKeys="4548e363-4101-4807-9c5d-9230e51379fd" />
    <DataType Name="IG - Section Navigation - Block List" Id="Umbraco.BlockList" Definition="a187e686-a477-4674-90f2-e4ac8cce4259" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;4ff9fb93-14cd-4e1f-abe5-09ce6bce9d12&quot;,&quot;label&quot;:&quot;{{linkName}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:true}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - Sidebar - Block List" Id="Umbraco.BlockList" Definition="bb383062-0f0b-4a2c-893d-25fabb993762" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;e995a2c7-7163-469a-80c7-bc6b5727b7bc&quot;,&quot;label&quot;:&quot;Text: {{heading}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;00c727f6-9aaa-4cc6-af39-01616e7d23c8&quot;,&quot;label&quot;:&quot;Navigation&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false},{&quot;contentElementTypeKey&quot;:&quot;40c9bce0-d361-4fbe-bc99-0aa78e403bcc&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:true}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - Sitemap Page Change Frequently - Buttons" Id="BBB.ButtonPicker" Definition="ee749aa6-b1fa-496c-a0f7-15317ef3ef64" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;daily&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;always&quot;},{&quot;value&quot;:&quot;hourly&quot;},{&quot;value&quot;:&quot;daily&quot;},{&quot;value&quot;:&quot;weekly&quot;},{&quot;value&quot;:&quot;monthly&quot;},{&quot;value&quot;:&quot;yearly&quot;},{&quot;value&quot;:&quot;never&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Sitemap Page Priority - Buttons" Id="BBB.ButtonPicker" Definition="57458336-60a6-46a9-9e35-99768e55d919" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;0.5&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;0&quot;},{&quot;value&quot;:&quot;0.1&quot;},{&quot;value&quot;:&quot;0.2&quot;},{&quot;value&quot;:&quot;0.3&quot;},{&quot;value&quot;:&quot;0.4&quot;},{&quot;value&quot;:&quot;0.5&quot;},{&quot;value&quot;:&quot;0.6&quot;},{&quot;value&quot;:&quot;0.7&quot;},{&quot;value&quot;:&quot;0.8&quot;},{&quot;value&quot;:&quot;0.9&quot;},{&quot;value&quot;:&quot;1.0&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Sub Header - Block List" Id="Umbraco.BlockList" Definition="b549b99c-0d06-4370-a05f-53b4f756d48c" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;e6adc0f3-6cb4-4d20-b480-2cd04a15ea19&quot;,&quot;label&quot;:&quot;{{title}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:true}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - Tabs - Block List" Id="Umbraco.BlockList" Definition="e936b4c8-9679-43bb-8276-7361b5ac0e89" DatabaseType="Ntext" Configuration="{&quot;blocks&quot;:[{&quot;contentElementTypeKey&quot;:&quot;cdc9b8e3-defc-4ed9-a579-db56daaf2401&quot;,&quot;label&quot;:&quot;{{title}}&quot;,&quot;editorSize&quot;:&quot;medium&quot;,&quot;forceHideContentEditorInOverlay&quot;:false}],&quot;validationLimit&quot;:{},&quot;useLiveEditing&quot;:false,&quot;useInlineEditingAsDefault&quot;:true}" Folders="IG+-+Block+List" FolderKeys="2939b3e9-7ff4-4204-9a3d-54607797e180" />
    <DataType Name="IG - Text - Rich Text Editor" Id="Umbraco.TinyMCE" Definition="558c2f81-e36f-4e32-b038-52ea5db20d3c" DatabaseType="Ntext" Configuration="{&quot;editor&quot;:{&quot;toolbar&quot;:[&quot;ace&quot;,&quot;removeformat&quot;,&quot;styleselect&quot;,&quot;bold&quot;,&quot;italic&quot;,&quot;underline&quot;,&quot;strikethrough&quot;,&quot;alignleft&quot;,&quot;aligncenter&quot;,&quot;alignright&quot;,&quot;bullist&quot;,&quot;numlist&quot;,&quot;outdent&quot;,&quot;indent&quot;,&quot;link&quot;,&quot;unlink&quot;,&quot;anchor&quot;,&quot;umbmediapicker&quot;,&quot;umbmacro&quot;,&quot;table&quot;,&quot;umbembeddialog&quot;,&quot;hr&quot;],&quot;stylesheets&quot;:[&quot;/css/rte-formats.css&quot;],&quot;maxImageSize&quot;:850,&quot;mode&quot;:&quot;classic&quot;},&quot;hideLabel&quot;:false,&quot;ignoreUserStartNodes&quot;:false}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Text Color - Approved Color" Id="IglooApprovedColorPicker" Definition="b57a1e48-2a3e-424f-9233-aeb10a35b207" DatabaseType="Nvarchar" Configuration="{&quot;useTextColors&quot;:&quot;1&quot;,&quot;displayDark&quot;:&quot;1&quot;,&quot;displayWhite&quot;:&quot;1&quot;,&quot;displayGray&quot;:&quot;0&quot;,&quot;displayTheme&quot;:&quot;0&quot;,&quot;displayThemeAlt&quot;:&quot;0&quot;}" Folders="IG+-+Color+Pickers" FolderKeys="5e819d70-4553-42e0-a01b-d7d0880e1e26" />
    <DataType Name="IG - Text Size - Buttons" Id="BBB.ButtonPicker" Definition="52bfff5a-a819-4627-949d-8b5736d31cb6" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;normal&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;small&quot;},{&quot;value&quot;:&quot;normal&quot;},{&quot;value&quot;:&quot;big&quot;},{&quot;value&quot;:&quot;xl&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - To Top Button Color - Approved Color" Id="IglooApprovedColorPicker" Definition="f88e9541-af93-4b65-a3a3-0e658361e13d" DatabaseType="Nvarchar" Configuration="{&quot;useTextColors&quot;:&quot;0&quot;,&quot;displayDark&quot;:&quot;1&quot;,&quot;displayWhite&quot;:&quot;1&quot;,&quot;displayGray&quot;:&quot;0&quot;,&quot;displayTheme&quot;:&quot;1&quot;,&quot;displayThemeAlt&quot;:&quot;1&quot;}" Folders="IG+-+Color+Pickers" FolderKeys="5e819d70-4553-42e0-a01b-d7d0880e1e26" />
    <DataType Name="IG - Vertical Align Columns - Buttons" Id="BBB.ButtonPicker" Definition="c2ba2f72-e94f-434c-ac20-de4ee6230183" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;top&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;top&quot;},{&quot;value&quot;:&quot;center&quot;},{&quot;value&quot;:&quot;bottom&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
    <DataType Name="IG - Vertical Alignment - Buttons" Id="BBB.ButtonPicker" Definition="f4bff246-8d6e-43a4-88c1-379bacba7377" DatabaseType="Nvarchar" Configuration="{&quot;defaultValue&quot;:&quot;top&quot;,&quot;buttons&quot;:[{&quot;value&quot;:&quot;top&quot;},{&quot;value&quot;:&quot;center&quot;},{&quot;value&quot;:&quot;bottom&quot;}],&quot;small&quot;:&quot;0&quot;}" Folders="IG+-+Content" FolderKeys="dce161a3-cee7-4fe0-be04-177042691ac4" />
  </DataTypes>
  <MediaItems />
</umbPackage>